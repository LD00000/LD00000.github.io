{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/iron-man.jpg","path":"images/iron-man.jpg","modified":0,"renderable":0},{"_id":"themes/yilia/source/main.b3331d.css","path":"main.b3331d.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/slider.445162.js","path":"slider.445162.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/main.b3331d.js","path":"main.b3331d.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/mobile.8d90af.js","path":"mobile.8d90af.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.3a9902.eot","path":"fonts/iconfont.3a9902.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.6e162c.woff","path":"fonts/iconfont.6e162c.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.9abe9f.svg","path":"fonts/iconfont.9abe9f.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.d0da7e.ttf","path":"fonts/iconfont.d0da7e.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/material/source/css/disqus-proxy.css","path":"css/disqus-proxy.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/duoshuo.css","path":"css/duoshuo.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/disqus-proxy.min.css","path":"css/disqus-proxy.min.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/duoshuo.min.css","path":"css/duoshuo.min.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/fontawesome.min.css","path":"css/fontawesome.min.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/ie-blocker.css","path":"css/ie-blocker.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/gallery.min.css","path":"css/gallery.min.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/style.min.css","path":"css/style.min.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/uc.css","path":"css/uc.css","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff","path":"fonts/MaterialIcons-Regular.woff","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff2","path":"fonts/MaterialIcons-Regular.woff2","modified":1,"renderable":1},{"_id":"themes/material/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/bg.png","path":"img/bg.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/browserstack_logo.png","path":"img/browserstack_logo.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/logo.png","path":"img/logo.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/sidebar_header.png","path":"img/sidebar_header.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/upyun_logo.svg","path":"img/upyun_logo.svg","modified":1,"renderable":1},{"_id":"themes/material/source/js/ie-blocker.en.js","path":"js/ie-blocker.en.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/ie-blocker.zhCN.js","path":"js/ie-blocker.zhCN.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/lazyload.min.js","path":"js/lazyload.min.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/lsloader.js","path":"js/lsloader.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/lsloader.min.js","path":"js/lsloader.min.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/mathjax.js","path":"js/mathjax.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/nprogress.js","path":"js/nprogress.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/queue.js","path":"js/queue.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/queue.min.js","path":"js/queue.min.js","modified":1,"renderable":1},{"_id":"themes/material/source/css/material.min.css","path":"css/material.min.css","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.ttf","path":"fonts/MaterialIcons-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/material/source/img/daily_pic.png","path":"img/daily_pic.png","modified":1,"renderable":1},{"_id":"themes/material/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/js.min.js","path":"js/js.min.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/smoothscroll.js","path":"js/smoothscroll.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/js.js","path":"js/js.js","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/FontAwesome.otf","path":"fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/material/source/css/material.css","path":"css/material.css","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.eot","path":"fonts/MaterialIcons-Regular.eot","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-facebook.svg","path":"img/footer/footer_ico-facebook.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-bilibili.svg","path":"img/footer/footer_ico-bilibili.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-github.svg","path":"img/footer/footer_ico-github.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-telegram.svg","path":"img/footer/footer_ico-telegram.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-tumblr.svg","path":"img/footer/footer_ico-tumblr.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-twitter.svg","path":"img/footer/footer_ico-twitter.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-weibo.svg","path":"img/footer/footer_ico-weibo.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-zhihu.svg","path":"img/footer/footer_ico-zhihu.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/gallery/arrow.svg","path":"img/gallery/arrow.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/gallery/close.svg","path":"img/gallery/close.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/gallery/spinner.svg","path":"img/gallery/spinner.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-10.png","path":"img/random/material-10.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-12.png","path":"img/random/material-12.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-17.png","path":"img/random/material-17.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-19.png","path":"img/random/material-19.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-3.png","path":"img/random/material-3.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-4.png","path":"img/random/material-4.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-6.png","path":"img/random/material-6.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-8.png","path":"img/random/material-8.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-9.png","path":"img/random/material-9.png","modified":1,"renderable":1},{"_id":"themes/material/source/js/gallery/gallery.js","path":"js/gallery/gallery.js","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-1.png","path":"img/random/material-1.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-11.png","path":"img/random/material-11.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-13.png","path":"img/random/material-13.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-14.png","path":"img/random/material-14.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-15.png","path":"img/random/material-15.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-18.png","path":"img/random/material-18.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-16.png","path":"img/random/material-16.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-2.png","path":"img/random/material-2.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-5.png","path":"img/random/material-5.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-7.png","path":"img/random/material-7.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-instagram.svg","path":"img/footer/footer_ico-instagram.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-gplus.svg","path":"img/footer/footer_ico-gplus.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-linkedin.svg","path":"img/footer/footer_ico-linkedin.svg","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Black.ttf","path":"fonts/Roboto-Black.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Bold.ttf","path":"fonts/Roboto-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Light.ttf","path":"fonts/Roboto-Light.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Medium.ttf","path":"fonts/Roboto-Medium.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Regular.ttf","path":"fonts/Roboto-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Thin.ttf","path":"fonts/Roboto-Thin.ttf","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","path":"css/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"5e63ee22f77cd4f236fdf627029fa5f53b2f7bf0","modified":1497839871465},{"_id":"themes/yilia/README.md","hash":"8444a63c50d8a7e40bb3f1f10e549a60da94a21f","modified":1497926712471},{"_id":"themes/yilia/_config.yml","hash":"d7b8683d4ab6c81e1eace2fc4e9049eb8321c388","modified":1497927835395},{"_id":"themes/yilia/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1497926712471},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1497926712479},{"_id":"source/_drafts/css.md","hash":"057168483f9482f1593e2bdad34c8afba424bcae","modified":1495440797663},{"_id":"source/_posts/aspects_are_not_applied.md","hash":"48665ab209925fbf840436533d175b8f6f63c3b0","modified":1523602802716},{"_id":"source/_posts/github-pages-jekyll.md","hash":"88248598546e3441916f768c3ed228ee071a1d2a","modified":1495440275751},{"_id":"source/_posts/random-access.md","hash":"cfe89394dd7fecd7d2edd7182a212c6493652797","modified":1495440264331},{"_id":"source/_posts/xyms.md","hash":"ab04407c6233782cb38e1af4c49b2bf77170ff2e","modified":1497862767156},{"_id":"source/images/iron-man.jpg","hash":"1906b09812d007423b4ae693ce446d2ba881a1b6","modified":1483423685705},{"_id":"source/about/index.md","hash":"4e2b2537fa4b7557a0e6f2080f82b74fb2162848","modified":1497872110204},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1497926712471},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1497926712471},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1497926712471},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1497926712471},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1497926712471},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1497926712471},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1497926712471},{"_id":"themes/yilia/source/main.b3331d.css","hash":"7d0162a4618e8026bd23779f3120c09c83197b9f","modified":1497926712475},{"_id":"themes/yilia/source/slider.445162.js","hash":"e21c3c2cf663d7a4fb0d77f43ae1a148553a7cca","modified":1497926712479},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1497926712471},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1497926712475},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1497926712471},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1497926712471},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1497926712471},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1497926712471},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1497926712471},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1497926712471},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1497926712471},{"_id":"themes/yilia/source/main.b3331d.js","hash":"0e98e3674c7687ae4ff7bdcecb05e15434c46e0d","modified":1497926712475},{"_id":"themes/yilia/source/mobile.8d90af.js","hash":"cf2ab659138db5abc70e3e0d7bc64f50d48e834d","modified":1497926712479},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1497926712475},{"_id":"themes/yilia/source/fonts/iconfont.3a9902.eot","hash":"51d4e8d333ae7867915037983ea5d4b2ad971930","modified":1497926712475},{"_id":"themes/yilia/source/fonts/iconfont.6e162c.woff","hash":"709373d566526ad4bdb330757a3915e3c5e37b66","modified":1497926712475},{"_id":"themes/yilia/source/fonts/iconfont.9abe9f.svg","hash":"772383b62548e2a4fa560d589e05929b9f6f7f7b","modified":1497926712475},{"_id":"themes/yilia/source/fonts/iconfont.d0da7e.ttf","hash":"53ea5a5027a2fab93bcdad18cad6dc5f1b728726","modified":1497926712475},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1497926712475},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1497926712475},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1497926712475},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1497926712475},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1497926712471},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1497926712471},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1497926712471},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1497926712471},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1497926712471},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1497926712471},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1497926712471},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"e6e83d4863afcc589d4dd2f327e9f396f7d7b343","modified":1497926712471},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"3f5808a49a7365e3f813f78ba96b692f7ca27886","modified":1497926712475},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1497926712475},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1497926712475},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1497926712475},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1497926712475},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1497926712475},{"_id":"themes/yilia/source-src/css/main.scss","hash":"ac8c3312182519e33d0f729d157deb36e5f42894","modified":1497926712475},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1497926712475},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"a40400734c6509b9ac6e393a6681ccd8bafed5eb","modified":1497926712475},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1497926712475},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1497926712475},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1497926712475},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1497926712475},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1497926712475},{"_id":"themes/yilia/source-src/css/social.scss","hash":"b5324302815491d0a5e63142f1ead2048ad3f72f","modified":1497926712475},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1497926712475},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"17a97f7c38f5dfacc3eadf354b5826d77f1c2bdb","modified":1497926712475},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1497926712475},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1497926712475},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1497926712475},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1497926712475},{"_id":"themes/yilia/source-src/js/fix.js","hash":"9591a0f61236a56b2a15a541f572bcfd93823a0f","modified":1497926712475},{"_id":"themes/yilia/source-src/js/main.js","hash":"d665f4cf30450984591bc8ad2348a1baf720d04b","modified":1497926712475},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1497926712475},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1497926712475},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1497926712475},{"_id":"themes/yilia/source-src/js/slider.js","hash":"3bf0d70ae171404a0dc73c33ec48927fc2521a54","modified":1497926712475},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1497926712475},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"808a2e1ed407984cfdc929b827d3638f70ec9a2a","modified":1497926712475},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"143710485f734c5a997e0b1c26192bbba2982bcc","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"7547bc40b533d9db62f430c43dc0e595c9caa5b6","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"f8a42263edeeb3ccf6115cea5f96f551ed1e76e5","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"2387d91cf94b0b36e8a36841992a5fce63ebd069","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"6160c13783a7f31dab4fdcc6b752b3a368586d67","modified":1497926712471},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1497926712471},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1497926712475},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1497926712471},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1497926712475},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1497926712475},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"51d4e8d333ae7867915037983ea5d4b2ad971930","modified":1497926712475},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"772383b62548e2a4fa560d589e05929b9f6f7f7b","modified":1497926712475},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"53ea5a5027a2fab93bcdad18cad6dc5f1b728726","modified":1497926712475},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"709373d566526ad4bdb330757a3915e3c5e37b66","modified":1497926712475},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1497926712475},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1497926712475},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1497926712475},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"c2dccf1a95ec09ceeee5004293ac7edb7e1c9a66","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"9f9fa4f8b0de5f87a9494fd0cb5064502a5d5ef5","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"341103df70d0b476e3acd0afbc507a4a120d8f5f","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1497926712471},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1497926712471},{"_id":"themes/material/.gitignore","hash":"0e2700b8bcca0c252b8bcac0aea92a806a009986","modified":1496316990000},{"_id":"themes/material/.eslintrc.json","hash":"83ddc0cdc18f28b967795b8dac0421a52cdf7ece","modified":1496316990000},{"_id":"themes/material/.travis.yml","hash":"93eb4648349274ffda0c146bbc019d1d2cd57ca3","modified":1496316990000},{"_id":"themes/material/CONTRIBUTING.md","hash":"148f555e47d4725fe1faac775107a4d7b03f7136","modified":1496316990000},{"_id":"themes/material/CONTRIBUTING.zh-cn.md","hash":"ef3ccef0451d6ac616b3a35fbfedb6abd35e6b41","modified":1496316990000},{"_id":"themes/material/LICENSE","hash":"12d81f50767d4e09aa7877da077ad9d1b915d75b","modified":1496316990000},{"_id":"themes/material/README.md","hash":"cc7b80f6bce7b910a7ba641abac1ade1311705f8","modified":1496316990000},{"_id":"themes/material/_config.yml","hash":"334ee5659c0483596b3b3e20ff7e205169e25483","modified":1497855700532},{"_id":"themes/material/contributing.json","hash":"1bc0871b1c7822b82533b614090ac0ab7c55282c","modified":1496316990000},{"_id":"themes/material/lint.sh","hash":"49c3a65f8ca65754ec7fefcd2dcb6adc187f3856","modified":1496316990000},{"_id":"themes/material/package.json","hash":"6b63bbc7e3c8532359dd2a80328f51f4e97474b9","modified":1496316990000},{"_id":"themes/material/.github/ISSUE_TEMPLATE.md","hash":"52a733a4d2e21a9c4d719495a0353c6719484f9f","modified":1496316990000},{"_id":"themes/material/.github/PULL_REQUEST_TEMPLATE.md","hash":"f2a3a0b929c0909ab99c96fb82853c2c2d67961a","modified":1496316990000},{"_id":"themes/material/languages/ar.yml","hash":"b8ffe10584fe49ed0218e57b27140b134e3022f8","modified":1496316990000},{"_id":"themes/material/languages/de.yml","hash":"bce37d066ffa82f3e249d41d0ee883c913cc2c5f","modified":1496316990000},{"_id":"themes/material/languages/en.yml","hash":"2d538f5b71b2837b75bdcb686f1431a48dcb6eda","modified":1496316990000},{"_id":"themes/material/languages/es.yml","hash":"aaf23ea448489ec01f7c6228e3bf4833e062ec34","modified":1496316990000},{"_id":"themes/material/languages/fr.yml","hash":"66a966e8a9a60bfe00829b20c1f5e26cd6390f73","modified":1496316990000},{"_id":"themes/material/languages/ja.yml","hash":"af5466576ce9f6cac8529feb57ac8ba5401a318f","modified":1496316990000},{"_id":"themes/material/languages/ms.yml","hash":"237a39bbfcce33e7b918f6c5dc0f01bc79900262","modified":1496316990000},{"_id":"themes/material/languages/pt-BR.yml","hash":"a070c2c4d0d3d54f8ca70513cff73c3f7c306db1","modified":1496316990000},{"_id":"themes/material/languages/zh-CN.yml","hash":"563671897a5d4d04ddc2f4b8a45e8f2c366a77b9","modified":1496316990000},{"_id":"themes/material/languages/zh-TW.yml","hash":"516b74e942f849e716098d111c7c3a9f4847cb0a","modified":1496316990000},{"_id":"themes/material/scripts/helper.js","hash":"e7111a8b1f0ab5bf3466378c48c260a4f6e527d6","modified":1496316990000},{"_id":"themes/material/layout/index.ejs","hash":"aca1abb741f891776913c8ea2e6ff626a0ea5736","modified":1496316990000},{"_id":"themes/material/layout/post.ejs","hash":"17bf2e8e65b2d1bdfc85857a25755add8a875b16","modified":1496316990000},{"_id":"themes/material/layout/layout.ejs","hash":"94f66850b815a262c0f8ff112a32a0a6f43066e3","modified":1496316990000},{"_id":"themes/material/layout/_partial/Isolation-post-info.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1496316990000},{"_id":"themes/material/scripts/lib/font_lsload.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1496316990000},{"_id":"themes/material/layout/_partial/Isolation-post_entry.ejs","hash":"45eb5dc723d36e32553038422061cba6828957a1","modified":1496316990000},{"_id":"themes/material/layout/_partial/Paradox-post-info.ejs","hash":"9c6e728a736eaba7edbcaf6862e5dcef8edd2a9e","modified":1496316990000},{"_id":"themes/material/layout/_partial/Paradox-post_entry-thumbnail.ejs","hash":"ae949e16cbd20d895ba3c0b64f3992bf28d81e06","modified":1496316990000},{"_id":"themes/material/layout/_partial/Paradox-post-thumbnail.ejs","hash":"31095a56feaf04a710e8302ccb18e2d4d10b97ba","modified":1496316990000},{"_id":"themes/material/layout/_partial/Paradox-post_entry.ejs","hash":"36d3798224bf7dff7c0659876c5ad8a4785198e2","modified":1496316990000},{"_id":"themes/material/layout/_partial/Paradox-search.ejs","hash":"18a6971b04feccd124a096b8c7cecf1fd4bb914e","modified":1496316990000},{"_id":"themes/material/layout/_partial/blog_info.ejs","hash":"1b1a18b49674d2e78672a69c6ced6ff35f1b63e9","modified":1496316990000},{"_id":"themes/material/layout/_partial/comment.ejs","hash":"c9fb1f98a18ca484cb52d60e2ad2bad25b56dfb2","modified":1496316990000},{"_id":"themes/material/layout/_partial/config_css.ejs","hash":"9956cc20b84b67334dcc80a5d4396f9064d4a804","modified":1496316990000},{"_id":"themes/material/layout/_partial/config_footer.ejs","hash":"bd520f4e8a381494c78e3c00905c80a9cd807f97","modified":1496316990000},{"_id":"themes/material/layout/_partial/config_font.ejs","hash":"f564ba4b36363882154870558091383887fffdf8","modified":1496316990000},{"_id":"themes/material/layout/_partial/daily_pic.ejs","hash":"22f377c0ba70d930a66dfcc775f216a560746996","modified":1496316990000},{"_id":"themes/material/layout/_partial/footer-option.ejs","hash":"be20394eaeaf2d20db28946b948962c839da6ea9","modified":1496316990000},{"_id":"themes/material/layout/_partial/footer.ejs","hash":"75ecc32a258857424c48a2ebb0b5b9f3b30614a5","modified":1496316990000},{"_id":"themes/material/layout/_partial/footer_top.ejs","hash":"9eaace4feb951c96c0033e7271497f3f300d2476","modified":1496316990000},{"_id":"themes/material/layout/_partial/head.ejs","hash":"16a4bc65e631f5d21e7fd204f457adc86ea2af26","modified":1496316990000},{"_id":"themes/material/layout/_partial/import_js.ejs","hash":"88c604ae4f70ccf24289bc967f18ada697013304","modified":1496316990000},{"_id":"themes/material/layout/_partial/isolate-sns_list.ejs","hash":"fc5f03ebb847f85975676a9dfee8870e7c908008","modified":1496316990000},{"_id":"themes/material/layout/_partial/isolate_info.ejs","hash":"b8ec76716bfa2e6513b4df6814fe8676536a94c1","modified":1496316990000},{"_id":"themes/material/layout/_partial/footer-left.ejs","hash":"c17e2da7d6cb0e4104fc64a541f4c81f4abed095","modified":1496316990000},{"_id":"themes/material/layout/_partial/post-content.ejs","hash":"02374b20989c81031e29257d872624d5195ddcbd","modified":1496316990000},{"_id":"themes/material/layout/_partial/post-header.ejs","hash":"e5c1271b94d66597812cdf88057c8690bfe72d55","modified":1496316990000},{"_id":"themes/material/layout/_partial/post-info-share.ejs","hash":"b6e5af993245a2e3caa6eb66009503ec52c82f5b","modified":1496316990000},{"_id":"themes/material/layout/_partial/post-nav.ejs","hash":"7b291719414408a9ec0b9167a2c6c834f90905b3","modified":1496316990000},{"_id":"themes/material/layout/_partial/sidebar-footer_image.ejs","hash":"44aba38692abc609f28b55bff81362a1c03ce36c","modified":1496316990000},{"_id":"themes/material/layout/_partial/sidebar-header.ejs","hash":"d18344f05712f66e0385839e4d83d5a3a515c140","modified":1496316990000},{"_id":"themes/material/layout/_partial/sidebar-footer.ejs","hash":"6c3486b846473e0d58666f7a8720f5bf4a14e030","modified":1496316990000},{"_id":"themes/material/layout/_partial/sidebar-navigation.ejs","hash":"ff44901fdfdd952174b0d22e86df7163d7fba9ba","modified":1496316990000},{"_id":"themes/material/layout/_partial/structured-data.ejs","hash":"f3ed6673a774cd5a27c94dfe174e8f7344f4ebbe","modified":1496316990000},{"_id":"themes/material/layout/_partial/sidebar.ejs","hash":"c5ce6136e82895cb80dab8a918a7cdf2fe820fea","modified":1496316990000},{"_id":"themes/material/layout/_partial/toc_button.ejs","hash":"1c0773c3b2cf33aad0e0373540e11540e5137c75","modified":1496316990000},{"_id":"themes/material/layout/_widget/leancloud-like.ejs","hash":"e4780fe3bbb049db38d694fc18dee13d799bd51d","modified":1496316990000},{"_id":"themes/material/layout/_widget/leancloud-views.ejs","hash":"211dc183b8e84f71b2c25b3ac6659d162d81662b","modified":1496316990000},{"_id":"themes/material/layout/_widget/leancloud-views_num.ejs","hash":"e27baba6a2de406463735d276606b15fb40f5eba","modified":1496316990000},{"_id":"themes/material/layout/_widget/mathjax.ejs","hash":"843818bffeaebe5e3fa07c90d260bb912555cb3b","modified":1496316990000},{"_id":"themes/material/layout/_widget/nprogress.ejs","hash":"52fcfe5b70c25378e48bb67daf85d952b32d34b2","modified":1496316990000},{"_id":"themes/material/layout/_widget/page-links.ejs","hash":"ed636c70c24a9265f386102d8735dead797d94c2","modified":1496316990000},{"_id":"themes/material/layout/_widget/page-gallery.ejs","hash":"f03bc95a0c9b4905413b8fdfefc1af463b51e828","modified":1496316990000},{"_id":"themes/material/layout/_widget/page-tagcloud.ejs","hash":"e71de74e4067cc4e6aef1e09ac429c92bcd178b3","modified":1496316990000},{"_id":"themes/material/layout/_widget/page-timeline.ejs","hash":"9fa0195e08d9fd40aa0333e9279c98bc65acf604","modified":1496316990000},{"_id":"themes/material/scripts/lib/css_lsload.js","hash":"c52bbfe62863cd141925747b2575a6a6858444d1","modified":1496316990000},{"_id":"themes/material/scripts/lib/get_file_hex.js","hash":"eb3b9a45f8ca45ef40d5421baef7d4484023982c","modified":1496316990000},{"_id":"themes/material/scripts/lib/js_hex.js","hash":"2704583aa036d538544ce31c2e924c0c125309dd","modified":1496316990000},{"_id":"themes/material/scripts/lib/js_lsload.js","hash":"c604f337d219bccf3f315e984cf12a6658dbd7a2","modified":1496316990000},{"_id":"themes/material/layout/_widget/qrcode.ejs","hash":"ab544bc337a48bdd30f9cb146db6a287bb36a10f","modified":1496316990000},{"_id":"themes/material/layout/_widget/search-local-js.ejs","hash":"146bfb6952f17c0afbd26ac16a15c4d0d73c83d9","modified":1496316990000},{"_id":"themes/material/scripts/lib/path_for.js","hash":"f944e3b53a468962121aa3357cc0bc18ac27a34c","modified":1496316990000},{"_id":"themes/material/layout/_widget/search-swiftype-js.ejs","hash":"7ad1e843e620ccd9b3c041dccfdcee97921247a1","modified":1496316990000},{"_id":"themes/material/source/css/disqus-proxy.css","hash":"770776d8cec27cd5661bdfd59eff9af263439989","modified":1496316990000},{"_id":"themes/material/source/css/duoshuo.css","hash":"32a02eaa01ff7b66fd9df307b0d33d52810096be","modified":1496316990000},{"_id":"themes/material/source/css/disqus-proxy.min.css","hash":"3f8f99f71d361302288b0ba11fd36072564b08c2","modified":1496316990000},{"_id":"themes/material/source/css/duoshuo.min.css","hash":"89a30544b8b01d061da51c40f2af702a7969de5e","modified":1496316990000},{"_id":"themes/material/source/css/fontawesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1496316990000},{"_id":"themes/material/source/css/ie-blocker.css","hash":"dddce7e6250a449291888ae7865697282a213b14","modified":1496316990000},{"_id":"themes/material/source/css/gallery.min.css","hash":"c5333ca835aae49239d809130a7b281af745729e","modified":1496316990000},{"_id":"themes/material/source/css/style.css","hash":"52a827e62695ed758b5e5102e63f78a532c0311c","modified":1496316990000},{"_id":"themes/material/source/css/style.min.css","hash":"2e9f8420f0047e7639df4be5619bf279b4ecb94f","modified":1496316990000},{"_id":"themes/material/source/css/uc.css","hash":"1e0977a2c9bdf721cc05654dfc025dd250655852","modified":1496316990000},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff","hash":"c6c953c2ccb2ca9abb21db8dbf473b5a435f0082","modified":1496316990000},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff2","hash":"09963592e8c953cc7e14e3fb0a5b05d5042e8435","modified":1496316990000},{"_id":"themes/material/source/img/avatar.png","hash":"bf483b0d495dbbcfb308348a945818e1c1cc9696","modified":1496316990000},{"_id":"themes/material/source/img/bg.png","hash":"a32f9717e19e821a4030ade551dc2917c889fcd8","modified":1496316990000},{"_id":"themes/material/source/img/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1496316990000},{"_id":"themes/material/source/img/favicon.png","hash":"b1bcc84cedb2a618e8db93559ce7d58f9274085d","modified":1496316990000},{"_id":"themes/material/source/img/logo.png","hash":"b1bcc84cedb2a618e8db93559ce7d58f9274085d","modified":1496316990000},{"_id":"themes/material/source/img/sidebar_header.png","hash":"c47f4d39f421c0a950279d050ae82f9ae6dd19ff","modified":1496316990000},{"_id":"themes/material/source/img/upyun_logo.svg","hash":"1f118b2b9c54f431d5e731ccf316ceefe605ba67","modified":1496316990000},{"_id":"themes/material/source/js/ie-blocker.en.js","hash":"96ca8e677a12048d099319ebdf01983ddc6ca80c","modified":1496316990000},{"_id":"themes/material/source/js/ie-blocker.zhCN.js","hash":"0ed49b0ec1d1924b128fbd97fca2cf7af7856fdf","modified":1496316990000},{"_id":"themes/material/source/js/lazyload.min.js","hash":"5348fd7aa4dbefac9d21091c9fd5e263563b5540","modified":1496316990000},{"_id":"themes/material/source/js/lsloader.js","hash":"890f196c276aded83e40a60c516e4408d42a3c7d","modified":1496316990000},{"_id":"themes/material/source/js/lsloader.min.js","hash":"089ffda1dbc3ec5e5168331121ce6daaa241c132","modified":1496316990000},{"_id":"themes/material/source/js/mathjax.js","hash":"a21703b5848325a902c9b39bbf3ca6490d3e1b1b","modified":1496316990000},{"_id":"themes/material/source/js/nprogress.js","hash":"a3058d4b6afb5d7a14e5afcbb88f778de35864f0","modified":1496316990000},{"_id":"themes/material/source/js/queue.js","hash":"dd252616b568b71c222d9cfc859bfe52738e576a","modified":1496316990000},{"_id":"themes/material/source/js/queue.min.js","hash":"21aab782ca33efbb1386cc960b6be0a02106760d","modified":1496316990000},{"_id":"themes/material/source/css/material.min.css","hash":"f3c8e6a9d94e6cad30c6628e1d732e6ee00d5fce","modified":1496316990000},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.ttf","hash":"fc05de31234e0090f7ddc28ce1b23af4026cb1da","modified":1496316990000},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1496316990000},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1496316990000},{"_id":"themes/material/source/img/daily_pic.png","hash":"5e9a5f6a134889d0242e69061837f2032416d7ce","modified":1496316990000},{"_id":"themes/material/source/js/jquery.min.js","hash":"00073d6597d2760b81387274a9ec56b9d5cb1552","modified":1496316990000},{"_id":"themes/material/source/js/js.min.js","hash":"2d0e6569a2bb608bfd37f395945ac449d3924d84","modified":1496316990000},{"_id":"themes/material/source/js/smoothscroll.js","hash":"df56a1c84191a62750ae820943377b6775fca0e2","modified":1496316990000},{"_id":"themes/material/source/js/js.js","hash":"15ab2a8a59623db0faaea3c50e0f347cc0dc810e","modified":1496316990000},{"_id":"themes/material/layout/_widget/analytics/baidu-analytics.ejs","hash":"c24af97754140f221d20323a3e5aac9dd02889d4","modified":1496316990000},{"_id":"themes/material/layout/_widget/analytics/cnzz-analytics.ejs","hash":"61a891acb13e71289f360c91cb27fb88f81848ec","modified":1496316990000},{"_id":"themes/material/source/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1496316990000},{"_id":"themes/material/layout/_widget/analytics/google-analytics.ejs","hash":"8bff3b1bd066eef693319b82400c353b2d6736e7","modified":1496316990000},{"_id":"themes/material/source/css/material.css","hash":"19818d637ecb3bae73d16ee90444c42fe4458b54","modified":1496316990000},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.eot","hash":"26fb8cecb5512223277b4d290a24492a0f09ede1","modified":1496316990000},{"_id":"themes/material/source/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1496316990000},{"_id":"themes/material/source/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1496316990000},{"_id":"themes/material/source/img/footer/footer_ico-facebook.svg","hash":"74b3b3c6bd1d76b7eaaf75d36ac929b11a5a3e82","modified":1496316990000},{"_id":"themes/material/source/img/footer/footer_ico-bilibili.svg","hash":"1a007ae30d69aa597f589edb4ee0638a9814c988","modified":1496316990000},{"_id":"themes/material/source/img/footer/footer_ico-github.svg","hash":"5f1f9f53e6a87ad674108c6bd16e424a1e888c61","modified":1496316990000},{"_id":"themes/material/source/img/footer/footer_ico-telegram.svg","hash":"413d66e40ca476deeb49364935d49d2f7839cdfd","modified":1496316990000},{"_id":"themes/material/source/img/footer/footer_ico-tumblr.svg","hash":"11daf4fa4220787306fc21a879429e98b7db8d03","modified":1496316990000},{"_id":"themes/material/source/img/footer/footer_ico-twitter.svg","hash":"58df7777d6fcee8fa3c42453c091714bb3f97c95","modified":1496316990000},{"_id":"themes/material/source/img/footer/footer_ico-weibo.svg","hash":"26d0cdb77f0c4afd60111176167eacfa222bc4c1","modified":1496316990000},{"_id":"themes/material/source/img/footer/footer_ico-zhihu.svg","hash":"d3f8da320fffefc5144822665dfe17d25af4061c","modified":1496316990000},{"_id":"themes/material/source/img/gallery/arrow.svg","hash":"144d73877e52acc5068bc0c9d1e69ef450e69f26","modified":1496316990000},{"_id":"themes/material/source/img/gallery/close.svg","hash":"2690088060811f01c9360df75be80070156ff176","modified":1496316990000},{"_id":"themes/material/source/img/gallery/spinner.svg","hash":"fc9d1cd1118ac896d4f5326e110a653f3ea32b11","modified":1496316990000},{"_id":"themes/material/source/img/random/material-10.png","hash":"363466a376e4df9e61acc904cd25f3c7ae1a7280","modified":1496316990000},{"_id":"themes/material/source/img/random/material-12.png","hash":"d020b3d42542715c7ae95b3d8603fe3180bfe8f3","modified":1496316990000},{"_id":"themes/material/source/img/random/material-17.png","hash":"ece82810e31f711576db598c845c3d97bd49fe67","modified":1496316990000},{"_id":"themes/material/source/img/random/material-19.png","hash":"768ed1a4966e2e418cb00f6b36d2fc9058328eb3","modified":1496316990000},{"_id":"themes/material/source/img/random/material-3.png","hash":"848eaa70b9b0cd7a2204c78e8aa324d8f96bb097","modified":1496316990000},{"_id":"themes/material/source/img/random/material-4.png","hash":"b475dfbf67a076a4e17a5527fd1973b1d4adac07","modified":1496316990000},{"_id":"themes/material/source/img/random/material-6.png","hash":"2f841e0c064fecb607ad1e149662a0c96d9e725d","modified":1496316990000},{"_id":"themes/material/source/img/random/material-8.png","hash":"57db542d526ef6866cb34e261096e93a0e6f3a82","modified":1496316990000},{"_id":"themes/material/source/img/random/material-9.png","hash":"840319c4d1f38fb8df79eb4669ed2e14d89fd680","modified":1496316990000},{"_id":"themes/material/source/js/gallery/gallery.js","hash":"8ee48312a183b42a9886211a0ec825ea0d041301","modified":1496316990000},{"_id":"themes/material/source/img/random/material-1.png","hash":"4839299eaa4db7272befa7b824e54b647fbbfc44","modified":1496316990000},{"_id":"themes/material/source/img/random/material-11.png","hash":"ce20b0ad08a248c036115374f2edb7301ff60b72","modified":1496316990000},{"_id":"themes/material/source/img/random/material-13.png","hash":"1a8378db3121b583485e2b939cb1aa0e0b14b0c8","modified":1496316990000},{"_id":"themes/material/source/img/random/material-14.png","hash":"b4f65b601960138c69f57171b0ddd55895483f45","modified":1496316990000},{"_id":"themes/material/source/img/random/material-15.png","hash":"36b9937cf3810e4970902b78797ad29b0831f065","modified":1496316990000},{"_id":"themes/material/source/img/random/material-18.png","hash":"4b98204abe36ecd3f30678d2c22059130e0db328","modified":1496316990000},{"_id":"themes/material/source/img/random/material-16.png","hash":"ade7f75200d3fb38326e3cf1e9f1a812fb12a43b","modified":1496316990000},{"_id":"themes/material/source/img/random/material-2.png","hash":"faba2ce69c19d6c1dac392dd10b054e0061f6fb7","modified":1496316990000},{"_id":"themes/material/source/img/random/material-5.png","hash":"5041ebd073a139c67f8ed271e74c967c7eb9c5be","modified":1496316990000},{"_id":"themes/material/source/img/random/material-7.png","hash":"5c49ff3c064aaeb21227c2bd98b5ae422ddca84c","modified":1496316990000},{"_id":"themes/material/layout/_widget/comment/disqus/common.ejs","hash":"c11cfceb0906a96399dede5da01ff7fe4787f8a5","modified":1496316990000},{"_id":"themes/material/layout/_widget/comment/disqus/enter.ejs","hash":"39192034766349e47967da63184f9104fdded2ab","modified":1496316990000},{"_id":"themes/material/layout/_widget/comment/disqus/main.ejs","hash":"21e0eeff664191b818d7a0071ae7edcdfc270442","modified":1496316990000},{"_id":"themes/material/layout/_widget/comment/changyan/common.ejs","hash":"40e1fc76d6b7f64e226693fb2fe1a6bb17bae245","modified":1496316990000},{"_id":"themes/material/layout/_widget/comment/changyan/enter.ejs","hash":"e3cfb4f37ea35457f112f3e822e130c930086497","modified":1496316990000},{"_id":"themes/material/layout/_widget/comment/changyan/main.ejs","hash":"77539ff32cc9d1204b848e01b5277fff5cbd61e0","modified":1496316990000},{"_id":"themes/material/layout/_widget/comment/disqus_click/common.ejs","hash":"d243f576b366a62191066459efcc6fd0ab79d00a","modified":1496316990000},{"_id":"themes/material/layout/_widget/comment/disqus_click/enter.ejs","hash":"d82f0296f8bae25223ec44e6e05b817d3a234884","modified":1496316990000},{"_id":"themes/material/layout/_widget/comment/disqus_click/main.ejs","hash":"fa89d225dafa4a6b0f6be6fe395ada0be172c4ae","modified":1496316990000},{"_id":"themes/material/layout/_widget/comment/163gentie/common.ejs","hash":"ac56d01746ef2f72d54bff4b61e0ca0089c5c164","modified":1496316990000},{"_id":"themes/material/layout/_widget/comment/163gentie/enter.ejs","hash":"6e057829fa926cc02e3e2ebfdee7c244a9b31dd7","modified":1496316990000},{"_id":"themes/material/layout/_widget/comment/163gentie/main.ejs","hash":"e84afb44929f4dab8cf279b958d472955bc5f034","modified":1496316990000},{"_id":"themes/material/source/img/footer/footer_ico-instagram.svg","hash":"294c511e62063ea49f61e23958ab27d643ba0228","modified":1496316990000},{"_id":"themes/material/source/img/footer/footer_ico-gplus.svg","hash":"b50274133ab263bcacdf729871d0446b615ac984","modified":1496316990000},{"_id":"themes/material/source/img/footer/footer_ico-linkedin.svg","hash":"9831c86352ec5ff283a3277d033120f86388c277","modified":1496316990000},{"_id":"themes/material/source/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1496316990000},{"_id":"themes/material/source/fonts/Roboto-Black.ttf","hash":"0244e6497a51fb8a38ca7e6fe297b066e2e09af5","modified":1496316990000},{"_id":"themes/material/source/fonts/Roboto-Bold.ttf","hash":"d1864343b543978bd491d40c80010cea50c1b7bf","modified":1496316990000},{"_id":"themes/material/source/fonts/Roboto-Light.ttf","hash":"b9ea2eaf26ff8fdcb5aee3e0c2c7a6084ebb6aac","modified":1496316990000},{"_id":"themes/material/source/fonts/Roboto-Medium.ttf","hash":"3965419aab480c184f66bc5e39c1719a373a4ef6","modified":1496316990000},{"_id":"themes/material/source/fonts/Roboto-Regular.ttf","hash":"06691e103d4d3ce1f1108d9b7d21254b714a41f8","modified":1496316990000},{"_id":"themes/material/source/fonts/Roboto-Thin.ttf","hash":"ed5101c3a800f35e925603a406e0c2dc5278b96c","modified":1496316990000},{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1495442923899},{"_id":"themes/maupassant/LICENSE","hash":"f0ac2f92770650c9835183f79010c0d307b34acd","modified":1495442923899},{"_id":"themes/maupassant/README.md","hash":"e75d6136d0355d0c231fb9bd27f93ef3e2d29477","modified":1495442923899},{"_id":"themes/maupassant/_config.yml","hash":"7520c8f976f3cc97db77d2f7b4d5ee4914d1fa7d","modified":1495444839643},{"_id":"themes/maupassant/package.json","hash":"81fb4e2ac051ecfb9a93f37b28910291b939771a","modified":1495442923899},{"_id":"themes/maupassant/git-bak/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1495442923887},{"_id":"themes/maupassant/git-bak/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1495442913543},{"_id":"themes/maupassant/git-bak/index","hash":"379e204ee91392998bb432de483cdc36197310a9","modified":1495442923903},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1495442923899},{"_id":"themes/maupassant/languages/en.yml","hash":"e8887110dd01c4b6c41493b661b433b6b579b110","modified":1495442923899},{"_id":"themes/maupassant/git-bak/config","hash":"776ed8041073d1bb2a234fa37a0d49bad1f0c5f4","modified":1495442923887},{"_id":"themes/maupassant/git-bak/packed-refs","hash":"ba6e4523b8a66ceb6383aa3e3ec4e8f3961c9870","modified":1495442923887},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1495442923899},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1495442923899},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1495442923899},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"ec5c4b2667bb0cceb7fd0934ebe8631d6a701018","modified":1495442923899},{"_id":"themes/maupassant/languages/ru.yml","hash":"2476a631f4d3c668de04af85a6c2c97ba2a57e96","modified":1495442923899},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"17b22e638fd21ab16d4c156b22f8c89ececad9f5","modified":1495442923899},{"_id":"themes/maupassant/layout/archive.jade","hash":"0050c883b4f202add71c8664d65e6072179e7190","modified":1495442923899},{"_id":"themes/maupassant/layout/base-without-sidebar.jade","hash":"60b5a70f7c61c91aca9fbf813bde26096ef4028f","modified":1495442923899},{"_id":"themes/maupassant/layout/base.jade","hash":"41f3a0f5e3c5b722de9d058c458822e5122384e1","modified":1495442923899},{"_id":"themes/maupassant/layout/index.jade","hash":"c6d0f760df9a5f02aaeddc16a5eb3494f044eaa9","modified":1495442923899},{"_id":"themes/maupassant/layout/page.jade","hash":"8d70fd3b93f2c9087a9ea7ec538dcc1d413bea01","modified":1495442923899},{"_id":"themes/maupassant/layout/post.jade","hash":"88dcb72e5444aa39c90cd8d6e499525546a5a95b","modified":1495442923899},{"_id":"themes/maupassant/layout/single-column.jade","hash":"c35fff4d9b331a41af5bc10f4278ec3d9da503db","modified":1495442923899},{"_id":"themes/maupassant/layout/timeline.jade","hash":"649281ace58d7ff08a6ecb10606799ae2f77bb38","modified":1495442923899},{"_id":"themes/maupassant/git-bak/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1495442913543},{"_id":"themes/maupassant/git-bak/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1495442913543},{"_id":"themes/maupassant/git-bak/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1495442913543},{"_id":"themes/maupassant/git-bak/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1495442913543},{"_id":"themes/maupassant/git-bak/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1495442913543},{"_id":"themes/maupassant/git-bak/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1495442913543},{"_id":"themes/maupassant/git-bak/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1495442913543},{"_id":"themes/maupassant/git-bak/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1495442913543},{"_id":"themes/maupassant/git-bak/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1495442913543},{"_id":"themes/maupassant/git-bak/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1495442913543},{"_id":"themes/maupassant/git-bak/logs/HEAD","hash":"2b66b8fddc87215d47d7c86c107fef8063efb6c9","modified":1495442923887},{"_id":"themes/maupassant/layout/_partial/after_footer.jade","hash":"78424748d749d5df0f251e896c2d4d1a69b02b62","modified":1495442923899},{"_id":"themes/maupassant/layout/_partial/comments.jade","hash":"e5d604bcaad6558ba56e036de3ef5a840d501155","modified":1495442923899},{"_id":"themes/maupassant/layout/_partial/footer.jade","hash":"650781b5bc8c632658ad6880ba663b1e3bfb5798","modified":1495442923899},{"_id":"themes/maupassant/layout/_partial/head.jade","hash":"74585fd208f074cae496274cb3a656925915ed8a","modified":1495442923899},{"_id":"themes/maupassant/layout/_partial/helpers.jade","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1495442923899},{"_id":"themes/maupassant/layout/_partial/mathjax.jade","hash":"b54b56faff9e47ab3ca3cdd55056c73e60776f3c","modified":1495442923899},{"_id":"themes/maupassant/layout/_partial/mathjax2.jade","hash":"d6ac5dc4e9c7a1b866f1f92d88988cfb35aded4c","modified":1495442923899},{"_id":"themes/maupassant/layout/_partial/paginator.jade","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1495442923899},{"_id":"themes/maupassant/layout/_partial/post_nav.jade","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1495442923899},{"_id":"themes/maupassant/layout/_partial/tag.jade","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1495442923899},{"_id":"themes/maupassant/layout/_partial/totop.jade","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1495442923899},{"_id":"themes/maupassant/layout/_widget/category.jade","hash":"7c6aed762934ca51aa2669b886254da24b77bc14","modified":1495442923899},{"_id":"themes/maupassant/layout/_widget/links.jade","hash":"f57a0c76d243882b2b77330132bdb43bc648948b","modified":1495442923899},{"_id":"themes/maupassant/layout/_widget/recent_comments.jade","hash":"e119c5afa85abc60d139e2da99b0bfcd7a6530f8","modified":1495442923899},{"_id":"themes/maupassant/layout/_widget/recent_posts.jade","hash":"19431336d724d2118e46da43683bce9063176541","modified":1495442923899},{"_id":"themes/maupassant/layout/_widget/search.jade","hash":"193546282908e499813534f86d27ef6e0a1357b3","modified":1495442923899},{"_id":"themes/maupassant/layout/_widget/tag.jade","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1495442923899},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1495442923899},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1495442923903},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1495442923903},{"_id":"themes/maupassant/source/css/style.scss","hash":"d8cb18ba798ec5e1128551de7c5f340fb72602cf","modified":1495442923903},{"_id":"themes/maupassant/source/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1495442923903},{"_id":"themes/maupassant/source/js/share.js","hash":"6400d719d5eb14587d854a3dff6b290a3c06dc67","modified":1495442923903},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1495442923903},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1495442923903},{"_id":"themes/maupassant/git-bak/objects/pack/pack-67bfb17e3247cee43e9b27865beb0b98cece22b0.idx","hash":"2a19a1f234e49beb03dd8828f44af70a35211efa","modified":1495442923811},{"_id":"themes/maupassant/git-bak/refs/heads/master","hash":"7531e2683c1ac1cd0543b332af718c138d70f10e","modified":1495442923887},{"_id":"themes/maupassant/git-bak/logs/refs/heads/master","hash":"2b66b8fddc87215d47d7c86c107fef8063efb6c9","modified":1495442923887},{"_id":"themes/maupassant/git-bak/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1495442923887},{"_id":"themes/maupassant/git-bak/logs/refs/remotes/origin/HEAD","hash":"2b66b8fddc87215d47d7c86c107fef8063efb6c9","modified":1495442923887},{"_id":"themes/maupassant/git-bak/objects/pack/pack-67bfb17e3247cee43e9b27865beb0b98cece22b0.pack","hash":"717261e9169ab66e1b15b8c87ebb06979c481c8d","modified":1495442923811},{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1523603721553},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1523603721553},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1523603721554},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1523603721563},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1523603721554},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1523603721554},{"_id":"source/_posts/java_call_cnet.md","hash":"159d99751dd7aac21f088153a468d81fffad1547","modified":1523602802716},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1523603721555},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1523603721555},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1523603721555},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1523603721555},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1523603721556},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1523603721556},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1523603721556},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1523603721556},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1523603721556},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1523603721556},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1523603721557},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1523603721557},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1523603721561},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1523603721562},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1523603721562},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1523603721562},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1523603721562},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1523603721562},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1523603721563},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1523603721563},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1523603721557},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1523603721558},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1523603721558},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1523603721558},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1523603721557},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1523603721557},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1523603721559},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1523603721558},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1523603721559},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1523603721560},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1523603721561},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1523603721559},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1523603721561},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1523603721561},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1523603721561},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1523603721561},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1523603721564},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1523603721573},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1523603721574},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1523603721574},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1523603721575},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1523603721575},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1523603721566},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1523603721575},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1523603721576},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1523603721578},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1523603721579},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1523603721580},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1523603721580},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1523603721559},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1523603721559},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1523603721560},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1523603721560},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1523603721560},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1523603721559},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1523603721564},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1523603721564},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1523603721564},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1523603721564},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1523603721565},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1523603721565},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1523603721565},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1523603721565},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1523603721565},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1523603721566},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1523603721566},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1523603721566},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1523603721568},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1523603721571},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1523603721567},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1523603721576},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1523603721576},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1523603721577},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1523603721577},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1523603721577},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1523603721577},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1523603721570},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1523603721569},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1523603721573}],"Category":[],"Data":[],"Page":[{"layout":"page","_content":"\n## ld000\n\n<i class=\"fa fa-envelope-open-o\"></i> Email: [lidong9144@163.com]()\n<i class=\"fa fa-github\" aria-hidden=\"true\"></i> Github: [ld000](https://github.com/ld000)\n","source":"about/index.md","raw":"---\nlayout: page\n---\n\n## ld000\n\n<i class=\"fa fa-envelope-open-o\"></i> Email: [lidong9144@163.com]()\n<i class=\"fa fa-github\" aria-hidden=\"true\"></i> Github: [ld000](https://github.com/ld000)\n","date":"2017-06-19T11:35:10.204Z","updated":"2017-06-19T11:35:10.204Z","path":"about/index.html","title":"","comments":1,"_id":"cj44zcksc0001536uykjiz9kk","content":"<h2 id=\"ld000\"><a href=\"#ld000\" class=\"headerlink\" title=\"ld000\"></a>ld000</h2><p><i class=\"fa fa-envelope-open-o\"></i> Email: <a href=\"\">lidong9144@163.com</a><br><i class=\"fa fa-github\" aria-hidden=\"true\"></i> Github: <a href=\"https://github.com/ld000\" target=\"_blank\" rel=\"external\">ld000</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"ld000\"><a href=\"#ld000\" class=\"headerlink\" title=\"ld000\"></a>ld000</h2><p><i class=\"fa fa-envelope-open-o\"></i> Email: <a href=\"\">lidong9144@163.com</a><br><i class=\"fa fa-github\" aria-hidden=\"true\"></i> Github: <a href=\"https://github.com/ld000\" target=\"_blank\" rel=\"external\">ld000</a></p>\n"}],"Post":[{"title":"css","date":"2017-05-22T08:02:16.000Z","layout":"false","_content":"![](http://upload-images.jianshu.io/upload_images/1768578-678f35e772132a47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```css\nfont-family: Helvetica, Arial, sans-serif;\nfont-size: 60px;\ntext-transform: uppercase;  // 大写\ntext-decoration: underline;  // 下划线\ncolor: #8001ff;\n```\n---\n\n![](http://upload-images.jianshu.io/upload_images/1768578-ae3d31ed146b7798.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```css\nborder: 5px dashed salmon;\nborder-radius: 5px;\ncursor: pointer;\nbox-shadow: 5px 5px 20px #ccc;\n```\n\n---\n\n```css\ndisplay: block;  // 块元素\ndisplay: inline;  // 内联元素\n```\n`inline`, `weight` 和 `height` 无效。\n\n---\n\n```css\nbox-sizing: border-box;  // width 计算 padding 和 border\n-webkit-box-sizing: border-box;\n-moz-box-sizing: border-box;\n-ms-box-sizing: border-box;\n```\n\n---\n\n![](http://upload-images.jianshu.io/upload_images/1768578-470c41345887b0a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```css\ntext-align: justify;  // 左右对齐\n```\n\n---\n\n垂直对齐\n\n```css\nvertical-align: top;\nvertical-align: bottom;\nvertical-align: middle;\n```\n\n---\n\n行高\n\n```css\nline-height:1.2;\nline-height:19.2px;\nline-height:120%;\n```\n\n---\n\n居中对齐\n\n```css\nmargin: 0 auto;\n```\n\n---\n\n```css\noutline: 1px solid red  !important;  // border 外框，outline是不占空间的，既不会增加额外的width或者height，边框占用宽度\n```\n\n---\n\n```css\n@media only screen and (max-width: 300px) {\n  /* style */\n}\n```\n\n---\n\n```css\nimg,\nembed,\nobject,\nvideo {\n  max-width: 100%;\n}\n```\n\n---\n\n手指大约 40px，小屏按钮最小设置为 48 * 48px，两个之间最好空 40px\n\n```css\nmin-height: 48px;\nmin-width: 48px;\n```\n\n---\n\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n```\n\n---\n\n```css\npadding: 1.5em inhenit;\n```\n\n---\n\n```css\ndisplay: flex;\nflex-wrap: wrap;\n```\n\n---\n\n```\ncalc(100px - 10%)\n *有效，* calc(100px-10%)\n *则无效\n```\n\n---\n\n```css\n`!important` 优先级最高\n\n.testClass{\n  color:blue !important;\n}\n```\n\n---\n\n你是否注意到，将 height\n 和 width\n 设置为 100vmax\n 或 100vmin\n 会如何改变图片的宽高比？它会将你的图片压缩成正方形，所以，如果你想要保留其他宽高比，请小心！\n\n---\n\n# 压缩、优化和自动化\n开始编写你自己的自动化 ImageMagick 或 ImageOptim 工具前，你需要安装 [Node.js](https://nodejs.org/en/download/) 和 [npm](https://docs.npmjs.com/getting-started/installing-node)。 ImageMagick:\n[ImageMagick](http://www.imagemagick.org/)\n[Mac 上的一个简单的 ImageMagick 安装包](http://cactuslab.com/imagemagick/)\n[GraphicsMagick](http://www.graphicsmagick.org/) (ImageMagick 的一个分叉)\n\nGrunt:\n[Grunt 简介](http://gruntjs.com/getting-started)\n[Grunt 使用入门](http://24ways.org/2013/grunt-is-not-weird-and-hard/)\n[用 Grunt 生成不同分辨率的图片](http://addyosmani.com/blog/generate-multi-resolution-images-for-srcset-with-grunt/)\n[用于生成多张图片的 grunt-responsive-images 插件](https://github.com/andismith/grunt-responsive-images)\n[用于响应式图片工作流的 grunt-respimg 插件](https://www.npmjs.com/package/grunt-respimg)\n\n脚本编制示例中使用的文件：\n[convert.sh](http://udacity.github.io/responsive-images/convert.sh) (含说明)\n[Gruntfile.js](http://udacity.github.io/responsive-images/Gruntfile.js) (对于 Windows，移除第 7 行：engine: 'im',\n)\n[Imager.js](https://github.com/BBC-News/Imager.js/)：为 BBC 新闻开发的响应式图片加载。\n\n图片处理工具：\n[ImageOptim](http://imageoptim.com/) (Mac)\n[Trimage](http://trimage.org/) - 和 ImageOptim 类似 (Windows, Mac, Linux)\n[ImageAlpha](https://github.com/pornel/ImageAlpha)\n\n# 图片压缩\n[PageSpeed Insights 示例](https://developers.google.com/speed/pagespeed/insights/?url=simpl.info%2Fcssfilters)\n[Grunt PageSpeed 插件](https://www.npmjs.com/package/grunt-pagespeed)\n[PageSpeed Node module](https://github.com/addyosmani/psi/)\n[cURL 示例](http://www.thegeekstuff.com/2012/04/curl-examples/)\n[PageSpeed Insights Node module](https://github.com/addyosmani/psi/)\n\n练习: 项目第 1 部分\n请从 [此处](http://udacity.github.io/responsive-images/downloads/RI-Project-Part-1-Start.zip)下载项目文档。*\n*请确保通过 localhost 运行项目。* 对于 Mac/Linux，请 cd\n 至工作目录并设置一个[简单的 HTTP 服务器](http://www.linuxjournal.com/content/tech-tip-really-simple-http-server-python)。对于 Windows，请参见下文。\nMake sure you are running the [Udacity Feedback Chrome Extension](https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi) to get feedback. 确保你已经安装了[优达学城前端反馈插件](https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi)。\n*打开控制台，看看图片的总体积！*\n[了解更多有关 figure 标签的信息！](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure)\n\n# 性能\n延迟会什么会成为新的瓶颈？[看看 Ilya ](http://chimera.labs.oreilly.com/books/1230000000545/ch10.html#MORE_BANDWIDTH_DOESNT_MATTER_MUCH)在*高性能浏览器网络*中有什么要说的。请注意缩短延迟如何不断改善页面加载时间，而使带宽的图表趋于平缓：\n![graph about latency](http://upload-images.jianshu.io/upload_images/1768578-826454c6055633cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n要减少图片下载次数，你也可以使用 [CSS 图片精灵](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/CSS_Image_Sprites)或[响应式精灵](http://blog.brianjohnsondesign.com/responsive-background-image-sprites-css-tutorial/%EF%BC%89%E3%80%82[%E7%B2%BE%E7%81%B5%E9%A1%B5](https://www.google.co.uk/images/nav_logo195.png) 图片组合了大量图片，这些图片可以通过将精灵页设置为元素背景，然后通过 CSS 调整背景位置来单独显示。此技巧对图标和其他重复图形尤为有用。\n**无论你采用何种技巧来避免延迟，都请注意 HTTP/2 带来的更改。**\n简单地说，HTTP/2 表示请求多个文件的成本更小：准备停止使用脚本编写、连接和其他 HTTP/1 技巧！\n如需了解更多信息，请查看[面向前端 Web 开发的 HTTP2](https://mattwilcox.net/web-development/http2-for-front-end-web-developers)。\n\n---\n\nCSS 背景图片\n[Div with background image](http://udacity.github.io/responsive-images/examples/2-06/divWithBackgroundImage)\n[CSS background-size: cover](http://udacity.github.io/responsive-images/examples/2-06/backgroundSizeCover)\n[Body with background image](http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImage)\n[Body with background image and gradient](http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImageAndGradient)\n[Body with elaborate background using only CSS](http://udacity.github.io/responsive-images/examples/2-06/bodyWithElaboratePatternPureCSS)\n[Using CSS background images for conditional image display](http://udacity.github.io/responsive-images/examples/2-06/backgroundImageConditional)\n[Using CSS background images for alternative images](http://udacity.github.io/responsive-images/examples/2-06/backgroundImageAlternative)\n[image-set()](http://udacity.github.io/responsive-images/examples/2-06/imageSet)\n\n---\n\n```css\nbackground-color: cover;\nbackground-color: contain;\n```\n\n---\n\n符号字符\n例子：[Unicode 代替图片](http://udacity.github.io/responsive-images/examples/2-08/unicodeStar)\n[Unicode 字符集](http://unicode-table.com/en/sets/)\n[Unicode 符号集合](http://en.wikipedia.org/wiki/List_of_Unicode_characters)\n\n---\n\n图标字体\n[Zocial](http://zocial.smcllns.com/)\n[Font Awesome](http://fortawesome.github.io/Font-Awesome/)\n[We Love Icon Fonts!](http://weloveiconfonts.com/)\n[Icon fonts on CSS-Tricks](https://css-tricks.com/examples/IconFont/)\n\n---\n\nSVG 和数据 URI 行内图片\n例子：\n[SVG Data URI in HTML](http://udacity.github.io/responsive-images/examples/2-11/svgDataUri)\n\n[SVG Data URI in CSS](http://udacity.github.io/responsive-images/examples/2-11/svgDataUriCss)\n\n[SVG text on a path](http://udacity.github.io/responsive-images/examples/2-11/svgTextOnAPath)\n\n[SVG optimized and unoptimized](http://udacity.github.io/responsive-images/examples/2-11/svgUnoptimisedAndOptimised)\n\n---\n\n示例：\n[srcset with w values](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues)\n[srcset with w values, 50vw](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw)\n\n---\n\nSizes 属性\n示例：\n[srcset with w values](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues)\n[srcset with w values, 50vw](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw)\n\n---\n\nsrcset 和 sizes 练习\n我想总结你刚刚学习的关于图片属性 srcset\n 和 sizes\n 的内容。 你可以借此机会先详细了解每个属性的语法，然后在下面两道测试题中，在真正的页面上尝试使用它们。\n在本测试题中，你将尝试使用 srcset\n。在下一道测试题中，你将添加 sizes\n，以便为浏览器提供更多信息。\n语法\nsrcset\n 有两种自定义方式，一种使用 x\n 来区分设备像素比 (DPR)，另一种使用 w\n 来描述图像的宽度。\n对设备像素比的反应\n<img src=\"image_2x.jpg\" srcset=\"image_2x.jpg 2x, image_1x.jpg 1x\" alt=\"a cool image\">\n\n将 srcset\n 设置为与逗号分隔的一连串 filename multiplier\n 对相等，其中每个 multiplier\n 必须是后跟 x\n 的整数。\n例如，1x\n 表示 1 倍显示屏，2x\n 表示像素密度为两倍的显示屏，如 Apple 的 Retina 显示屏。\n浏览器会下载与其 DPR 对应的最佳图片。\n另请注意，有一个作为备用的 src\n 属性。\n对图片宽度的反应\n<img src=\"image_200.jpg\" srcset=\"image_200.jpg 200w, image_100.jpg 100w\" alt=\"a cool image\">\n\n将 srcset\n 设置为与逗号分隔的一连串 filename widthDescriptor\n 对相等，其中每个 widthDescriptor\n 都以像素为测量单位， 并且必须是后跟 w\n 的整数。在这里，widthDescriptor\n 指定每个图片文件的自然宽度，使浏览器能够根据窗口大小和 DPR 选择要请求的最适当的图片。 （如果没有 widthDescriptor\n，浏览器需要下载图片才能知道其宽度！）\n另请注意，有一个作为备用的 src\n 属性。\n准备好尝试一下？单击“继续”试试吧！\n\nHere are my finished image tags:\nDPR (海牙)\n<img class=\"dpi\" src=\"images/Den_Haag_2x.jpg\" srcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x\" alt=\"Den Haag Skyline\">\n\n请注意我如何获得 src\n 作为备份。srcset\n 中的来源顺序无关紧要。此外，如果你遗漏了乘数，它将默认为 1x\n，也就是说，\nsrcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x\"\n\n等同于：\nsrcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg\"\n\n图片宽度（澳大利亚）\n<img class=\"w\" src=\"images/Australia_1280w.jpg\" srcset=\"images/Australia_1280w.jpg 1280w, images/Australia_640w.jpg 640w\" alt=\"Australia from Space\">\n\n同样地，会出现 src\n 备份，你可以切换 srcset\n 中的图片顺序。\n\n包含大小的图片宽度\n如果图片不以全窗口宽度显示会怎样？那么，除了 srcset\n 外，你还需要其他元素（假设图片将为全窗口宽度）\n向包含媒体查询的图片添加一个 sizes\n 属性和一个 vw\n 值。srcset\n 和 sizes\n 合起来可让浏览器知道图片的自然宽度以及图片相对于窗口宽度的显示宽度。 知道图片的显示宽度和可用图片文件的宽度后，浏览器将获得下载具有满足其需求的适当分辨率且尽可能小的图片所需的信息。 而且，浏览器在页面加载初期，解析 HTML 时即可做出此选择。\nsrcset 与 sizes 配合使用的语法\n这里是一个示例：\n<img src=\"images/great_pic_800.jpg\" sizes=\"(max-width: 400px) 100vw, (min-width: 401px) 50vw\" srcset=\"images/great_pic_400.jpg 400w, images/great_pic_800.jpg 800w\" alt=\"great picture\">\n\nsizes\n 由以逗号分隔的 mediaQuery width\n 对组成。sizes\n 会在加载流程初期告诉浏览器，该图片会在点击 mediaQuery\n 时以某个 width\n 显示。\n实际上，如果 sizes\n 缺失，浏览器会将 sizes\n 默认为 100vw\n，表示它预计图片将以全窗口宽度显示。\nsizes\n 会为浏览器额外提供一条信息，以确保它根据图片的最终显示宽度下载正确的图片文件。说明一下，它实际上*不会*调整图片的大小 - 这是 CSS 的工作。\n在本示例中，如果浏览器的窗口宽度等于或小于 400 像素，浏览器知道图片将为全窗口宽度；如果窗口宽度大于 400 像素，则为一半窗口宽度。浏览器知道它具有两个图片选项 - 一个具有 400 像素的自然宽度，另一个具有 800 像素。\n准备好帮助浏览器了？单击“继续”亲自试试吧！\n\n这里是我已完成的图片标记：\n<img class=\"w\" src=\"images/Coffee_1280w.jpg\" srcset=\"images/Coffee_1280w.jpg 1280w, images/Coffee_640w.jpg 640w\" sizes=\"(max-width: 960px) 50vw, 100vw\" alt=\"Coffee by Amy March from Turkey\">\n\n我没有在 sizes\n 中包括第二个媒体查询，因为如果没有媒体查询，列出的宽度会被视为默认值。\n另外请注意，sizes\n 中的媒体查询与 CSS 匹配。说明一下，更改 sizes\n 不会影响 CSS。它只会提醒浏览器注意最终需要在该处显示的图片。\n\n---\n\n网络广播从最初在系统上设置 Grunt 开始， 一直讲到设置完整的项目流程。\n此处链接为 [关于此网络广播的详细论坛文章 ](https://discussions.udacity.com/t/grunt-and-setting-up-a-grunt-workflow-intermediate/21984)。 文章中包含对 Grunt 安装配置和设置任务 的相关向导。\n此处链接为 [在网络广播中使用的 GitHub 存储库 ](https://github.com/JohnUdacity/grunt-workflow-guide)。\n有关网络广播的详细整理，请访问 [此处](https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp).\n\n---\n\n设置 Gulp 工作流演示（概要）\n由学习教练 John 主讲，有关如何设置 Gulp 的现场演示。\nGulp 可代替前端开发人员完成所有必需的繁琐、 重复性任务：压缩、串联、lint 操作、 图像优化、Git 提交等多种任务， 都可以交由 Gulp 来实现。从而让你能够集中精力处理重要任务，也就是 编写代码。\n网络广播从最初在系统上设置 Gulp 开始， 一直讲到设置完整的项目流程。\n要查看网络广播的详细概要（包括代码 段），请参阅此 [论坛 文章](https://discussions.udacity.com/t/gulp-and-setting-up-a-gulp-workflow-intermediate/24359).\n如果想要跟随演示学习，请在 [此存储库](https://github.com/JohnUdacity/gulp-start) 中下载起始代码。\n有关网络广播的详细整理，请访问 [此处](https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp).\n","source":"_drafts/css.md","raw":"---\ntitle: css\ndate: 2017-05-22 16:02:16\ntags:\nlayout: false\n---\n![](http://upload-images.jianshu.io/upload_images/1768578-678f35e772132a47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```css\nfont-family: Helvetica, Arial, sans-serif;\nfont-size: 60px;\ntext-transform: uppercase;  // 大写\ntext-decoration: underline;  // 下划线\ncolor: #8001ff;\n```\n---\n\n![](http://upload-images.jianshu.io/upload_images/1768578-ae3d31ed146b7798.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```css\nborder: 5px dashed salmon;\nborder-radius: 5px;\ncursor: pointer;\nbox-shadow: 5px 5px 20px #ccc;\n```\n\n---\n\n```css\ndisplay: block;  // 块元素\ndisplay: inline;  // 内联元素\n```\n`inline`, `weight` 和 `height` 无效。\n\n---\n\n```css\nbox-sizing: border-box;  // width 计算 padding 和 border\n-webkit-box-sizing: border-box;\n-moz-box-sizing: border-box;\n-ms-box-sizing: border-box;\n```\n\n---\n\n![](http://upload-images.jianshu.io/upload_images/1768578-470c41345887b0a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```css\ntext-align: justify;  // 左右对齐\n```\n\n---\n\n垂直对齐\n\n```css\nvertical-align: top;\nvertical-align: bottom;\nvertical-align: middle;\n```\n\n---\n\n行高\n\n```css\nline-height:1.2;\nline-height:19.2px;\nline-height:120%;\n```\n\n---\n\n居中对齐\n\n```css\nmargin: 0 auto;\n```\n\n---\n\n```css\noutline: 1px solid red  !important;  // border 外框，outline是不占空间的，既不会增加额外的width或者height，边框占用宽度\n```\n\n---\n\n```css\n@media only screen and (max-width: 300px) {\n  /* style */\n}\n```\n\n---\n\n```css\nimg,\nembed,\nobject,\nvideo {\n  max-width: 100%;\n}\n```\n\n---\n\n手指大约 40px，小屏按钮最小设置为 48 * 48px，两个之间最好空 40px\n\n```css\nmin-height: 48px;\nmin-width: 48px;\n```\n\n---\n\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n```\n\n---\n\n```css\npadding: 1.5em inhenit;\n```\n\n---\n\n```css\ndisplay: flex;\nflex-wrap: wrap;\n```\n\n---\n\n```\ncalc(100px - 10%)\n *有效，* calc(100px-10%)\n *则无效\n```\n\n---\n\n```css\n`!important` 优先级最高\n\n.testClass{\n  color:blue !important;\n}\n```\n\n---\n\n你是否注意到，将 height\n 和 width\n 设置为 100vmax\n 或 100vmin\n 会如何改变图片的宽高比？它会将你的图片压缩成正方形，所以，如果你想要保留其他宽高比，请小心！\n\n---\n\n# 压缩、优化和自动化\n开始编写你自己的自动化 ImageMagick 或 ImageOptim 工具前，你需要安装 [Node.js](https://nodejs.org/en/download/) 和 [npm](https://docs.npmjs.com/getting-started/installing-node)。 ImageMagick:\n[ImageMagick](http://www.imagemagick.org/)\n[Mac 上的一个简单的 ImageMagick 安装包](http://cactuslab.com/imagemagick/)\n[GraphicsMagick](http://www.graphicsmagick.org/) (ImageMagick 的一个分叉)\n\nGrunt:\n[Grunt 简介](http://gruntjs.com/getting-started)\n[Grunt 使用入门](http://24ways.org/2013/grunt-is-not-weird-and-hard/)\n[用 Grunt 生成不同分辨率的图片](http://addyosmani.com/blog/generate-multi-resolution-images-for-srcset-with-grunt/)\n[用于生成多张图片的 grunt-responsive-images 插件](https://github.com/andismith/grunt-responsive-images)\n[用于响应式图片工作流的 grunt-respimg 插件](https://www.npmjs.com/package/grunt-respimg)\n\n脚本编制示例中使用的文件：\n[convert.sh](http://udacity.github.io/responsive-images/convert.sh) (含说明)\n[Gruntfile.js](http://udacity.github.io/responsive-images/Gruntfile.js) (对于 Windows，移除第 7 行：engine: 'im',\n)\n[Imager.js](https://github.com/BBC-News/Imager.js/)：为 BBC 新闻开发的响应式图片加载。\n\n图片处理工具：\n[ImageOptim](http://imageoptim.com/) (Mac)\n[Trimage](http://trimage.org/) - 和 ImageOptim 类似 (Windows, Mac, Linux)\n[ImageAlpha](https://github.com/pornel/ImageAlpha)\n\n# 图片压缩\n[PageSpeed Insights 示例](https://developers.google.com/speed/pagespeed/insights/?url=simpl.info%2Fcssfilters)\n[Grunt PageSpeed 插件](https://www.npmjs.com/package/grunt-pagespeed)\n[PageSpeed Node module](https://github.com/addyosmani/psi/)\n[cURL 示例](http://www.thegeekstuff.com/2012/04/curl-examples/)\n[PageSpeed Insights Node module](https://github.com/addyosmani/psi/)\n\n练习: 项目第 1 部分\n请从 [此处](http://udacity.github.io/responsive-images/downloads/RI-Project-Part-1-Start.zip)下载项目文档。*\n*请确保通过 localhost 运行项目。* 对于 Mac/Linux，请 cd\n 至工作目录并设置一个[简单的 HTTP 服务器](http://www.linuxjournal.com/content/tech-tip-really-simple-http-server-python)。对于 Windows，请参见下文。\nMake sure you are running the [Udacity Feedback Chrome Extension](https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi) to get feedback. 确保你已经安装了[优达学城前端反馈插件](https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi)。\n*打开控制台，看看图片的总体积！*\n[了解更多有关 figure 标签的信息！](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure)\n\n# 性能\n延迟会什么会成为新的瓶颈？[看看 Ilya ](http://chimera.labs.oreilly.com/books/1230000000545/ch10.html#MORE_BANDWIDTH_DOESNT_MATTER_MUCH)在*高性能浏览器网络*中有什么要说的。请注意缩短延迟如何不断改善页面加载时间，而使带宽的图表趋于平缓：\n![graph about latency](http://upload-images.jianshu.io/upload_images/1768578-826454c6055633cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n要减少图片下载次数，你也可以使用 [CSS 图片精灵](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/CSS_Image_Sprites)或[响应式精灵](http://blog.brianjohnsondesign.com/responsive-background-image-sprites-css-tutorial/%EF%BC%89%E3%80%82[%E7%B2%BE%E7%81%B5%E9%A1%B5](https://www.google.co.uk/images/nav_logo195.png) 图片组合了大量图片，这些图片可以通过将精灵页设置为元素背景，然后通过 CSS 调整背景位置来单独显示。此技巧对图标和其他重复图形尤为有用。\n**无论你采用何种技巧来避免延迟，都请注意 HTTP/2 带来的更改。**\n简单地说，HTTP/2 表示请求多个文件的成本更小：准备停止使用脚本编写、连接和其他 HTTP/1 技巧！\n如需了解更多信息，请查看[面向前端 Web 开发的 HTTP2](https://mattwilcox.net/web-development/http2-for-front-end-web-developers)。\n\n---\n\nCSS 背景图片\n[Div with background image](http://udacity.github.io/responsive-images/examples/2-06/divWithBackgroundImage)\n[CSS background-size: cover](http://udacity.github.io/responsive-images/examples/2-06/backgroundSizeCover)\n[Body with background image](http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImage)\n[Body with background image and gradient](http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImageAndGradient)\n[Body with elaborate background using only CSS](http://udacity.github.io/responsive-images/examples/2-06/bodyWithElaboratePatternPureCSS)\n[Using CSS background images for conditional image display](http://udacity.github.io/responsive-images/examples/2-06/backgroundImageConditional)\n[Using CSS background images for alternative images](http://udacity.github.io/responsive-images/examples/2-06/backgroundImageAlternative)\n[image-set()](http://udacity.github.io/responsive-images/examples/2-06/imageSet)\n\n---\n\n```css\nbackground-color: cover;\nbackground-color: contain;\n```\n\n---\n\n符号字符\n例子：[Unicode 代替图片](http://udacity.github.io/responsive-images/examples/2-08/unicodeStar)\n[Unicode 字符集](http://unicode-table.com/en/sets/)\n[Unicode 符号集合](http://en.wikipedia.org/wiki/List_of_Unicode_characters)\n\n---\n\n图标字体\n[Zocial](http://zocial.smcllns.com/)\n[Font Awesome](http://fortawesome.github.io/Font-Awesome/)\n[We Love Icon Fonts!](http://weloveiconfonts.com/)\n[Icon fonts on CSS-Tricks](https://css-tricks.com/examples/IconFont/)\n\n---\n\nSVG 和数据 URI 行内图片\n例子：\n[SVG Data URI in HTML](http://udacity.github.io/responsive-images/examples/2-11/svgDataUri)\n\n[SVG Data URI in CSS](http://udacity.github.io/responsive-images/examples/2-11/svgDataUriCss)\n\n[SVG text on a path](http://udacity.github.io/responsive-images/examples/2-11/svgTextOnAPath)\n\n[SVG optimized and unoptimized](http://udacity.github.io/responsive-images/examples/2-11/svgUnoptimisedAndOptimised)\n\n---\n\n示例：\n[srcset with w values](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues)\n[srcset with w values, 50vw](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw)\n\n---\n\nSizes 属性\n示例：\n[srcset with w values](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues)\n[srcset with w values, 50vw](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw)\n\n---\n\nsrcset 和 sizes 练习\n我想总结你刚刚学习的关于图片属性 srcset\n 和 sizes\n 的内容。 你可以借此机会先详细了解每个属性的语法，然后在下面两道测试题中，在真正的页面上尝试使用它们。\n在本测试题中，你将尝试使用 srcset\n。在下一道测试题中，你将添加 sizes\n，以便为浏览器提供更多信息。\n语法\nsrcset\n 有两种自定义方式，一种使用 x\n 来区分设备像素比 (DPR)，另一种使用 w\n 来描述图像的宽度。\n对设备像素比的反应\n<img src=\"image_2x.jpg\" srcset=\"image_2x.jpg 2x, image_1x.jpg 1x\" alt=\"a cool image\">\n\n将 srcset\n 设置为与逗号分隔的一连串 filename multiplier\n 对相等，其中每个 multiplier\n 必须是后跟 x\n 的整数。\n例如，1x\n 表示 1 倍显示屏，2x\n 表示像素密度为两倍的显示屏，如 Apple 的 Retina 显示屏。\n浏览器会下载与其 DPR 对应的最佳图片。\n另请注意，有一个作为备用的 src\n 属性。\n对图片宽度的反应\n<img src=\"image_200.jpg\" srcset=\"image_200.jpg 200w, image_100.jpg 100w\" alt=\"a cool image\">\n\n将 srcset\n 设置为与逗号分隔的一连串 filename widthDescriptor\n 对相等，其中每个 widthDescriptor\n 都以像素为测量单位， 并且必须是后跟 w\n 的整数。在这里，widthDescriptor\n 指定每个图片文件的自然宽度，使浏览器能够根据窗口大小和 DPR 选择要请求的最适当的图片。 （如果没有 widthDescriptor\n，浏览器需要下载图片才能知道其宽度！）\n另请注意，有一个作为备用的 src\n 属性。\n准备好尝试一下？单击“继续”试试吧！\n\nHere are my finished image tags:\nDPR (海牙)\n<img class=\"dpi\" src=\"images/Den_Haag_2x.jpg\" srcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x\" alt=\"Den Haag Skyline\">\n\n请注意我如何获得 src\n 作为备份。srcset\n 中的来源顺序无关紧要。此外，如果你遗漏了乘数，它将默认为 1x\n，也就是说，\nsrcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x\"\n\n等同于：\nsrcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg\"\n\n图片宽度（澳大利亚）\n<img class=\"w\" src=\"images/Australia_1280w.jpg\" srcset=\"images/Australia_1280w.jpg 1280w, images/Australia_640w.jpg 640w\" alt=\"Australia from Space\">\n\n同样地，会出现 src\n 备份，你可以切换 srcset\n 中的图片顺序。\n\n包含大小的图片宽度\n如果图片不以全窗口宽度显示会怎样？那么，除了 srcset\n 外，你还需要其他元素（假设图片将为全窗口宽度）\n向包含媒体查询的图片添加一个 sizes\n 属性和一个 vw\n 值。srcset\n 和 sizes\n 合起来可让浏览器知道图片的自然宽度以及图片相对于窗口宽度的显示宽度。 知道图片的显示宽度和可用图片文件的宽度后，浏览器将获得下载具有满足其需求的适当分辨率且尽可能小的图片所需的信息。 而且，浏览器在页面加载初期，解析 HTML 时即可做出此选择。\nsrcset 与 sizes 配合使用的语法\n这里是一个示例：\n<img src=\"images/great_pic_800.jpg\" sizes=\"(max-width: 400px) 100vw, (min-width: 401px) 50vw\" srcset=\"images/great_pic_400.jpg 400w, images/great_pic_800.jpg 800w\" alt=\"great picture\">\n\nsizes\n 由以逗号分隔的 mediaQuery width\n 对组成。sizes\n 会在加载流程初期告诉浏览器，该图片会在点击 mediaQuery\n 时以某个 width\n 显示。\n实际上，如果 sizes\n 缺失，浏览器会将 sizes\n 默认为 100vw\n，表示它预计图片将以全窗口宽度显示。\nsizes\n 会为浏览器额外提供一条信息，以确保它根据图片的最终显示宽度下载正确的图片文件。说明一下，它实际上*不会*调整图片的大小 - 这是 CSS 的工作。\n在本示例中，如果浏览器的窗口宽度等于或小于 400 像素，浏览器知道图片将为全窗口宽度；如果窗口宽度大于 400 像素，则为一半窗口宽度。浏览器知道它具有两个图片选项 - 一个具有 400 像素的自然宽度，另一个具有 800 像素。\n准备好帮助浏览器了？单击“继续”亲自试试吧！\n\n这里是我已完成的图片标记：\n<img class=\"w\" src=\"images/Coffee_1280w.jpg\" srcset=\"images/Coffee_1280w.jpg 1280w, images/Coffee_640w.jpg 640w\" sizes=\"(max-width: 960px) 50vw, 100vw\" alt=\"Coffee by Amy March from Turkey\">\n\n我没有在 sizes\n 中包括第二个媒体查询，因为如果没有媒体查询，列出的宽度会被视为默认值。\n另外请注意，sizes\n 中的媒体查询与 CSS 匹配。说明一下，更改 sizes\n 不会影响 CSS。它只会提醒浏览器注意最终需要在该处显示的图片。\n\n---\n\n网络广播从最初在系统上设置 Grunt 开始， 一直讲到设置完整的项目流程。\n此处链接为 [关于此网络广播的详细论坛文章 ](https://discussions.udacity.com/t/grunt-and-setting-up-a-grunt-workflow-intermediate/21984)。 文章中包含对 Grunt 安装配置和设置任务 的相关向导。\n此处链接为 [在网络广播中使用的 GitHub 存储库 ](https://github.com/JohnUdacity/grunt-workflow-guide)。\n有关网络广播的详细整理，请访问 [此处](https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp).\n\n---\n\n设置 Gulp 工作流演示（概要）\n由学习教练 John 主讲，有关如何设置 Gulp 的现场演示。\nGulp 可代替前端开发人员完成所有必需的繁琐、 重复性任务：压缩、串联、lint 操作、 图像优化、Git 提交等多种任务， 都可以交由 Gulp 来实现。从而让你能够集中精力处理重要任务，也就是 编写代码。\n网络广播从最初在系统上设置 Gulp 开始， 一直讲到设置完整的项目流程。\n要查看网络广播的详细概要（包括代码 段），请参阅此 [论坛 文章](https://discussions.udacity.com/t/gulp-and-setting-up-a-gulp-workflow-intermediate/24359).\n如果想要跟随演示学习，请在 [此存储库](https://github.com/JohnUdacity/gulp-start) 中下载起始代码。\n有关网络广播的详细整理，请访问 [此处](https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp).\n","slug":"css","published":0,"updated":"2017-05-22T08:13:17.663Z","comments":1,"photos":[],"link":"","_id":"cj44zcks70000536usp6n4lu1","content":"<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-678f35e772132a47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">font-family: Helvetica, Arial, sans-serif;</div><div class=\"line\">font-size: 60px;</div><div class=\"line\">text-transform: uppercase;  // 大写</div><div class=\"line\">text-decoration: underline;  // 下划线</div><div class=\"line\">color: #8001ff;</div></pre></td></tr></table></figure>\n<hr>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-ae3d31ed146b7798.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">border</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">dashed</span> <span class=\"selector-tag\">salmon</span>;</div><div class=\"line\"><span class=\"selector-tag\">border-radius</span>: 5<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</div><div class=\"line\"><span class=\"selector-tag\">box-shadow</span>: 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> 20<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#ccc</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">display: block;  // 块元素</div><div class=\"line\">display: inline;  // 内联元素</div></pre></td></tr></table></figure>\n<p><code>inline</code>, <code>weight</code> 和 <code>height</code> 无效。</p>\n<hr>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">box-sizing: border-box;  // width 计算 padding 和 border</div><div class=\"line\">-webkit-box-sizing: border-box;</div><div class=\"line\">-moz-box-sizing: border-box;</div><div class=\"line\">-ms-box-sizing: border-box;</div></pre></td></tr></table></figure>\n<hr>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-470c41345887b0a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">text-align: justify;  // 左右对齐</div></pre></td></tr></table></figure>\n<hr>\n<p>垂直对齐</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">top</span>;</div><div class=\"line\"><span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">bottom</span>;</div><div class=\"line\"><span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">middle</span>;</div></pre></td></tr></table></figure>\n<hr>\n<p>行高</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">line-height</span><span class=\"selector-pseudo\">:1.2</span>;</div><div class=\"line\"><span class=\"selector-tag\">line-height</span><span class=\"selector-pseudo\">:19.2px</span>;</div><div class=\"line\"><span class=\"selector-tag\">line-height</span><span class=\"selector-pseudo\">:120</span>%;</div></pre></td></tr></table></figure>\n<hr>\n<p>居中对齐</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">margin</span>: 0 <span class=\"selector-tag\">auto</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">outline: 1px solid red  !important;  // border 外框，outline是不占空间的，既不会增加额外的width或者height，边框占用宽度</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">media</span> only screen and (max-width: <span class=\"number\">300px</span>) &#123;</div><div class=\"line\">  <span class=\"comment\">/* style */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">img</span>,</div><div class=\"line\"><span class=\"selector-tag\">embed</span>,</div><div class=\"line\"><span class=\"selector-tag\">object</span>,</div><div class=\"line\"><span class=\"selector-tag\">video</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<p>手指大约 40px，小屏按钮最小设置为 48 * 48px，两个之间最好空 40px</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">min-height</span>: 48<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">min-width</span>: 48<span class=\"selector-tag\">px</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">padding</span>: 1<span class=\"selector-class\">.5em</span> <span class=\"selector-tag\">inhenit</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span>;</div><div class=\"line\"><span class=\"selector-tag\">flex-wrap</span>: <span class=\"selector-tag\">wrap</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">calc(<span class=\"number\">100</span>px - <span class=\"number\">10</span>%)</div><div class=\"line\"> *有效，* calc(<span class=\"number\">100</span>px<span class=\"number\">-10</span>%)</div><div class=\"line\"> *则无效</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">`!<span class=\"selector-tag\">important</span>` 优先级最高</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.testClass</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">color</span>:blue <span class=\"meta\">!important</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<p>你是否注意到，将 height<br> 和 width<br> 设置为 100vmax<br> 或 100vmin<br> 会如何改变图片的宽高比？它会将你的图片压缩成正方形，所以，如果你想要保留其他宽高比，请小心！</p>\n<hr>\n<h1 id=\"压缩、优化和自动化\"><a href=\"#压缩、优化和自动化\" class=\"headerlink\" title=\"压缩、优化和自动化\"></a>压缩、优化和自动化</h1><p>开始编写你自己的自动化 ImageMagick 或 ImageOptim 工具前，你需要安装 <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"external\">Node.js</a> 和 <a href=\"https://docs.npmjs.com/getting-started/installing-node\" target=\"_blank\" rel=\"external\">npm</a>。 ImageMagick:<br><a href=\"http://www.imagemagick.org/\" target=\"_blank\" rel=\"external\">ImageMagick</a><br><a href=\"http://cactuslab.com/imagemagick/\" target=\"_blank\" rel=\"external\">Mac 上的一个简单的 ImageMagick 安装包</a><br><a href=\"http://www.graphicsmagick.org/\" target=\"_blank\" rel=\"external\">GraphicsMagick</a> (ImageMagick 的一个分叉)</p>\n<p>Grunt:<br><a href=\"http://gruntjs.com/getting-started\" target=\"_blank\" rel=\"external\">Grunt 简介</a><br><a href=\"http://24ways.org/2013/grunt-is-not-weird-and-hard/\" target=\"_blank\" rel=\"external\">Grunt 使用入门</a><br><a href=\"http://addyosmani.com/blog/generate-multi-resolution-images-for-srcset-with-grunt/\" target=\"_blank\" rel=\"external\">用 Grunt 生成不同分辨率的图片</a><br><a href=\"https://github.com/andismith/grunt-responsive-images\" target=\"_blank\" rel=\"external\">用于生成多张图片的 grunt-responsive-images 插件</a><br><a href=\"https://www.npmjs.com/package/grunt-respimg\" target=\"_blank\" rel=\"external\">用于响应式图片工作流的 grunt-respimg 插件</a></p>\n<p>脚本编制示例中使用的文件：<br><a href=\"http://udacity.github.io/responsive-images/convert.sh\" target=\"_blank\" rel=\"external\">convert.sh</a> (含说明)<br><a href=\"http://udacity.github.io/responsive-images/Gruntfile.js\" target=\"_blank\" rel=\"external\">Gruntfile.js</a> (对于 Windows，移除第 7 行：engine: ‘im’,<br>)<br><a href=\"https://github.com/BBC-News/Imager.js/\" target=\"_blank\" rel=\"external\">Imager.js</a>：为 BBC 新闻开发的响应式图片加载。</p>\n<p>图片处理工具：<br><a href=\"http://imageoptim.com/\" target=\"_blank\" rel=\"external\">ImageOptim</a> (Mac)<br><a href=\"http://trimage.org/\" target=\"_blank\" rel=\"external\">Trimage</a> - 和 ImageOptim 类似 (Windows, Mac, Linux)<br><a href=\"https://github.com/pornel/ImageAlpha\" target=\"_blank\" rel=\"external\">ImageAlpha</a></p>\n<h1 id=\"图片压缩\"><a href=\"#图片压缩\" class=\"headerlink\" title=\"图片压缩\"></a>图片压缩</h1><p><a href=\"https://developers.google.com/speed/pagespeed/insights/?url=simpl.info%2Fcssfilters\" target=\"_blank\" rel=\"external\">PageSpeed Insights 示例</a><br><a href=\"https://www.npmjs.com/package/grunt-pagespeed\" target=\"_blank\" rel=\"external\">Grunt PageSpeed 插件</a><br><a href=\"https://github.com/addyosmani/psi/\" target=\"_blank\" rel=\"external\">PageSpeed Node module</a><br><a href=\"http://www.thegeekstuff.com/2012/04/curl-examples/\" target=\"_blank\" rel=\"external\">cURL 示例</a><br><a href=\"https://github.com/addyosmani/psi/\" target=\"_blank\" rel=\"external\">PageSpeed Insights Node module</a></p>\n<p>练习: 项目第 1 部分<br>请从 <a href=\"http://udacity.github.io/responsive-images/downloads/RI-Project-Part-1-Start.zip\" target=\"_blank\" rel=\"external\">此处</a>下载项目文档。<em>\n</em>请确保通过 localhost 运行项目。<em> 对于 Mac/Linux，请 cd<br> 至工作目录并设置一个<a href=\"http://www.linuxjournal.com/content/tech-tip-really-simple-http-server-python\" target=\"_blank\" rel=\"external\">简单的 HTTP 服务器</a>。对于 Windows，请参见下文。<br>Make sure you are running the <a href=\"https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi\" target=\"_blank\" rel=\"external\">Udacity Feedback Chrome Extension</a> to get feedback. 确保你已经安装了<a href=\"https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi\" target=\"_blank\" rel=\"external\">优达学城前端反馈插件</a>。\n</em>打开控制台，看看图片的总体积！*<br><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure\" target=\"_blank\" rel=\"external\">了解更多有关 figure 标签的信息！</a></p>\n<h1 id=\"性能\"><a href=\"#性能\" class=\"headerlink\" title=\"性能\"></a>性能</h1><p>延迟会什么会成为新的瓶颈？<a href=\"http://chimera.labs.oreilly.com/books/1230000000545/ch10.html#MORE_BANDWIDTH_DOESNT_MATTER_MUCH\" target=\"_blank\" rel=\"external\">看看 Ilya </a>在<em>高性能浏览器网络</em>中有什么要说的。请注意缩短延迟如何不断改善页面加载时间，而使带宽的图表趋于平缓：<br><img src=\"http://upload-images.jianshu.io/upload_images/1768578-826454c6055633cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"graph about latency\"><br>要减少图片下载次数，你也可以使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/CSS_Image_Sprites\" target=\"_blank\" rel=\"external\">CSS 图片精灵</a>或<a href=\"http://blog.brianjohnsondesign.com/responsive-background-image-sprites-css-tutorial/%EF%BC%89%E3%80%82[%E7%B2%BE%E7%81%B5%E9%A1%B5](https://www.google.co.uk/images/nav_logo195.png\" target=\"_blank\" rel=\"external\">响应式精灵</a> 图片组合了大量图片，这些图片可以通过将精灵页设置为元素背景，然后通过 CSS 调整背景位置来单独显示。此技巧对图标和其他重复图形尤为有用。<br><strong>无论你采用何种技巧来避免延迟，都请注意 HTTP/2 带来的更改。</strong><br>简单地说，HTTP/2 表示请求多个文件的成本更小：准备停止使用脚本编写、连接和其他 HTTP/1 技巧！<br>如需了解更多信息，请查看<a href=\"https://mattwilcox.net/web-development/http2-for-front-end-web-developers\" target=\"_blank\" rel=\"external\">面向前端 Web 开发的 HTTP2</a>。</p>\n<hr>\n<p>CSS 背景图片<br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/divWithBackgroundImage\" target=\"_blank\" rel=\"external\">Div with background image</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/backgroundSizeCover\" target=\"_blank\" rel=\"external\">CSS background-size: cover</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImage\" target=\"_blank\" rel=\"external\">Body with background image</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImageAndGradient\" target=\"_blank\" rel=\"external\">Body with background image and gradient</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/bodyWithElaboratePatternPureCSS\" target=\"_blank\" rel=\"external\">Body with elaborate background using only CSS</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/backgroundImageConditional\" target=\"_blank\" rel=\"external\">Using CSS background images for conditional image display</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/backgroundImageAlternative\" target=\"_blank\" rel=\"external\">Using CSS background images for alternative images</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/imageSet\" target=\"_blank\" rel=\"external\">image-set()</a></p>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">background-color</span>: <span class=\"selector-tag\">cover</span>;</div><div class=\"line\"><span class=\"selector-tag\">background-color</span>: <span class=\"selector-tag\">contain</span>;</div></pre></td></tr></table></figure>\n<hr>\n<p>符号字符<br>例子：<a href=\"http://udacity.github.io/responsive-images/examples/2-08/unicodeStar\" target=\"_blank\" rel=\"external\">Unicode 代替图片</a><br><a href=\"http://unicode-table.com/en/sets/\" target=\"_blank\" rel=\"external\">Unicode 字符集</a><br><a href=\"http://en.wikipedia.org/wiki/List_of_Unicode_characters\" target=\"_blank\" rel=\"external\">Unicode 符号集合</a></p>\n<hr>\n<p>图标字体<br><a href=\"http://zocial.smcllns.com/\" target=\"_blank\" rel=\"external\">Zocial</a><br><a href=\"http://fortawesome.github.io/Font-Awesome/\" target=\"_blank\" rel=\"external\">Font Awesome</a><br><a href=\"http://weloveiconfonts.com/\" target=\"_blank\" rel=\"external\">We Love Icon Fonts!</a><br><a href=\"https://css-tricks.com/examples/IconFont/\" target=\"_blank\" rel=\"external\">Icon fonts on CSS-Tricks</a></p>\n<hr>\n<p>SVG 和数据 URI 行内图片<br>例子：<br><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgDataUri\" target=\"_blank\" rel=\"external\">SVG Data URI in HTML</a></p>\n<p><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgDataUriCss\" target=\"_blank\" rel=\"external\">SVG Data URI in CSS</a></p>\n<p><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgTextOnAPath\" target=\"_blank\" rel=\"external\">SVG text on a path</a></p>\n<p><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgUnoptimisedAndOptimised\" target=\"_blank\" rel=\"external\">SVG optimized and unoptimized</a></p>\n<hr>\n<p>示例：<br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues\" target=\"_blank\" rel=\"external\">srcset with w values</a><br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw\" target=\"_blank\" rel=\"external\">srcset with w values, 50vw</a></p>\n<hr>\n<p>Sizes 属性<br>示例：<br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues\" target=\"_blank\" rel=\"external\">srcset with w values</a><br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw\" target=\"_blank\" rel=\"external\">srcset with w values, 50vw</a></p>\n<hr>\n<p>srcset 和 sizes 练习<br>我想总结你刚刚学习的关于图片属性 srcset<br> 和 sizes<br> 的内容。 你可以借此机会先详细了解每个属性的语法，然后在下面两道测试题中，在真正的页面上尝试使用它们。<br>在本测试题中，你将尝试使用 srcset<br>。在下一道测试题中，你将添加 sizes<br>，以便为浏览器提供更多信息。<br>语法<br>srcset<br> 有两种自定义方式，一种使用 x<br> 来区分设备像素比 (DPR)，另一种使用 w<br> 来描述图像的宽度。<br>对设备像素比的反应<br><img src=\"image_2x.jpg\" srcset=\"image_2x.jpg 2x, image_1x.jpg 1x\" alt=\"a cool image\"></p>\n<p>将 srcset<br> 设置为与逗号分隔的一连串 filename multiplier<br> 对相等，其中每个 multiplier<br> 必须是后跟 x<br> 的整数。<br>例如，1x<br> 表示 1 倍显示屏，2x<br> 表示像素密度为两倍的显示屏，如 Apple 的 Retina 显示屏。<br>浏览器会下载与其 DPR 对应的最佳图片。<br>另请注意，有一个作为备用的 src<br> 属性。<br>对图片宽度的反应<br><img src=\"image_200.jpg\" srcset=\"image_200.jpg 200w, image_100.jpg 100w\" alt=\"a cool image\"></p>\n<p>将 srcset<br> 设置为与逗号分隔的一连串 filename widthDescriptor<br> 对相等，其中每个 widthDescriptor<br> 都以像素为测量单位， 并且必须是后跟 w<br> 的整数。在这里，widthDescriptor<br> 指定每个图片文件的自然宽度，使浏览器能够根据窗口大小和 DPR 选择要请求的最适当的图片。 （如果没有 widthDescriptor<br>，浏览器需要下载图片才能知道其宽度！）<br>另请注意，有一个作为备用的 src<br> 属性。<br>准备好尝试一下？单击“继续”试试吧！</p>\n<p>Here are my finished image tags:<br>DPR (海牙)<br><img class=\"dpi\" src=\"images/Den_Haag_2x.jpg\" srcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x\" alt=\"Den Haag Skyline\"></p>\n<p>请注意我如何获得 src<br> 作为备份。srcset<br> 中的来源顺序无关紧要。此外，如果你遗漏了乘数，它将默认为 1x<br>，也就是说，<br>srcset=”images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x”</p>\n<p>等同于：<br>srcset=”images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg”</p>\n<p>图片宽度（澳大利亚）<br><img class=\"w\" src=\"images/Australia_1280w.jpg\" srcset=\"images/Australia_1280w.jpg 1280w, images/Australia_640w.jpg 640w\" alt=\"Australia from Space\"></p>\n<p>同样地，会出现 src<br> 备份，你可以切换 srcset<br> 中的图片顺序。</p>\n<p>包含大小的图片宽度<br>如果图片不以全窗口宽度显示会怎样？那么，除了 srcset<br> 外，你还需要其他元素（假设图片将为全窗口宽度）<br>向包含媒体查询的图片添加一个 sizes<br> 属性和一个 vw<br> 值。srcset<br> 和 sizes<br> 合起来可让浏览器知道图片的自然宽度以及图片相对于窗口宽度的显示宽度。 知道图片的显示宽度和可用图片文件的宽度后，浏览器将获得下载具有满足其需求的适当分辨率且尽可能小的图片所需的信息。 而且，浏览器在页面加载初期，解析 HTML 时即可做出此选择。<br>srcset 与 sizes 配合使用的语法<br>这里是一个示例：<br><img src=\"images/great_pic_800.jpg\" sizes=\"(max-width: 400px) 100vw, (min-width: 401px) 50vw\" srcset=\"images/great_pic_400.jpg 400w, images/great_pic_800.jpg 800w\" alt=\"great picture\"></p>\n<p>sizes<br> 由以逗号分隔的 mediaQuery width<br> 对组成。sizes<br> 会在加载流程初期告诉浏览器，该图片会在点击 mediaQuery<br> 时以某个 width<br> 显示。<br>实际上，如果 sizes<br> 缺失，浏览器会将 sizes<br> 默认为 100vw<br>，表示它预计图片将以全窗口宽度显示。<br>sizes<br> 会为浏览器额外提供一条信息，以确保它根据图片的最终显示宽度下载正确的图片文件。说明一下，它实际上<em>不会</em>调整图片的大小 - 这是 CSS 的工作。<br>在本示例中，如果浏览器的窗口宽度等于或小于 400 像素，浏览器知道图片将为全窗口宽度；如果窗口宽度大于 400 像素，则为一半窗口宽度。浏览器知道它具有两个图片选项 - 一个具有 400 像素的自然宽度，另一个具有 800 像素。<br>准备好帮助浏览器了？单击“继续”亲自试试吧！</p>\n<p>这里是我已完成的图片标记：<br><img class=\"w\" src=\"images/Coffee_1280w.jpg\" srcset=\"images/Coffee_1280w.jpg 1280w, images/Coffee_640w.jpg 640w\" sizes=\"(max-width: 960px) 50vw, 100vw\" alt=\"Coffee by Amy March from Turkey\"></p>\n<p>我没有在 sizes<br> 中包括第二个媒体查询，因为如果没有媒体查询，列出的宽度会被视为默认值。<br>另外请注意，sizes<br> 中的媒体查询与 CSS 匹配。说明一下，更改 sizes<br> 不会影响 CSS。它只会提醒浏览器注意最终需要在该处显示的图片。</p>\n<hr>\n<p>网络广播从最初在系统上设置 Grunt 开始， 一直讲到设置完整的项目流程。<br>此处链接为 <a href=\"https://discussions.udacity.com/t/grunt-and-setting-up-a-grunt-workflow-intermediate/21984\" target=\"_blank\" rel=\"external\">关于此网络广播的详细论坛文章 </a>。 文章中包含对 Grunt 安装配置和设置任务 的相关向导。<br>此处链接为 <a href=\"https://github.com/JohnUdacity/grunt-workflow-guide\" target=\"_blank\" rel=\"external\">在网络广播中使用的 GitHub 存储库 </a>。<br>有关网络广播的详细整理，请访问 <a href=\"https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp\" target=\"_blank\" rel=\"external\">此处</a>.</p>\n<hr>\n<p>设置 Gulp 工作流演示（概要）<br>由学习教练 John 主讲，有关如何设置 Gulp 的现场演示。<br>Gulp 可代替前端开发人员完成所有必需的繁琐、 重复性任务：压缩、串联、lint 操作、 图像优化、Git 提交等多种任务， 都可以交由 Gulp 来实现。从而让你能够集中精力处理重要任务，也就是 编写代码。<br>网络广播从最初在系统上设置 Gulp 开始， 一直讲到设置完整的项目流程。<br>要查看网络广播的详细概要（包括代码 段），请参阅此 <a href=\"https://discussions.udacity.com/t/gulp-and-setting-up-a-gulp-workflow-intermediate/24359\" target=\"_blank\" rel=\"external\">论坛 文章</a>.<br>如果想要跟随演示学习，请在 <a href=\"https://github.com/JohnUdacity/gulp-start\" target=\"_blank\" rel=\"external\">此存储库</a> 中下载起始代码。<br>有关网络广播的详细整理，请访问 <a href=\"https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp\" target=\"_blank\" rel=\"external\">此处</a>.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-678f35e772132a47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">font-family: Helvetica, Arial, sans-serif;</div><div class=\"line\">font-size: 60px;</div><div class=\"line\">text-transform: uppercase;  // 大写</div><div class=\"line\">text-decoration: underline;  // 下划线</div><div class=\"line\">color: #8001ff;</div></pre></td></tr></table></figure>\n<hr>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-ae3d31ed146b7798.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">border</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">dashed</span> <span class=\"selector-tag\">salmon</span>;</div><div class=\"line\"><span class=\"selector-tag\">border-radius</span>: 5<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</div><div class=\"line\"><span class=\"selector-tag\">box-shadow</span>: 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> 20<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#ccc</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">display: block;  // 块元素</div><div class=\"line\">display: inline;  // 内联元素</div></pre></td></tr></table></figure>\n<p><code>inline</code>, <code>weight</code> 和 <code>height</code> 无效。</p>\n<hr>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">box-sizing: border-box;  // width 计算 padding 和 border</div><div class=\"line\">-webkit-box-sizing: border-box;</div><div class=\"line\">-moz-box-sizing: border-box;</div><div class=\"line\">-ms-box-sizing: border-box;</div></pre></td></tr></table></figure>\n<hr>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-470c41345887b0a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">text-align: justify;  // 左右对齐</div></pre></td></tr></table></figure>\n<hr>\n<p>垂直对齐</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">top</span>;</div><div class=\"line\"><span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">bottom</span>;</div><div class=\"line\"><span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">middle</span>;</div></pre></td></tr></table></figure>\n<hr>\n<p>行高</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">line-height</span><span class=\"selector-pseudo\">:1.2</span>;</div><div class=\"line\"><span class=\"selector-tag\">line-height</span><span class=\"selector-pseudo\">:19.2px</span>;</div><div class=\"line\"><span class=\"selector-tag\">line-height</span><span class=\"selector-pseudo\">:120</span>%;</div></pre></td></tr></table></figure>\n<hr>\n<p>居中对齐</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">margin</span>: 0 <span class=\"selector-tag\">auto</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">outline: 1px solid red  !important;  // border 外框，outline是不占空间的，既不会增加额外的width或者height，边框占用宽度</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">media</span> only screen and (max-width: <span class=\"number\">300px</span>) &#123;</div><div class=\"line\">  <span class=\"comment\">/* style */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">img</span>,</div><div class=\"line\"><span class=\"selector-tag\">embed</span>,</div><div class=\"line\"><span class=\"selector-tag\">object</span>,</div><div class=\"line\"><span class=\"selector-tag\">video</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<p>手指大约 40px，小屏按钮最小设置为 48 * 48px，两个之间最好空 40px</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">min-height</span>: 48<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">min-width</span>: 48<span class=\"selector-tag\">px</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">padding</span>: 1<span class=\"selector-class\">.5em</span> <span class=\"selector-tag\">inhenit</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span>;</div><div class=\"line\"><span class=\"selector-tag\">flex-wrap</span>: <span class=\"selector-tag\">wrap</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">calc(<span class=\"number\">100</span>px - <span class=\"number\">10</span>%)</div><div class=\"line\"> *有效，* calc(<span class=\"number\">100</span>px<span class=\"number\">-10</span>%)</div><div class=\"line\"> *则无效</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">`!<span class=\"selector-tag\">important</span>` 优先级最高</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.testClass</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">color</span>:blue <span class=\"meta\">!important</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<p>你是否注意到，将 height<br> 和 width<br> 设置为 100vmax<br> 或 100vmin<br> 会如何改变图片的宽高比？它会将你的图片压缩成正方形，所以，如果你想要保留其他宽高比，请小心！</p>\n<hr>\n<h1 id=\"压缩、优化和自动化\"><a href=\"#压缩、优化和自动化\" class=\"headerlink\" title=\"压缩、优化和自动化\"></a>压缩、优化和自动化</h1><p>开始编写你自己的自动化 ImageMagick 或 ImageOptim 工具前，你需要安装 <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"external\">Node.js</a> 和 <a href=\"https://docs.npmjs.com/getting-started/installing-node\" target=\"_blank\" rel=\"external\">npm</a>。 ImageMagick:<br><a href=\"http://www.imagemagick.org/\" target=\"_blank\" rel=\"external\">ImageMagick</a><br><a href=\"http://cactuslab.com/imagemagick/\" target=\"_blank\" rel=\"external\">Mac 上的一个简单的 ImageMagick 安装包</a><br><a href=\"http://www.graphicsmagick.org/\" target=\"_blank\" rel=\"external\">GraphicsMagick</a> (ImageMagick 的一个分叉)</p>\n<p>Grunt:<br><a href=\"http://gruntjs.com/getting-started\" target=\"_blank\" rel=\"external\">Grunt 简介</a><br><a href=\"http://24ways.org/2013/grunt-is-not-weird-and-hard/\" target=\"_blank\" rel=\"external\">Grunt 使用入门</a><br><a href=\"http://addyosmani.com/blog/generate-multi-resolution-images-for-srcset-with-grunt/\" target=\"_blank\" rel=\"external\">用 Grunt 生成不同分辨率的图片</a><br><a href=\"https://github.com/andismith/grunt-responsive-images\" target=\"_blank\" rel=\"external\">用于生成多张图片的 grunt-responsive-images 插件</a><br><a href=\"https://www.npmjs.com/package/grunt-respimg\" target=\"_blank\" rel=\"external\">用于响应式图片工作流的 grunt-respimg 插件</a></p>\n<p>脚本编制示例中使用的文件：<br><a href=\"http://udacity.github.io/responsive-images/convert.sh\" target=\"_blank\" rel=\"external\">convert.sh</a> (含说明)<br><a href=\"http://udacity.github.io/responsive-images/Gruntfile.js\" target=\"_blank\" rel=\"external\">Gruntfile.js</a> (对于 Windows，移除第 7 行：engine: ‘im’,<br>)<br><a href=\"https://github.com/BBC-News/Imager.js/\" target=\"_blank\" rel=\"external\">Imager.js</a>：为 BBC 新闻开发的响应式图片加载。</p>\n<p>图片处理工具：<br><a href=\"http://imageoptim.com/\" target=\"_blank\" rel=\"external\">ImageOptim</a> (Mac)<br><a href=\"http://trimage.org/\" target=\"_blank\" rel=\"external\">Trimage</a> - 和 ImageOptim 类似 (Windows, Mac, Linux)<br><a href=\"https://github.com/pornel/ImageAlpha\" target=\"_blank\" rel=\"external\">ImageAlpha</a></p>\n<h1 id=\"图片压缩\"><a href=\"#图片压缩\" class=\"headerlink\" title=\"图片压缩\"></a>图片压缩</h1><p><a href=\"https://developers.google.com/speed/pagespeed/insights/?url=simpl.info%2Fcssfilters\" target=\"_blank\" rel=\"external\">PageSpeed Insights 示例</a><br><a href=\"https://www.npmjs.com/package/grunt-pagespeed\" target=\"_blank\" rel=\"external\">Grunt PageSpeed 插件</a><br><a href=\"https://github.com/addyosmani/psi/\" target=\"_blank\" rel=\"external\">PageSpeed Node module</a><br><a href=\"http://www.thegeekstuff.com/2012/04/curl-examples/\" target=\"_blank\" rel=\"external\">cURL 示例</a><br><a href=\"https://github.com/addyosmani/psi/\" target=\"_blank\" rel=\"external\">PageSpeed Insights Node module</a></p>\n<p>练习: 项目第 1 部分<br>请从 <a href=\"http://udacity.github.io/responsive-images/downloads/RI-Project-Part-1-Start.zip\" target=\"_blank\" rel=\"external\">此处</a>下载项目文档。<em>\n</em>请确保通过 localhost 运行项目。<em> 对于 Mac/Linux，请 cd<br> 至工作目录并设置一个<a href=\"http://www.linuxjournal.com/content/tech-tip-really-simple-http-server-python\" target=\"_blank\" rel=\"external\">简单的 HTTP 服务器</a>。对于 Windows，请参见下文。<br>Make sure you are running the <a href=\"https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi\" target=\"_blank\" rel=\"external\">Udacity Feedback Chrome Extension</a> to get feedback. 确保你已经安装了<a href=\"https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi\" target=\"_blank\" rel=\"external\">优达学城前端反馈插件</a>。\n</em>打开控制台，看看图片的总体积！*<br><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure\" target=\"_blank\" rel=\"external\">了解更多有关 figure 标签的信息！</a></p>\n<h1 id=\"性能\"><a href=\"#性能\" class=\"headerlink\" title=\"性能\"></a>性能</h1><p>延迟会什么会成为新的瓶颈？<a href=\"http://chimera.labs.oreilly.com/books/1230000000545/ch10.html#MORE_BANDWIDTH_DOESNT_MATTER_MUCH\" target=\"_blank\" rel=\"external\">看看 Ilya </a>在<em>高性能浏览器网络</em>中有什么要说的。请注意缩短延迟如何不断改善页面加载时间，而使带宽的图表趋于平缓：<br><img src=\"http://upload-images.jianshu.io/upload_images/1768578-826454c6055633cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"graph about latency\"><br>要减少图片下载次数，你也可以使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/CSS_Image_Sprites\" target=\"_blank\" rel=\"external\">CSS 图片精灵</a>或<a href=\"http://blog.brianjohnsondesign.com/responsive-background-image-sprites-css-tutorial/%EF%BC%89%E3%80%82[%E7%B2%BE%E7%81%B5%E9%A1%B5](https://www.google.co.uk/images/nav_logo195.png\" target=\"_blank\" rel=\"external\">响应式精灵</a> 图片组合了大量图片，这些图片可以通过将精灵页设置为元素背景，然后通过 CSS 调整背景位置来单独显示。此技巧对图标和其他重复图形尤为有用。<br><strong>无论你采用何种技巧来避免延迟，都请注意 HTTP/2 带来的更改。</strong><br>简单地说，HTTP/2 表示请求多个文件的成本更小：准备停止使用脚本编写、连接和其他 HTTP/1 技巧！<br>如需了解更多信息，请查看<a href=\"https://mattwilcox.net/web-development/http2-for-front-end-web-developers\" target=\"_blank\" rel=\"external\">面向前端 Web 开发的 HTTP2</a>。</p>\n<hr>\n<p>CSS 背景图片<br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/divWithBackgroundImage\" target=\"_blank\" rel=\"external\">Div with background image</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/backgroundSizeCover\" target=\"_blank\" rel=\"external\">CSS background-size: cover</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImage\" target=\"_blank\" rel=\"external\">Body with background image</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImageAndGradient\" target=\"_blank\" rel=\"external\">Body with background image and gradient</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/bodyWithElaboratePatternPureCSS\" target=\"_blank\" rel=\"external\">Body with elaborate background using only CSS</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/backgroundImageConditional\" target=\"_blank\" rel=\"external\">Using CSS background images for conditional image display</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/backgroundImageAlternative\" target=\"_blank\" rel=\"external\">Using CSS background images for alternative images</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/imageSet\" target=\"_blank\" rel=\"external\">image-set()</a></p>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">background-color</span>: <span class=\"selector-tag\">cover</span>;</div><div class=\"line\"><span class=\"selector-tag\">background-color</span>: <span class=\"selector-tag\">contain</span>;</div></pre></td></tr></table></figure>\n<hr>\n<p>符号字符<br>例子：<a href=\"http://udacity.github.io/responsive-images/examples/2-08/unicodeStar\" target=\"_blank\" rel=\"external\">Unicode 代替图片</a><br><a href=\"http://unicode-table.com/en/sets/\" target=\"_blank\" rel=\"external\">Unicode 字符集</a><br><a href=\"http://en.wikipedia.org/wiki/List_of_Unicode_characters\" target=\"_blank\" rel=\"external\">Unicode 符号集合</a></p>\n<hr>\n<p>图标字体<br><a href=\"http://zocial.smcllns.com/\" target=\"_blank\" rel=\"external\">Zocial</a><br><a href=\"http://fortawesome.github.io/Font-Awesome/\" target=\"_blank\" rel=\"external\">Font Awesome</a><br><a href=\"http://weloveiconfonts.com/\" target=\"_blank\" rel=\"external\">We Love Icon Fonts!</a><br><a href=\"https://css-tricks.com/examples/IconFont/\" target=\"_blank\" rel=\"external\">Icon fonts on CSS-Tricks</a></p>\n<hr>\n<p>SVG 和数据 URI 行内图片<br>例子：<br><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgDataUri\" target=\"_blank\" rel=\"external\">SVG Data URI in HTML</a></p>\n<p><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgDataUriCss\" target=\"_blank\" rel=\"external\">SVG Data URI in CSS</a></p>\n<p><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgTextOnAPath\" target=\"_blank\" rel=\"external\">SVG text on a path</a></p>\n<p><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgUnoptimisedAndOptimised\" target=\"_blank\" rel=\"external\">SVG optimized and unoptimized</a></p>\n<hr>\n<p>示例：<br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues\" target=\"_blank\" rel=\"external\">srcset with w values</a><br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw\" target=\"_blank\" rel=\"external\">srcset with w values, 50vw</a></p>\n<hr>\n<p>Sizes 属性<br>示例：<br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues\" target=\"_blank\" rel=\"external\">srcset with w values</a><br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw\" target=\"_blank\" rel=\"external\">srcset with w values, 50vw</a></p>\n<hr>\n<p>srcset 和 sizes 练习<br>我想总结你刚刚学习的关于图片属性 srcset<br> 和 sizes<br> 的内容。 你可以借此机会先详细了解每个属性的语法，然后在下面两道测试题中，在真正的页面上尝试使用它们。<br>在本测试题中，你将尝试使用 srcset<br>。在下一道测试题中，你将添加 sizes<br>，以便为浏览器提供更多信息。<br>语法<br>srcset<br> 有两种自定义方式，一种使用 x<br> 来区分设备像素比 (DPR)，另一种使用 w<br> 来描述图像的宽度。<br>对设备像素比的反应<br><img src=\"image_2x.jpg\" srcset=\"image_2x.jpg 2x, image_1x.jpg 1x\" alt=\"a cool image\"></p>\n<p>将 srcset<br> 设置为与逗号分隔的一连串 filename multiplier<br> 对相等，其中每个 multiplier<br> 必须是后跟 x<br> 的整数。<br>例如，1x<br> 表示 1 倍显示屏，2x<br> 表示像素密度为两倍的显示屏，如 Apple 的 Retina 显示屏。<br>浏览器会下载与其 DPR 对应的最佳图片。<br>另请注意，有一个作为备用的 src<br> 属性。<br>对图片宽度的反应<br><img src=\"image_200.jpg\" srcset=\"image_200.jpg 200w, image_100.jpg 100w\" alt=\"a cool image\"></p>\n<p>将 srcset<br> 设置为与逗号分隔的一连串 filename widthDescriptor<br> 对相等，其中每个 widthDescriptor<br> 都以像素为测量单位， 并且必须是后跟 w<br> 的整数。在这里，widthDescriptor<br> 指定每个图片文件的自然宽度，使浏览器能够根据窗口大小和 DPR 选择要请求的最适当的图片。 （如果没有 widthDescriptor<br>，浏览器需要下载图片才能知道其宽度！）<br>另请注意，有一个作为备用的 src<br> 属性。<br>准备好尝试一下？单击“继续”试试吧！</p>\n<p>Here are my finished image tags:<br>DPR (海牙)<br><img class=\"dpi\" src=\"images/Den_Haag_2x.jpg\" srcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x\" alt=\"Den Haag Skyline\"></p>\n<p>请注意我如何获得 src<br> 作为备份。srcset<br> 中的来源顺序无关紧要。此外，如果你遗漏了乘数，它将默认为 1x<br>，也就是说，<br>srcset=”images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x”</p>\n<p>等同于：<br>srcset=”images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg”</p>\n<p>图片宽度（澳大利亚）<br><img class=\"w\" src=\"images/Australia_1280w.jpg\" srcset=\"images/Australia_1280w.jpg 1280w, images/Australia_640w.jpg 640w\" alt=\"Australia from Space\"></p>\n<p>同样地，会出现 src<br> 备份，你可以切换 srcset<br> 中的图片顺序。</p>\n<p>包含大小的图片宽度<br>如果图片不以全窗口宽度显示会怎样？那么，除了 srcset<br> 外，你还需要其他元素（假设图片将为全窗口宽度）<br>向包含媒体查询的图片添加一个 sizes<br> 属性和一个 vw<br> 值。srcset<br> 和 sizes<br> 合起来可让浏览器知道图片的自然宽度以及图片相对于窗口宽度的显示宽度。 知道图片的显示宽度和可用图片文件的宽度后，浏览器将获得下载具有满足其需求的适当分辨率且尽可能小的图片所需的信息。 而且，浏览器在页面加载初期，解析 HTML 时即可做出此选择。<br>srcset 与 sizes 配合使用的语法<br>这里是一个示例：<br><img src=\"images/great_pic_800.jpg\" sizes=\"(max-width: 400px) 100vw, (min-width: 401px) 50vw\" srcset=\"images/great_pic_400.jpg 400w, images/great_pic_800.jpg 800w\" alt=\"great picture\"></p>\n<p>sizes<br> 由以逗号分隔的 mediaQuery width<br> 对组成。sizes<br> 会在加载流程初期告诉浏览器，该图片会在点击 mediaQuery<br> 时以某个 width<br> 显示。<br>实际上，如果 sizes<br> 缺失，浏览器会将 sizes<br> 默认为 100vw<br>，表示它预计图片将以全窗口宽度显示。<br>sizes<br> 会为浏览器额外提供一条信息，以确保它根据图片的最终显示宽度下载正确的图片文件。说明一下，它实际上<em>不会</em>调整图片的大小 - 这是 CSS 的工作。<br>在本示例中，如果浏览器的窗口宽度等于或小于 400 像素，浏览器知道图片将为全窗口宽度；如果窗口宽度大于 400 像素，则为一半窗口宽度。浏览器知道它具有两个图片选项 - 一个具有 400 像素的自然宽度，另一个具有 800 像素。<br>准备好帮助浏览器了？单击“继续”亲自试试吧！</p>\n<p>这里是我已完成的图片标记：<br><img class=\"w\" src=\"images/Coffee_1280w.jpg\" srcset=\"images/Coffee_1280w.jpg 1280w, images/Coffee_640w.jpg 640w\" sizes=\"(max-width: 960px) 50vw, 100vw\" alt=\"Coffee by Amy March from Turkey\"></p>\n<p>我没有在 sizes<br> 中包括第二个媒体查询，因为如果没有媒体查询，列出的宽度会被视为默认值。<br>另外请注意，sizes<br> 中的媒体查询与 CSS 匹配。说明一下，更改 sizes<br> 不会影响 CSS。它只会提醒浏览器注意最终需要在该处显示的图片。</p>\n<hr>\n<p>网络广播从最初在系统上设置 Grunt 开始， 一直讲到设置完整的项目流程。<br>此处链接为 <a href=\"https://discussions.udacity.com/t/grunt-and-setting-up-a-grunt-workflow-intermediate/21984\" target=\"_blank\" rel=\"external\">关于此网络广播的详细论坛文章 </a>。 文章中包含对 Grunt 安装配置和设置任务 的相关向导。<br>此处链接为 <a href=\"https://github.com/JohnUdacity/grunt-workflow-guide\" target=\"_blank\" rel=\"external\">在网络广播中使用的 GitHub 存储库 </a>。<br>有关网络广播的详细整理，请访问 <a href=\"https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp\" target=\"_blank\" rel=\"external\">此处</a>.</p>\n<hr>\n<p>设置 Gulp 工作流演示（概要）<br>由学习教练 John 主讲，有关如何设置 Gulp 的现场演示。<br>Gulp 可代替前端开发人员完成所有必需的繁琐、 重复性任务：压缩、串联、lint 操作、 图像优化、Git 提交等多种任务， 都可以交由 Gulp 来实现。从而让你能够集中精力处理重要任务，也就是 编写代码。<br>网络广播从最初在系统上设置 Gulp 开始， 一直讲到设置完整的项目流程。<br>要查看网络广播的详细概要（包括代码 段），请参阅此 <a href=\"https://discussions.udacity.com/t/gulp-and-setting-up-a-gulp-workflow-intermediate/24359\" target=\"_blank\" rel=\"external\">论坛 文章</a>.<br>如果想要跟随演示学习，请在 <a href=\"https://github.com/JohnUdacity/gulp-start\" target=\"_blank\" rel=\"external\">此存储库</a> 中下载起始代码。<br>有关网络广播的详细整理，请访问 <a href=\"https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp\" target=\"_blank\" rel=\"external\">此处</a>.</p>\n"},{"title":"翻译: Spring AOP 讨论最多的问题 #1 - aspects 没有生效","date":"2017-06-12T09:23:37.000Z","description":"这篇文章继续讨论从 Spring AOP top problem #2 - java.lang.ClassCastException: $Proxy7 开始的话题。在这个话题里，我想要说明一些现在接触 spring AOP 的 spring 用户(特别是新用户)讨论最多(从我的观点看来)的问题。","_content":"\n> 原文：http://denis-zhdanov.blogspot.com/2009/07/spring-aop-top-problem-1-aspects-are.html\n\n这篇文章继续讨论从 [Spring AOP top problem #2 - java.lang.ClassCastException: $Proxy7](http://denis-zhdanov.blogspot.com/2009/05/spring-aop-top-problem-2.html) 开始的话题。在这个话题里，我想要说明一些现在接触 spring AOP 的 spring 用户(特别是新用户)讨论最多(从我的观点看来)的问题。\n\n现在我想要聊一聊自身调用('self-calls')，如果你有这方面的经验可以跳过接下来的内容.\n\n请注意 spring 文档也描述了一个同样的问题 - [8.6.1 Understanding AOP proxies](http://docs.spring.io/spring/docs/3.0.x/spring-framework-reference/html/ch08s06.html#aop-understanding-aop-proxies)。然而，我发现通过 spring 论坛里的很多文章显示人们并没有发现这个问题。所以，我想要把这个问题解释的更明白些 / 用我的语言。\n\n<!--more-->\n\n让我们创建一个说明这个问题的例子。假设我们是 spring 的新用户而且用 spring aop 写了一个非常酷的代码，并且运行的很好。\n\n`AopService.java`\n```java\npackage com.spring.aop;\n\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class AopService {\n\n    public void service() {\n        System.out.println(\"AopService.service()\");\n    }\n\n    public void anotherService() {\n        System.out.println(\"AopService.anotherService()\");\n    }\n}\n```\n\n`TestAspect.java`\n```java\npackage com.spring.aop;\n\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Around;\nimport org.springframework.stereotype.Component;\n\n@Component\n@Aspect\npublic class TestAspect {\n\n    @Around(\"execution(* com.spring.aop.AopService.*(..))\")\n    public Object advice(ProceedingJoinPoint joinPoint) throws Throwable {\n        System.out.println(\"TestAspect.advice()\");\n        return joinPoint.proceed();\n    }\n}\n\n```\n\n`spring-config.xml`\n```xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"\n  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\n  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\n  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\">\n\n    <context:component-scan base-package=\"com.spring.aop\"/>\n    <aop:aspectj-autoproxy/>\n\n</beans>\n```\n\n`SpringStart.java`\n```java\npackage com.spring;\n\nimport com.spring.aop.AopService;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\npublic class SpringStart {\n    public static void main(String[] args) throws Exception {\n        ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring-config.xml\");\n        AopService service = context.getBeansOfType(AopService.class).values().iterator().next();\n        service.service();\n        service.anotherService();\n    }\n}\n```\n\n我们创建了一个包含简单的只会打印一些输出来说明被调用过的方法和简单的 aspect 注入这个类中所有 public 方法并且打印信息来说明注入被执行了的 service 类。如果我们执行 `SpringStart` 类，我们会看到期望的输出 - 方法都被注入成功。\n\n```\nTestAspect.advice()\nAopService.service()\nTestAspect.advice()\nAopService.anotherService()\n```\n\n让我们稍微拓展下 service 类。\n\n`AopService.java`\n```java\npackage com.spring.aop;\n\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class AopService {\n\n    public void service() {\n        System.out.println(\"AopService.service()\");\n    }\n\n    public void anotherService() {\n        System.out.println(\"AopService.anotherService(). Calling AopService.service()...\");\n        service();\n    }\n}\n```\n\n我们期望 aspect 执行 3次 - `service()` 和 `anotherService()` 在 `SpringStart.main()` 中调用，`service()` 在 `AopService.anotherService()` 中调用。然而，如果我们运行这个例子我们发现 aspect 只执行了两次（从 `SpringStart.main()` 开始执行）i.e. `AopService.anotherService()` 中调用的 `service()` 没有被注入。\n\n```\nTestAspect.advice()\nAopService.service()\nTestAspect.advice()\nAopService.anotherService(). Calling AopService.service()...\nAopService.service()\n```\n\n通常，problem root is tightly connected to [The Law of Leaky Abstractions](https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/)。I.e. 我们对 aspect 的表现有特别的期待但是没有发现 spring aop 的规则不允许这些期待实现。\n\n通常的解释是 spring AOP 是基于代理(proxy-based)的，i.e. 他假定当 bean 作为依赖被使用，他的方法应该用 aspect 代理包裹(be advised by particular aspect(s) the container injects aspect-aware bean proxy)而不是 bean 本身。例如，返回的代理使用和和下面代码近似的方法:\n\n```java\npublic class AopServiceProxy {\n\n    // Assuming that corresponding setters are introduced and the fields are defined.\n    private TestAspect aspect;\n    private AopService rawService;\n\n    public void service() {\n        aspect.advice();\n        rawService.service();\n    }\n\n    public void anotherService() {\n        aspect.advice();\n        anotherService();\n    }\n}\n```\n\nI.e. 这个代理被 aspect 包裹而且在调用 `raw` bean 前他调用了必要的 aspect 方法。然而，上一个 `AopService` 实现在 `anotherService()` 内调用了 `service()` - 这样代理无法注入因为这样调用违反了 'this' 原则, i.e. 这个方法是 'rawBean' 自己调用的。这就是为什么 aspect 在这种情况下不起作用的答案。\n\n现在，当我们明白了问题原因我们来聊聊怎么解决它。至少有三种方法：\n\n- **aspect 建议重写代码来避免 self-calls** - 非常不方便，特别是如果你在维护遗留代码;\n\n- **用 aspect-aware proxy 替换 self-calls, i.e. 在 anotherService() 里用 ((AopService) AopContext.currentProxy()).service() 代替 service()** - 也不方便，需要额外设置代理而且和 spring 的代码重复;\n\n- **用 aspectj weaving** - 这是我喜欢的方案。他会直接注入 aspect 到对应的 class 里， i.e. 不需要所有的方法都必须被代理;\n\n我会写一篇文章来说明在 spring 中怎么使用各种类型的 aspectj weaving，这样会更加清楚的说明这个问题。\n","source":"_posts/aspects_are_not_applied.md","raw":"---\ntitle: '翻译: Spring AOP 讨论最多的问题 #1 - aspects 没有生效'\ndate: 2017-06-12 17:23:37\ntags:\n  - aspect\n  - spring\n  - java\ndescription: '这篇文章继续讨论从 Spring AOP top problem #2 - java.lang.ClassCastException: $Proxy7 开始的话题。在这个话题里，我想要说明一些现在接触 spring AOP 的 spring 用户(特别是新用户)讨论最多(从我的观点看来)的问题。'\n---\n\n> 原文：http://denis-zhdanov.blogspot.com/2009/07/spring-aop-top-problem-1-aspects-are.html\n\n这篇文章继续讨论从 [Spring AOP top problem #2 - java.lang.ClassCastException: $Proxy7](http://denis-zhdanov.blogspot.com/2009/05/spring-aop-top-problem-2.html) 开始的话题。在这个话题里，我想要说明一些现在接触 spring AOP 的 spring 用户(特别是新用户)讨论最多(从我的观点看来)的问题。\n\n现在我想要聊一聊自身调用('self-calls')，如果你有这方面的经验可以跳过接下来的内容.\n\n请注意 spring 文档也描述了一个同样的问题 - [8.6.1 Understanding AOP proxies](http://docs.spring.io/spring/docs/3.0.x/spring-framework-reference/html/ch08s06.html#aop-understanding-aop-proxies)。然而，我发现通过 spring 论坛里的很多文章显示人们并没有发现这个问题。所以，我想要把这个问题解释的更明白些 / 用我的语言。\n\n<!--more-->\n\n让我们创建一个说明这个问题的例子。假设我们是 spring 的新用户而且用 spring aop 写了一个非常酷的代码，并且运行的很好。\n\n`AopService.java`\n```java\npackage com.spring.aop;\n\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class AopService {\n\n    public void service() {\n        System.out.println(\"AopService.service()\");\n    }\n\n    public void anotherService() {\n        System.out.println(\"AopService.anotherService()\");\n    }\n}\n```\n\n`TestAspect.java`\n```java\npackage com.spring.aop;\n\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Around;\nimport org.springframework.stereotype.Component;\n\n@Component\n@Aspect\npublic class TestAspect {\n\n    @Around(\"execution(* com.spring.aop.AopService.*(..))\")\n    public Object advice(ProceedingJoinPoint joinPoint) throws Throwable {\n        System.out.println(\"TestAspect.advice()\");\n        return joinPoint.proceed();\n    }\n}\n\n```\n\n`spring-config.xml`\n```xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"\n  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\n  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\n  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\">\n\n    <context:component-scan base-package=\"com.spring.aop\"/>\n    <aop:aspectj-autoproxy/>\n\n</beans>\n```\n\n`SpringStart.java`\n```java\npackage com.spring;\n\nimport com.spring.aop.AopService;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\npublic class SpringStart {\n    public static void main(String[] args) throws Exception {\n        ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring-config.xml\");\n        AopService service = context.getBeansOfType(AopService.class).values().iterator().next();\n        service.service();\n        service.anotherService();\n    }\n}\n```\n\n我们创建了一个包含简单的只会打印一些输出来说明被调用过的方法和简单的 aspect 注入这个类中所有 public 方法并且打印信息来说明注入被执行了的 service 类。如果我们执行 `SpringStart` 类，我们会看到期望的输出 - 方法都被注入成功。\n\n```\nTestAspect.advice()\nAopService.service()\nTestAspect.advice()\nAopService.anotherService()\n```\n\n让我们稍微拓展下 service 类。\n\n`AopService.java`\n```java\npackage com.spring.aop;\n\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class AopService {\n\n    public void service() {\n        System.out.println(\"AopService.service()\");\n    }\n\n    public void anotherService() {\n        System.out.println(\"AopService.anotherService(). Calling AopService.service()...\");\n        service();\n    }\n}\n```\n\n我们期望 aspect 执行 3次 - `service()` 和 `anotherService()` 在 `SpringStart.main()` 中调用，`service()` 在 `AopService.anotherService()` 中调用。然而，如果我们运行这个例子我们发现 aspect 只执行了两次（从 `SpringStart.main()` 开始执行）i.e. `AopService.anotherService()` 中调用的 `service()` 没有被注入。\n\n```\nTestAspect.advice()\nAopService.service()\nTestAspect.advice()\nAopService.anotherService(). Calling AopService.service()...\nAopService.service()\n```\n\n通常，problem root is tightly connected to [The Law of Leaky Abstractions](https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/)。I.e. 我们对 aspect 的表现有特别的期待但是没有发现 spring aop 的规则不允许这些期待实现。\n\n通常的解释是 spring AOP 是基于代理(proxy-based)的，i.e. 他假定当 bean 作为依赖被使用，他的方法应该用 aspect 代理包裹(be advised by particular aspect(s) the container injects aspect-aware bean proxy)而不是 bean 本身。例如，返回的代理使用和和下面代码近似的方法:\n\n```java\npublic class AopServiceProxy {\n\n    // Assuming that corresponding setters are introduced and the fields are defined.\n    private TestAspect aspect;\n    private AopService rawService;\n\n    public void service() {\n        aspect.advice();\n        rawService.service();\n    }\n\n    public void anotherService() {\n        aspect.advice();\n        anotherService();\n    }\n}\n```\n\nI.e. 这个代理被 aspect 包裹而且在调用 `raw` bean 前他调用了必要的 aspect 方法。然而，上一个 `AopService` 实现在 `anotherService()` 内调用了 `service()` - 这样代理无法注入因为这样调用违反了 'this' 原则, i.e. 这个方法是 'rawBean' 自己调用的。这就是为什么 aspect 在这种情况下不起作用的答案。\n\n现在，当我们明白了问题原因我们来聊聊怎么解决它。至少有三种方法：\n\n- **aspect 建议重写代码来避免 self-calls** - 非常不方便，特别是如果你在维护遗留代码;\n\n- **用 aspect-aware proxy 替换 self-calls, i.e. 在 anotherService() 里用 ((AopService) AopContext.currentProxy()).service() 代替 service()** - 也不方便，需要额外设置代理而且和 spring 的代码重复;\n\n- **用 aspectj weaving** - 这是我喜欢的方案。他会直接注入 aspect 到对应的 class 里， i.e. 不需要所有的方法都必须被代理;\n\n我会写一篇文章来说明在 spring 中怎么使用各种类型的 aspectj weaving，这样会更加清楚的说明这个问题。\n","slug":"aspects_are_not_applied","published":1,"updated":"2018-04-13T07:00:02.716Z","_id":"cj44zckse0002536unrmvk46d","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>原文：<a href=\"http://denis-zhdanov.blogspot.com/2009/07/spring-aop-top-problem-1-aspects-are.html\" target=\"_blank\" rel=\"noopener\">http://denis-zhdanov.blogspot.com/2009/07/spring-aop-top-problem-1-aspects-are.html</a></p>\n</blockquote>\n<p>这篇文章继续讨论从 <a href=\"http://denis-zhdanov.blogspot.com/2009/05/spring-aop-top-problem-2.html\" target=\"_blank\" rel=\"noopener\">Spring AOP top problem #2 - java.lang.ClassCastException: $Proxy7</a> 开始的话题。在这个话题里，我想要说明一些现在接触 spring AOP 的 spring 用户(特别是新用户)讨论最多(从我的观点看来)的问题。</p>\n<p>现在我想要聊一聊自身调用(‘self-calls’)，如果你有这方面的经验可以跳过接下来的内容.</p>\n<p>请注意 spring 文档也描述了一个同样的问题 - <a href=\"http://docs.spring.io/spring/docs/3.0.x/spring-framework-reference/html/ch08s06.html#aop-understanding-aop-proxies\" target=\"_blank\" rel=\"noopener\">8.6.1 Understanding AOP proxies</a>。然而，我发现通过 spring 论坛里的很多文章显示人们并没有发现这个问题。所以，我想要把这个问题解释的更明白些 / 用我的语言。</p>\n<a id=\"more\"></a>\n<p>让我们创建一个说明这个问题的例子。假设我们是 spring 的新用户而且用 spring aop 写了一个非常酷的代码，并且运行的很好。</p>\n<p><code>AopService.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.spring.aop;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AopService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"AopService.service()\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anotherService</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"AopService.anotherService()\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>TestAspect.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.spring.aop;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Around;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestAspect</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Around</span>(<span class=\"string\">\"execution(* com.spring.aop.AopService.*(..))\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">advice</span><span class=\"params\">(ProceedingJoinPoint joinPoint)</span> <span class=\"keyword\">throws</span> Throwable </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"TestAspect.advice()\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> joinPoint.proceed();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>spring-config.xml</code><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.spring.aop\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">aop:aspectj-autoproxy</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><code>SpringStart.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.spring;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.spring.aop.AopService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringStart</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        ClassPathXmlApplicationContext context = <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"spring-config.xml\"</span>);</span><br><span class=\"line\">        AopService service = context.getBeansOfType(AopService.class).values().iterator().next();</span><br><span class=\"line\">        service.service();</span><br><span class=\"line\">        service.anotherService();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>我们创建了一个包含简单的只会打印一些输出来说明被调用过的方法和简单的 aspect 注入这个类中所有 public 方法并且打印信息来说明注入被执行了的 service 类。如果我们执行 <code>SpringStart</code> 类，我们会看到期望的输出 - 方法都被注入成功。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</span><br><span class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()</span><br><span class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</span><br><span class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.anotherService</span>()</span><br></pre></td></tr></table></figure>\n<p>让我们稍微拓展下 service 类。</p>\n<p><code>AopService.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.spring.aop;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AopService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"AopService.service()\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anotherService</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"AopService.anotherService(). Calling AopService.service()...\"</span>);</span><br><span class=\"line\">        service();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>我们期望 aspect 执行 3次 - <code>service()</code> 和 <code>anotherService()</code> 在 <code>SpringStart.main()</code> 中调用，<code>service()</code> 在 <code>AopService.anotherService()</code> 中调用。然而，如果我们运行这个例子我们发现 aspect 只执行了两次（从 <code>SpringStart.main()</code> 开始执行）i.e. <code>AopService.anotherService()</code> 中调用的 <code>service()</code> 没有被注入。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</span><br><span class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()</span><br><span class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</span><br><span class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.anotherService</span>(). <span class=\"selector-tag\">Calling</span> <span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()...</span><br><span class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()</span><br></pre></td></tr></table></figure>\n<p>通常，problem root is tightly connected to <a href=\"https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/\" target=\"_blank\" rel=\"noopener\">The Law of Leaky Abstractions</a>。I.e. 我们对 aspect 的表现有特别的期待但是没有发现 spring aop 的规则不允许这些期待实现。</p>\n<p>通常的解释是 spring AOP 是基于代理(proxy-based)的，i.e. 他假定当 bean 作为依赖被使用，他的方法应该用 aspect 代理包裹(be advised by particular aspect(s) the container injects aspect-aware bean proxy)而不是 bean 本身。例如，返回的代理使用和和下面代码近似的方法:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AopServiceProxy</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Assuming that corresponding setters are introduced and the fields are defined.</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> TestAspect aspect;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> AopService rawService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        aspect.advice();</span><br><span class=\"line\">        rawService.service();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anotherService</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        aspect.advice();</span><br><span class=\"line\">        anotherService();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>I.e. 这个代理被 aspect 包裹而且在调用 <code>raw</code> bean 前他调用了必要的 aspect 方法。然而，上一个 <code>AopService</code> 实现在 <code>anotherService()</code> 内调用了 <code>service()</code> - 这样代理无法注入因为这样调用违反了 ‘this’ 原则, i.e. 这个方法是 ‘rawBean’ 自己调用的。这就是为什么 aspect 在这种情况下不起作用的答案。</p>\n<p>现在，当我们明白了问题原因我们来聊聊怎么解决它。至少有三种方法：</p>\n<ul>\n<li><p><strong>aspect 建议重写代码来避免 self-calls</strong> - 非常不方便，特别是如果你在维护遗留代码;</p>\n</li>\n<li><p><strong>用 aspect-aware proxy 替换 self-calls, i.e. 在 anotherService() 里用 ((AopService) AopContext.currentProxy()).service() 代替 service()</strong> - 也不方便，需要额外设置代理而且和 spring 的代码重复;</p>\n</li>\n<li><p><strong>用 aspectj weaving</strong> - 这是我喜欢的方案。他会直接注入 aspect 到对应的 class 里， i.e. 不需要所有的方法都必须被代理;</p>\n</li>\n</ul>\n<p>我会写一篇文章来说明在 spring 中怎么使用各种类型的 aspectj weaving，这样会更加清楚的说明这个问题。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>原文：<a href=\"http://denis-zhdanov.blogspot.com/2009/07/spring-aop-top-problem-1-aspects-are.html\" target=\"_blank\" rel=\"noopener\">http://denis-zhdanov.blogspot.com/2009/07/spring-aop-top-problem-1-aspects-are.html</a></p>\n</blockquote>\n<p>这篇文章继续讨论从 <a href=\"http://denis-zhdanov.blogspot.com/2009/05/spring-aop-top-problem-2.html\" target=\"_blank\" rel=\"noopener\">Spring AOP top problem #2 - java.lang.ClassCastException: $Proxy7</a> 开始的话题。在这个话题里，我想要说明一些现在接触 spring AOP 的 spring 用户(特别是新用户)讨论最多(从我的观点看来)的问题。</p>\n<p>现在我想要聊一聊自身调用(‘self-calls’)，如果你有这方面的经验可以跳过接下来的内容.</p>\n<p>请注意 spring 文档也描述了一个同样的问题 - <a href=\"http://docs.spring.io/spring/docs/3.0.x/spring-framework-reference/html/ch08s06.html#aop-understanding-aop-proxies\" target=\"_blank\" rel=\"noopener\">8.6.1 Understanding AOP proxies</a>。然而，我发现通过 spring 论坛里的很多文章显示人们并没有发现这个问题。所以，我想要把这个问题解释的更明白些 / 用我的语言。</p>","more":"<p>让我们创建一个说明这个问题的例子。假设我们是 spring 的新用户而且用 spring aop 写了一个非常酷的代码，并且运行的很好。</p>\n<p><code>AopService.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.spring.aop;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AopService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"AopService.service()\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anotherService</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"AopService.anotherService()\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>TestAspect.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.spring.aop;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Around;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestAspect</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Around</span>(<span class=\"string\">\"execution(* com.spring.aop.AopService.*(..))\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">advice</span><span class=\"params\">(ProceedingJoinPoint joinPoint)</span> <span class=\"keyword\">throws</span> Throwable </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"TestAspect.advice()\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> joinPoint.proceed();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>spring-config.xml</code><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.spring.aop\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">aop:aspectj-autoproxy</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><code>SpringStart.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.spring;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.spring.aop.AopService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringStart</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        ClassPathXmlApplicationContext context = <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"spring-config.xml\"</span>);</span><br><span class=\"line\">        AopService service = context.getBeansOfType(AopService.class).values().iterator().next();</span><br><span class=\"line\">        service.service();</span><br><span class=\"line\">        service.anotherService();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>我们创建了一个包含简单的只会打印一些输出来说明被调用过的方法和简单的 aspect 注入这个类中所有 public 方法并且打印信息来说明注入被执行了的 service 类。如果我们执行 <code>SpringStart</code> 类，我们会看到期望的输出 - 方法都被注入成功。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</span><br><span class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()</span><br><span class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</span><br><span class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.anotherService</span>()</span><br></pre></td></tr></table></figure>\n<p>让我们稍微拓展下 service 类。</p>\n<p><code>AopService.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.spring.aop;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AopService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"AopService.service()\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anotherService</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"AopService.anotherService(). Calling AopService.service()...\"</span>);</span><br><span class=\"line\">        service();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>我们期望 aspect 执行 3次 - <code>service()</code> 和 <code>anotherService()</code> 在 <code>SpringStart.main()</code> 中调用，<code>service()</code> 在 <code>AopService.anotherService()</code> 中调用。然而，如果我们运行这个例子我们发现 aspect 只执行了两次（从 <code>SpringStart.main()</code> 开始执行）i.e. <code>AopService.anotherService()</code> 中调用的 <code>service()</code> 没有被注入。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</span><br><span class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()</span><br><span class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</span><br><span class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.anotherService</span>(). <span class=\"selector-tag\">Calling</span> <span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()...</span><br><span class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()</span><br></pre></td></tr></table></figure>\n<p>通常，problem root is tightly connected to <a href=\"https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/\" target=\"_blank\" rel=\"noopener\">The Law of Leaky Abstractions</a>。I.e. 我们对 aspect 的表现有特别的期待但是没有发现 spring aop 的规则不允许这些期待实现。</p>\n<p>通常的解释是 spring AOP 是基于代理(proxy-based)的，i.e. 他假定当 bean 作为依赖被使用，他的方法应该用 aspect 代理包裹(be advised by particular aspect(s) the container injects aspect-aware bean proxy)而不是 bean 本身。例如，返回的代理使用和和下面代码近似的方法:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AopServiceProxy</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Assuming that corresponding setters are introduced and the fields are defined.</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> TestAspect aspect;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> AopService rawService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        aspect.advice();</span><br><span class=\"line\">        rawService.service();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anotherService</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        aspect.advice();</span><br><span class=\"line\">        anotherService();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>I.e. 这个代理被 aspect 包裹而且在调用 <code>raw</code> bean 前他调用了必要的 aspect 方法。然而，上一个 <code>AopService</code> 实现在 <code>anotherService()</code> 内调用了 <code>service()</code> - 这样代理无法注入因为这样调用违反了 ‘this’ 原则, i.e. 这个方法是 ‘rawBean’ 自己调用的。这就是为什么 aspect 在这种情况下不起作用的答案。</p>\n<p>现在，当我们明白了问题原因我们来聊聊怎么解决它。至少有三种方法：</p>\n<ul>\n<li><p><strong>aspect 建议重写代码来避免 self-calls</strong> - 非常不方便，特别是如果你在维护遗留代码;</p>\n</li>\n<li><p><strong>用 aspect-aware proxy 替换 self-calls, i.e. 在 anotherService() 里用 ((AopService) AopContext.currentProxy()).service() 代替 service()</strong> - 也不方便，需要额外设置代理而且和 spring 的代码重复;</p>\n</li>\n<li><p><strong>用 aspectj weaving</strong> - 这是我喜欢的方案。他会直接注入 aspect 到对应的 class 里， i.e. 不需要所有的方法都必须被代理;</p>\n</li>\n</ul>\n<p>我会写一篇文章来说明在 spring 中怎么使用各种类型的 aspectj weaving，这样会更加清楚的说明这个问题。</p>"},{"title":"搭建一个基于 github-pages 和 jekyll 的免费博客","date":"2016-12-16T14:43:37.000Z","_content":"搭建一个基于 github-pages 和 jekyll 的免费博客\n\n<!-- more -->\n\n> 环境 macOS 10.12.2\n\n# 申请 github-pages\n\n---\n\n> 源地址 https://pages.github.com\n\n1. 创建一个仓库\n在 github 建立一个新仓库，命名为 `username.github.io`，用自己的用户名替换 `username`。**note: 如果用户名不匹配，将会不起作用。**\n\n2. clone 项目 `git clone https://github.com/username/username.github.io`\n\n3. 创建 hello world。`cd username.github.io && echo \"Hello World\" > index.html`\n\n4. push 项目。`git add --all && git commit -m \"Initial commit\" && git push -u origin master`\n\n5. 访问 `http://username.github.io`，就能看到刚刚创建的网站了。\n\n# 搭建 jekyll 环境\n\n---\n\n输入 `ruby --version` 验证是否安装了 `ruby`（Mac 已经预装了）\n\n![ruby_version.png](http://upload-images.jianshu.io/upload_images/1768578-d51c03c25e21438d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n安装 jekyll，输入 `gem install jekyll`\n\n删除之前的 `index.html`，运行 `jekyll new .`，jekyll 就会自动生成一些博客的基础文件和目录。输入 `jekyll serve`，就可以访问了。默认地址 `http://127.0.0.1:4000/`。\n\n还可以在 `_config.yml` 中进行一些个性化配置。\n\n文档地址 `http://jekyllcn.com/`\n\n# 安装模板\n\n---\n\n如果用 jekyll 从头开始搭建一个网站就太费时间了，可以先找一个模板，然后再在上面做修改。\n\n一些模板网站：\n\n - [http://jekyllthemes.org/](http://jekyllthemes.org/)\n - [https://mademistakes.com/work/jekyll-themes/](https://mademistakes.com/work/jekyll-themes/)\n\n我现在用的是第二个网站里的 `Minimal Mistakes Theme` 模板。\n\n效果图：\n\n![minimal_mistakes.png](http://upload-images.jianshu.io/upload_images/1768578-adf87c2843b91b17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 安装过程\n\n将项目 clone 下来，解压放入 github-pages 项目路径。\n\n用以下代码替换 Gemfile 里的内容：\n\n```\nsource \"https://rubygems.org\"\n\ngem \"github-pages\", group: :jekyll_plugins\n\ngroup :jekyll_plugins do\n  gem \"jekyll-paginate\"\n  gem \"jekyll-sitemap\"\n  gem \"jekyll-gist\"\n  gem \"jekyll-feed\"\n  gem \"jemoji\"\nend\n```\n\n然后运行 `bundle update` 安装依赖。\n\n移除以下不需要的文件或文件夹：\n\n- `.editorconfig`\n- `.gitattributes`\n- `.github`\n- `/docs`\n- `/test`\n- `CHANGELOG.md`\n- `minimal-mistakes-jekyll.gemspec`\n- `README.md`\n- `screenshot-layouts.png`\n- `screenshot.png`\n\n最后运行 `bundle exec jekyll serve` 就能在本地启动服务了。访问 `localhost:4000` 就能看到效果。\n\n## 碰到的坑，安装的时候会碰到以下错误\n\n```bash\nGem::Ext::BuildError: ERROR: Failed to build gem native extension.\n\ncurrent directory: /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri\n/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby -r ./siteconf20161208-38005-ye53g2.rb extconf.rb\nchecking if the C compiler accepts ... yes\nchecking if the C compiler accepts -Wno-error=unused-command-line-argument-hard-error-in-future... no\nBuilding nokogiri using packaged libraries.\nUsing mini_portile version 2.1.0\nchecking for iconv.h... yes\nchecking for gzdopen() in -lz... yes\nchecking for iconv... yes\n************************************************************************\nIMPORTANT NOTICE:\n\nBuilding Nokogiri with a packaged version of libxml2-2.9.4.\n\nTeam Nokogiri will keep on doing their best to provide security\nupdates in a timely manner, but if this is a concern for you and want\nto use the system library instead; abort this installation process and\nreinstall nokogiri as follows:\n\n    gem install nokogiri -- --use-system-libraries\n        [--with-xml2-config=/path/to/xml2-config]\n        [--with-xslt-config=/path/to/xslt-config]\n\nIf you are using Bundler, tell it to use the option:\n\n    bundle config build.nokogiri --use-system-libraries\n    bundle install\n\nNote, however, that nokogiri is not fully compatible with arbitrary\nversions of libxml2 provided by OS/package vendors.\n************************************************************************\nExtracting libxml2-2.9.4.tar.gz into tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4... OK\nRunning 'configure' for libxml2 2.9.4... OK\nRunning 'compile' for libxml2 2.9.4... ERROR, review\n'/Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri/tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4/compile.log' to see what happened. Last lines are:\n========================================================================\n  CCLD     libxml2.la\n  CC       testdso.lo\n  CCLD     testdso.la\n  CC       xmllint.o\n  CCLD     xmllint\nld: warning: ignoring file /usr/local/Cellar/xz/5.2.2/lib/liblzma.dylib, file was built for x86_64 which is not the architecture being linked (i386):\n/usr/local/Cellar/xz/5.2.2/lib/liblzma.dylib\nUndefined symbols for architecture i386:\n  \"_lzma_auto_decoder\", referenced from:\n      _xz_head in libxml2.a(xzlib.o)\n  \"_lzma_code\", referenced from:\n      _xz_decomp in libxml2.a(xzlib.o)\n  \"_lzma_end\", referenced from:\n      ___libxml2_xzclose in libxml2.a(xzlib.o)\n  \"_lzma_properties_decode\", referenced from:\n      _is_format_lzma in libxml2.a(xzlib.o)\nld: symbol(s) not found for architecture i386\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\nmake[2]: *** [xmllint] Error 1\nmake[1]: *** [all-recursive] Error 1\nmake: *** [all] Error 2\n========================================================================\n*** extconf.rb failed ***\nCould not create Makefile due to some reason, probably lack of necessary\nlibraries and/or headers.  Check the mkmf.log file for more details.  You may\nneed configuration options.\n\nProvided configuration options:\n\t--with-opt-dir\n\t--without-opt-dir\n\t--with-opt-include\n\t--without-opt-include=${opt-dir}/include\n\t--with-opt-lib\n\t--without-opt-lib=${opt-dir}/lib\n\t--with-make-prog\n\t--without-make-prog\n\t--srcdir=.\n\t--curdir\n\t--ruby=/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby\n\t--help\n\t--clean\n\t--use-system-libraries\n\t--enable-static\n\t--disable-static\n\t--with-zlib-dir\n\t--without-zlib-dir\n\t--with-zlib-include\n\t--without-zlib-include=${zlib-dir}/include\n\t--with-zlib-lib\n\t--without-zlib-lib=${zlib-dir}/lib\n\t--enable-cross-build\n\t--disable-cross-build\n/Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:366:in `block in execute': Failed to complete compile task (RuntimeError)\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:in `chdir'\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:in `execute'\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:111:in `compile'\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:150:in `cook'\n\tfrom extconf.rb:365:in `block (2 levels) in process_recipe'\n\tfrom extconf.rb:258:in `block in chdir_for_build'\n\tfrom extconf.rb:257:in `chdir'\n\tfrom extconf.rb:257:in `chdir_for_build'\n\tfrom extconf.rb:364:in `block in process_recipe'\n\tfrom extconf.rb:263:in `tap'\n\tfrom extconf.rb:263:in `process_recipe'\n\tfrom extconf.rb:556:in `<main>'\n\nTo see why this extension failed to compile, please check the mkmf.log which can be found here:\n\n  /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/mkmf.log\n\nextconf failed, exit code 1\n\nGem files will remain installed in /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1 for inspection.\nResults logged to /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/gem_make.out\n\nAn error occurred while installing nokogiri (1.6.8.1), and Bundler cannot continue.\nMake sure that `gem install nokogiri -v '1.6.8.1'` succeeds before bundling.\n```\n\n运行以下命令解决：\n\n```bash\nbrew uninstall --ignore-dependencies xz\n\nbundle update\n```\n","source":"_posts/github-pages-jekyll.md","raw":"---\ntitle: 搭建一个基于 github-pages 和 jekyll 的免费博客\ndate: 2016-12-16 22:43:37\ntags: github-pages\n---\n搭建一个基于 github-pages 和 jekyll 的免费博客\n\n<!-- more -->\n\n> 环境 macOS 10.12.2\n\n# 申请 github-pages\n\n---\n\n> 源地址 https://pages.github.com\n\n1. 创建一个仓库\n在 github 建立一个新仓库，命名为 `username.github.io`，用自己的用户名替换 `username`。**note: 如果用户名不匹配，将会不起作用。**\n\n2. clone 项目 `git clone https://github.com/username/username.github.io`\n\n3. 创建 hello world。`cd username.github.io && echo \"Hello World\" > index.html`\n\n4. push 项目。`git add --all && git commit -m \"Initial commit\" && git push -u origin master`\n\n5. 访问 `http://username.github.io`，就能看到刚刚创建的网站了。\n\n# 搭建 jekyll 环境\n\n---\n\n输入 `ruby --version` 验证是否安装了 `ruby`（Mac 已经预装了）\n\n![ruby_version.png](http://upload-images.jianshu.io/upload_images/1768578-d51c03c25e21438d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n安装 jekyll，输入 `gem install jekyll`\n\n删除之前的 `index.html`，运行 `jekyll new .`，jekyll 就会自动生成一些博客的基础文件和目录。输入 `jekyll serve`，就可以访问了。默认地址 `http://127.0.0.1:4000/`。\n\n还可以在 `_config.yml` 中进行一些个性化配置。\n\n文档地址 `http://jekyllcn.com/`\n\n# 安装模板\n\n---\n\n如果用 jekyll 从头开始搭建一个网站就太费时间了，可以先找一个模板，然后再在上面做修改。\n\n一些模板网站：\n\n - [http://jekyllthemes.org/](http://jekyllthemes.org/)\n - [https://mademistakes.com/work/jekyll-themes/](https://mademistakes.com/work/jekyll-themes/)\n\n我现在用的是第二个网站里的 `Minimal Mistakes Theme` 模板。\n\n效果图：\n\n![minimal_mistakes.png](http://upload-images.jianshu.io/upload_images/1768578-adf87c2843b91b17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 安装过程\n\n将项目 clone 下来，解压放入 github-pages 项目路径。\n\n用以下代码替换 Gemfile 里的内容：\n\n```\nsource \"https://rubygems.org\"\n\ngem \"github-pages\", group: :jekyll_plugins\n\ngroup :jekyll_plugins do\n  gem \"jekyll-paginate\"\n  gem \"jekyll-sitemap\"\n  gem \"jekyll-gist\"\n  gem \"jekyll-feed\"\n  gem \"jemoji\"\nend\n```\n\n然后运行 `bundle update` 安装依赖。\n\n移除以下不需要的文件或文件夹：\n\n- `.editorconfig`\n- `.gitattributes`\n- `.github`\n- `/docs`\n- `/test`\n- `CHANGELOG.md`\n- `minimal-mistakes-jekyll.gemspec`\n- `README.md`\n- `screenshot-layouts.png`\n- `screenshot.png`\n\n最后运行 `bundle exec jekyll serve` 就能在本地启动服务了。访问 `localhost:4000` 就能看到效果。\n\n## 碰到的坑，安装的时候会碰到以下错误\n\n```bash\nGem::Ext::BuildError: ERROR: Failed to build gem native extension.\n\ncurrent directory: /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri\n/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby -r ./siteconf20161208-38005-ye53g2.rb extconf.rb\nchecking if the C compiler accepts ... yes\nchecking if the C compiler accepts -Wno-error=unused-command-line-argument-hard-error-in-future... no\nBuilding nokogiri using packaged libraries.\nUsing mini_portile version 2.1.0\nchecking for iconv.h... yes\nchecking for gzdopen() in -lz... yes\nchecking for iconv... yes\n************************************************************************\nIMPORTANT NOTICE:\n\nBuilding Nokogiri with a packaged version of libxml2-2.9.4.\n\nTeam Nokogiri will keep on doing their best to provide security\nupdates in a timely manner, but if this is a concern for you and want\nto use the system library instead; abort this installation process and\nreinstall nokogiri as follows:\n\n    gem install nokogiri -- --use-system-libraries\n        [--with-xml2-config=/path/to/xml2-config]\n        [--with-xslt-config=/path/to/xslt-config]\n\nIf you are using Bundler, tell it to use the option:\n\n    bundle config build.nokogiri --use-system-libraries\n    bundle install\n\nNote, however, that nokogiri is not fully compatible with arbitrary\nversions of libxml2 provided by OS/package vendors.\n************************************************************************\nExtracting libxml2-2.9.4.tar.gz into tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4... OK\nRunning 'configure' for libxml2 2.9.4... OK\nRunning 'compile' for libxml2 2.9.4... ERROR, review\n'/Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri/tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4/compile.log' to see what happened. Last lines are:\n========================================================================\n  CCLD     libxml2.la\n  CC       testdso.lo\n  CCLD     testdso.la\n  CC       xmllint.o\n  CCLD     xmllint\nld: warning: ignoring file /usr/local/Cellar/xz/5.2.2/lib/liblzma.dylib, file was built for x86_64 which is not the architecture being linked (i386):\n/usr/local/Cellar/xz/5.2.2/lib/liblzma.dylib\nUndefined symbols for architecture i386:\n  \"_lzma_auto_decoder\", referenced from:\n      _xz_head in libxml2.a(xzlib.o)\n  \"_lzma_code\", referenced from:\n      _xz_decomp in libxml2.a(xzlib.o)\n  \"_lzma_end\", referenced from:\n      ___libxml2_xzclose in libxml2.a(xzlib.o)\n  \"_lzma_properties_decode\", referenced from:\n      _is_format_lzma in libxml2.a(xzlib.o)\nld: symbol(s) not found for architecture i386\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\nmake[2]: *** [xmllint] Error 1\nmake[1]: *** [all-recursive] Error 1\nmake: *** [all] Error 2\n========================================================================\n*** extconf.rb failed ***\nCould not create Makefile due to some reason, probably lack of necessary\nlibraries and/or headers.  Check the mkmf.log file for more details.  You may\nneed configuration options.\n\nProvided configuration options:\n\t--with-opt-dir\n\t--without-opt-dir\n\t--with-opt-include\n\t--without-opt-include=${opt-dir}/include\n\t--with-opt-lib\n\t--without-opt-lib=${opt-dir}/lib\n\t--with-make-prog\n\t--without-make-prog\n\t--srcdir=.\n\t--curdir\n\t--ruby=/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby\n\t--help\n\t--clean\n\t--use-system-libraries\n\t--enable-static\n\t--disable-static\n\t--with-zlib-dir\n\t--without-zlib-dir\n\t--with-zlib-include\n\t--without-zlib-include=${zlib-dir}/include\n\t--with-zlib-lib\n\t--without-zlib-lib=${zlib-dir}/lib\n\t--enable-cross-build\n\t--disable-cross-build\n/Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:366:in `block in execute': Failed to complete compile task (RuntimeError)\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:in `chdir'\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:in `execute'\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:111:in `compile'\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:150:in `cook'\n\tfrom extconf.rb:365:in `block (2 levels) in process_recipe'\n\tfrom extconf.rb:258:in `block in chdir_for_build'\n\tfrom extconf.rb:257:in `chdir'\n\tfrom extconf.rb:257:in `chdir_for_build'\n\tfrom extconf.rb:364:in `block in process_recipe'\n\tfrom extconf.rb:263:in `tap'\n\tfrom extconf.rb:263:in `process_recipe'\n\tfrom extconf.rb:556:in `<main>'\n\nTo see why this extension failed to compile, please check the mkmf.log which can be found here:\n\n  /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/mkmf.log\n\nextconf failed, exit code 1\n\nGem files will remain installed in /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1 for inspection.\nResults logged to /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/gem_make.out\n\nAn error occurred while installing nokogiri (1.6.8.1), and Bundler cannot continue.\nMake sure that `gem install nokogiri -v '1.6.8.1'` succeeds before bundling.\n```\n\n运行以下命令解决：\n\n```bash\nbrew uninstall --ignore-dependencies xz\n\nbundle update\n```\n","slug":"github-pages-jekyll","published":1,"updated":"2017-05-22T08:04:35.751Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj44zcksg0003536ugg1qa8pk","content":"<p>搭建一个基于 github-pages 和 jekyll 的免费博客</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>环境 macOS 10.12.2</p>\n</blockquote>\n<h1 id=\"申请-github-pages\"><a href=\"#申请-github-pages\" class=\"headerlink\" title=\"申请 github-pages\"></a>申请 github-pages</h1><hr>\n<blockquote>\n<p>源地址 <a href=\"https://pages.github.com\" target=\"_blank\" rel=\"external\">https://pages.github.com</a></p>\n</blockquote>\n<ol>\n<li><p>创建一个仓库<br>在 github 建立一个新仓库，命名为 <code>username.github.io</code>，用自己的用户名替换 <code>username</code>。<strong>note: 如果用户名不匹配，将会不起作用。</strong></p>\n</li>\n<li><p>clone 项目 <code>git clone https://github.com/username/username.github.io</code></p>\n</li>\n<li><p>创建 hello world。<code>cd username.github.io &amp;&amp; echo &quot;Hello World&quot; &gt; index.html</code></p>\n</li>\n<li><p>push 项目。<code>git add --all &amp;&amp; git commit -m &quot;Initial commit&quot; &amp;&amp; git push -u origin master</code></p>\n</li>\n<li><p>访问 <code>http://username.github.io</code>，就能看到刚刚创建的网站了。</p>\n</li>\n</ol>\n<h1 id=\"搭建-jekyll-环境\"><a href=\"#搭建-jekyll-环境\" class=\"headerlink\" title=\"搭建 jekyll 环境\"></a>搭建 jekyll 环境</h1><hr>\n<p>输入 <code>ruby --version</code> 验证是否安装了 <code>ruby</code>（Mac 已经预装了）</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-d51c03c25e21438d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ruby_version.png\"></p>\n<p>安装 jekyll，输入 <code>gem install jekyll</code></p>\n<p>删除之前的 <code>index.html</code>，运行 <code>jekyll new .</code>，jekyll 就会自动生成一些博客的基础文件和目录。输入 <code>jekyll serve</code>，就可以访问了。默认地址 <code>http://127.0.0.1:4000/</code>。</p>\n<p>还可以在 <code>_config.yml</code> 中进行一些个性化配置。</p>\n<p>文档地址 <code>http://jekyllcn.com/</code></p>\n<h1 id=\"安装模板\"><a href=\"#安装模板\" class=\"headerlink\" title=\"安装模板\"></a>安装模板</h1><hr>\n<p>如果用 jekyll 从头开始搭建一个网站就太费时间了，可以先找一个模板，然后再在上面做修改。</p>\n<p>一些模板网站：</p>\n<ul>\n<li><a href=\"http://jekyllthemes.org/\" target=\"_blank\" rel=\"external\">http://jekyllthemes.org/</a></li>\n<li><a href=\"https://mademistakes.com/work/jekyll-themes/\" target=\"_blank\" rel=\"external\">https://mademistakes.com/work/jekyll-themes/</a></li>\n</ul>\n<p>我现在用的是第二个网站里的 <code>Minimal Mistakes Theme</code> 模板。</p>\n<p>效果图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-adf87c2843b91b17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"minimal_mistakes.png\"></p>\n<h2 id=\"安装过程\"><a href=\"#安装过程\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h2><p>将项目 clone 下来，解压放入 github-pages 项目路径。</p>\n<p>用以下代码替换 Gemfile 里的内容：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">source <span class=\"string\">\"https://rubygems.org\"</span></div><div class=\"line\"></div><div class=\"line\">gem <span class=\"string\">\"github-pages\"</span>, group: :jekyll_plugins</div><div class=\"line\"><span class=\"built_in\"></span></div><div class=\"line\">group :jekyll_plugins <span class=\"keyword\">do</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-paginate\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-sitemap\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-gist\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-feed\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jemoji\"</span></div><div class=\"line\">end</div></pre></td></tr></table></figure>\n<p>然后运行 <code>bundle update</code> 安装依赖。</p>\n<p>移除以下不需要的文件或文件夹：</p>\n<ul>\n<li><code>.editorconfig</code></li>\n<li><code>.gitattributes</code></li>\n<li><code>.github</code></li>\n<li><code>/docs</code></li>\n<li><code>/test</code></li>\n<li><code>CHANGELOG.md</code></li>\n<li><code>minimal-mistakes-jekyll.gemspec</code></li>\n<li><code>README.md</code></li>\n<li><code>screenshot-layouts.png</code></li>\n<li><code>screenshot.png</code></li>\n</ul>\n<p>最后运行 <code>bundle exec jekyll serve</code> 就能在本地启动服务了。访问 <code>localhost:4000</code> 就能看到效果。</p>\n<h2 id=\"碰到的坑，安装的时候会碰到以下错误\"><a href=\"#碰到的坑，安装的时候会碰到以下错误\" class=\"headerlink\" title=\"碰到的坑，安装的时候会碰到以下错误\"></a>碰到的坑，安装的时候会碰到以下错误</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div></pre></td><td class=\"code\"><pre><div class=\"line\">Gem::Ext::BuildError: ERROR: Failed to build gem native extension.</div><div class=\"line\"></div><div class=\"line\">current directory: /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri</div><div class=\"line\">/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby -r ./siteconf20161208-38005-ye53g2.rb extconf.rb</div><div class=\"line\">checking <span class=\"keyword\">if</span> the C compiler accepts ... yes</div><div class=\"line\">checking <span class=\"keyword\">if</span> the C compiler accepts -Wno-error=unused-command-line-argument-hard-error-in-future... no</div><div class=\"line\">Building nokogiri using packaged libraries.</div><div class=\"line\">Using mini_portile version 2.1.0</div><div class=\"line\">checking <span class=\"keyword\">for</span> iconv.h... yes</div><div class=\"line\">checking <span class=\"keyword\">for</span> gzdopen() <span class=\"keyword\">in</span> -lz... yes</div><div class=\"line\">checking <span class=\"keyword\">for</span> iconv... yes</div><div class=\"line\">************************************************************************</div><div class=\"line\">IMPORTANT NOTICE:</div><div class=\"line\"></div><div class=\"line\">Building Nokogiri with a packaged version of libxml2-2.9.4.</div><div class=\"line\"></div><div class=\"line\">Team Nokogiri will keep on doing their best to provide security</div><div class=\"line\">updates <span class=\"keyword\">in</span> a timely manner, but <span class=\"keyword\">if</span> this is a concern <span class=\"keyword\">for</span> you and want</div><div class=\"line\">to use the system library instead; abort this installation process and</div><div class=\"line\">reinstall nokogiri as follows:</div><div class=\"line\"></div><div class=\"line\">    gem install nokogiri -- --use-system-libraries</div><div class=\"line\">        [--with-xml2-config=/path/to/xml2-config]</div><div class=\"line\">        [--with-xslt-config=/path/to/xslt-config]</div><div class=\"line\"></div><div class=\"line\">If you are using Bundler, tell it to use the option:</div><div class=\"line\"></div><div class=\"line\">    bundle config build.nokogiri --use-system-libraries</div><div class=\"line\">    bundle install</div><div class=\"line\"></div><div class=\"line\">Note, however, that nokogiri is not fully compatible with arbitrary</div><div class=\"line\">versions of libxml2 provided by OS/package vendors.</div><div class=\"line\">************************************************************************</div><div class=\"line\">Extracting libxml2-2.9.4.tar.gz into tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4... OK</div><div class=\"line\">Running <span class=\"string\">'configure'</span> <span class=\"keyword\">for</span> libxml2 2.9.4... OK</div><div class=\"line\">Running <span class=\"string\">'compile'</span> <span class=\"keyword\">for</span> libxml2 2.9.4... ERROR, review</div><div class=\"line\"><span class=\"string\">'/Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri/tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4/compile.log'</span> to see what happened. Last lines are:</div><div class=\"line\">========================================================================</div><div class=\"line\">  CCLD     libxml2.la</div><div class=\"line\">  CC       testdso.lo</div><div class=\"line\">  CCLD     testdso.la</div><div class=\"line\">  CC       xmllint.o</div><div class=\"line\">  CCLD     xmllint</div><div class=\"line\">ld: warning: ignoring file /usr/<span class=\"built_in\">local</span>/Cellar/xz/5.2.2/lib/liblzma.dylib, file was built <span class=\"keyword\">for</span> x86_64 <span class=\"built_in\">which</span> is not the architecture being linked (i386):</div><div class=\"line\">/usr/<span class=\"built_in\">local</span>/Cellar/xz/5.2.2/lib/liblzma.dylib</div><div class=\"line\">Undefined symbols <span class=\"keyword\">for</span> architecture i386:</div><div class=\"line\">  <span class=\"string\">\"_lzma_auto_decoder\"</span>, referenced from:</div><div class=\"line\">      _xz_head <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">  <span class=\"string\">\"_lzma_code\"</span>, referenced from:</div><div class=\"line\">      _xz_decomp <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">  <span class=\"string\">\"_lzma_end\"</span>, referenced from:</div><div class=\"line\">      ___libxml2_xzclose <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">  <span class=\"string\">\"_lzma_properties_decode\"</span>, referenced from:</div><div class=\"line\">      _is_format_lzma <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">ld: symbol(s) not found <span class=\"keyword\">for</span> architecture i386</div><div class=\"line\">clang: error: linker <span class=\"built_in\">command</span> failed with <span class=\"built_in\">exit</span> code 1 (use -v to see invocation)</div><div class=\"line\">make[2]: *** [xmllint] Error 1</div><div class=\"line\">make[1]: *** [all-recursive] Error 1</div><div class=\"line\">make: *** [all] Error 2</div><div class=\"line\">========================================================================</div><div class=\"line\">*** extconf.rb failed ***</div><div class=\"line\">Could not create Makefile due to some reason, probably lack of necessary</div><div class=\"line\">libraries and/or headers.  Check the mkmf.log file <span class=\"keyword\">for</span> more details.  You may</div><div class=\"line\">need configuration options.</div><div class=\"line\"></div><div class=\"line\">Provided configuration options:</div><div class=\"line\">\t--with-opt-dir</div><div class=\"line\">\t--without-opt-dir</div><div class=\"line\">\t--with-opt-include</div><div class=\"line\">\t--without-opt-include=<span class=\"variable\">$&#123;opt-dir&#125;</span>/include</div><div class=\"line\">\t--with-opt-lib</div><div class=\"line\">\t--without-opt-lib=<span class=\"variable\">$&#123;opt-dir&#125;</span>/lib</div><div class=\"line\">\t--with-make-prog</div><div class=\"line\">\t--without-make-prog</div><div class=\"line\">\t--srcdir=.</div><div class=\"line\">\t--curdir</div><div class=\"line\">\t--ruby=/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby</div><div class=\"line\">\t--<span class=\"built_in\">help</span></div><div class=\"line\">\t--clean</div><div class=\"line\">\t--use-system-libraries</div><div class=\"line\">\t--<span class=\"built_in\">enable</span>-static</div><div class=\"line\">\t--<span class=\"built_in\">disable</span>-static</div><div class=\"line\">\t--with-zlib-dir</div><div class=\"line\">\t--without-zlib-dir</div><div class=\"line\">\t--with-zlib-include</div><div class=\"line\">\t--without-zlib-include=<span class=\"variable\">$&#123;zlib-dir&#125;</span>/include</div><div class=\"line\">\t--with-zlib-lib</div><div class=\"line\">\t--without-zlib-lib=<span class=\"variable\">$&#123;zlib-dir&#125;</span>/lib</div><div class=\"line\">\t--<span class=\"built_in\">enable</span>-cross-build</div><div class=\"line\">\t--<span class=\"built_in\">disable</span>-cross-build</div><div class=\"line\">/Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:366:<span class=\"keyword\">in</span> `block <span class=\"keyword\">in</span> execute<span class=\"string\">': Failed to complete compile task (RuntimeError)</span></div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:in `chdir'</div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:<span class=\"keyword\">in</span> `execute<span class=\"string\">'</span></div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:111:in `compile'</div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:150:<span class=\"keyword\">in</span> `cook<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:365:in `block (2 levels) in process_recipe'</div><div class=\"line\">\tfrom extconf.rb:258:<span class=\"keyword\">in</span> `block <span class=\"keyword\">in</span> chdir_for_build<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:257:in `chdir'</div><div class=\"line\">\tfrom extconf.rb:257:<span class=\"keyword\">in</span> `chdir_for_build<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:364:in `block in process_recipe'</div><div class=\"line\">\tfrom extconf.rb:263:<span class=\"keyword\">in</span> `tap<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:263:in `process_recipe'</div><div class=\"line\">\tfrom extconf.rb:556:<span class=\"keyword\">in</span> `&lt;main&gt;<span class=\"string\">'</span></div><div class=\"line\"></div><div class=\"line\">To see why this extension failed to compile, please check the mkmf.log which can be found here:</div><div class=\"line\"></div><div class=\"line\">  /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/mkmf.log</div><div class=\"line\"></div><div class=\"line\">extconf failed, exit code 1</div><div class=\"line\"></div><div class=\"line\">Gem files will remain installed in /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1 for inspection.</div><div class=\"line\">Results logged to /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/gem_make.out</div><div class=\"line\"></div><div class=\"line\">An error occurred while installing nokogiri (1.6.8.1), and Bundler cannot continue.</div><div class=\"line\">Make sure that `gem install nokogiri -v '1.6.8.1<span class=\"string\">'` succeeds before bundling.</span></div></pre></td></tr></table></figure>\n<p>运行以下命令解决：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew uninstall --ignore-dependencies xz</div><div class=\"line\"></div><div class=\"line\">bundle update</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>搭建一个基于 github-pages 和 jekyll 的免费博客</p>","more":"<blockquote>\n<p>环境 macOS 10.12.2</p>\n</blockquote>\n<h1 id=\"申请-github-pages\"><a href=\"#申请-github-pages\" class=\"headerlink\" title=\"申请 github-pages\"></a>申请 github-pages</h1><hr>\n<blockquote>\n<p>源地址 <a href=\"https://pages.github.com\" target=\"_blank\" rel=\"external\">https://pages.github.com</a></p>\n</blockquote>\n<ol>\n<li><p>创建一个仓库<br>在 github 建立一个新仓库，命名为 <code>username.github.io</code>，用自己的用户名替换 <code>username</code>。<strong>note: 如果用户名不匹配，将会不起作用。</strong></p>\n</li>\n<li><p>clone 项目 <code>git clone https://github.com/username/username.github.io</code></p>\n</li>\n<li><p>创建 hello world。<code>cd username.github.io &amp;&amp; echo &quot;Hello World&quot; &gt; index.html</code></p>\n</li>\n<li><p>push 项目。<code>git add --all &amp;&amp; git commit -m &quot;Initial commit&quot; &amp;&amp; git push -u origin master</code></p>\n</li>\n<li><p>访问 <code>http://username.github.io</code>，就能看到刚刚创建的网站了。</p>\n</li>\n</ol>\n<h1 id=\"搭建-jekyll-环境\"><a href=\"#搭建-jekyll-环境\" class=\"headerlink\" title=\"搭建 jekyll 环境\"></a>搭建 jekyll 环境</h1><hr>\n<p>输入 <code>ruby --version</code> 验证是否安装了 <code>ruby</code>（Mac 已经预装了）</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-d51c03c25e21438d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ruby_version.png\"></p>\n<p>安装 jekyll，输入 <code>gem install jekyll</code></p>\n<p>删除之前的 <code>index.html</code>，运行 <code>jekyll new .</code>，jekyll 就会自动生成一些博客的基础文件和目录。输入 <code>jekyll serve</code>，就可以访问了。默认地址 <code>http://127.0.0.1:4000/</code>。</p>\n<p>还可以在 <code>_config.yml</code> 中进行一些个性化配置。</p>\n<p>文档地址 <code>http://jekyllcn.com/</code></p>\n<h1 id=\"安装模板\"><a href=\"#安装模板\" class=\"headerlink\" title=\"安装模板\"></a>安装模板</h1><hr>\n<p>如果用 jekyll 从头开始搭建一个网站就太费时间了，可以先找一个模板，然后再在上面做修改。</p>\n<p>一些模板网站：</p>\n<ul>\n<li><a href=\"http://jekyllthemes.org/\" target=\"_blank\" rel=\"external\">http://jekyllthemes.org/</a></li>\n<li><a href=\"https://mademistakes.com/work/jekyll-themes/\" target=\"_blank\" rel=\"external\">https://mademistakes.com/work/jekyll-themes/</a></li>\n</ul>\n<p>我现在用的是第二个网站里的 <code>Minimal Mistakes Theme</code> 模板。</p>\n<p>效果图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-adf87c2843b91b17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"minimal_mistakes.png\"></p>\n<h2 id=\"安装过程\"><a href=\"#安装过程\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h2><p>将项目 clone 下来，解压放入 github-pages 项目路径。</p>\n<p>用以下代码替换 Gemfile 里的内容：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">source <span class=\"string\">\"https://rubygems.org\"</span></div><div class=\"line\"></div><div class=\"line\">gem <span class=\"string\">\"github-pages\"</span>, group: :jekyll_plugins</div><div class=\"line\"><span class=\"built_in\"></span></div><div class=\"line\">group :jekyll_plugins <span class=\"keyword\">do</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-paginate\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-sitemap\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-gist\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-feed\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jemoji\"</span></div><div class=\"line\">end</div></pre></td></tr></table></figure>\n<p>然后运行 <code>bundle update</code> 安装依赖。</p>\n<p>移除以下不需要的文件或文件夹：</p>\n<ul>\n<li><code>.editorconfig</code></li>\n<li><code>.gitattributes</code></li>\n<li><code>.github</code></li>\n<li><code>/docs</code></li>\n<li><code>/test</code></li>\n<li><code>CHANGELOG.md</code></li>\n<li><code>minimal-mistakes-jekyll.gemspec</code></li>\n<li><code>README.md</code></li>\n<li><code>screenshot-layouts.png</code></li>\n<li><code>screenshot.png</code></li>\n</ul>\n<p>最后运行 <code>bundle exec jekyll serve</code> 就能在本地启动服务了。访问 <code>localhost:4000</code> 就能看到效果。</p>\n<h2 id=\"碰到的坑，安装的时候会碰到以下错误\"><a href=\"#碰到的坑，安装的时候会碰到以下错误\" class=\"headerlink\" title=\"碰到的坑，安装的时候会碰到以下错误\"></a>碰到的坑，安装的时候会碰到以下错误</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div></pre></td><td class=\"code\"><pre><div class=\"line\">Gem::Ext::BuildError: ERROR: Failed to build gem native extension.</div><div class=\"line\"></div><div class=\"line\">current directory: /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri</div><div class=\"line\">/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby -r ./siteconf20161208-38005-ye53g2.rb extconf.rb</div><div class=\"line\">checking <span class=\"keyword\">if</span> the C compiler accepts ... yes</div><div class=\"line\">checking <span class=\"keyword\">if</span> the C compiler accepts -Wno-error=unused-command-line-argument-hard-error-in-future... no</div><div class=\"line\">Building nokogiri using packaged libraries.</div><div class=\"line\">Using mini_portile version 2.1.0</div><div class=\"line\">checking <span class=\"keyword\">for</span> iconv.h... yes</div><div class=\"line\">checking <span class=\"keyword\">for</span> gzdopen() <span class=\"keyword\">in</span> -lz... yes</div><div class=\"line\">checking <span class=\"keyword\">for</span> iconv... yes</div><div class=\"line\">************************************************************************</div><div class=\"line\">IMPORTANT NOTICE:</div><div class=\"line\"></div><div class=\"line\">Building Nokogiri with a packaged version of libxml2-2.9.4.</div><div class=\"line\"></div><div class=\"line\">Team Nokogiri will keep on doing their best to provide security</div><div class=\"line\">updates <span class=\"keyword\">in</span> a timely manner, but <span class=\"keyword\">if</span> this is a concern <span class=\"keyword\">for</span> you and want</div><div class=\"line\">to use the system library instead; abort this installation process and</div><div class=\"line\">reinstall nokogiri as follows:</div><div class=\"line\"></div><div class=\"line\">    gem install nokogiri -- --use-system-libraries</div><div class=\"line\">        [--with-xml2-config=/path/to/xml2-config]</div><div class=\"line\">        [--with-xslt-config=/path/to/xslt-config]</div><div class=\"line\"></div><div class=\"line\">If you are using Bundler, tell it to use the option:</div><div class=\"line\"></div><div class=\"line\">    bundle config build.nokogiri --use-system-libraries</div><div class=\"line\">    bundle install</div><div class=\"line\"></div><div class=\"line\">Note, however, that nokogiri is not fully compatible with arbitrary</div><div class=\"line\">versions of libxml2 provided by OS/package vendors.</div><div class=\"line\">************************************************************************</div><div class=\"line\">Extracting libxml2-2.9.4.tar.gz into tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4... OK</div><div class=\"line\">Running <span class=\"string\">'configure'</span> <span class=\"keyword\">for</span> libxml2 2.9.4... OK</div><div class=\"line\">Running <span class=\"string\">'compile'</span> <span class=\"keyword\">for</span> libxml2 2.9.4... ERROR, review</div><div class=\"line\"><span class=\"string\">'/Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri/tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4/compile.log'</span> to see what happened. Last lines are:</div><div class=\"line\">========================================================================</div><div class=\"line\">  CCLD     libxml2.la</div><div class=\"line\">  CC       testdso.lo</div><div class=\"line\">  CCLD     testdso.la</div><div class=\"line\">  CC       xmllint.o</div><div class=\"line\">  CCLD     xmllint</div><div class=\"line\">ld: warning: ignoring file /usr/<span class=\"built_in\">local</span>/Cellar/xz/5.2.2/lib/liblzma.dylib, file was built <span class=\"keyword\">for</span> x86_64 <span class=\"built_in\">which</span> is not the architecture being linked (i386):</div><div class=\"line\">/usr/<span class=\"built_in\">local</span>/Cellar/xz/5.2.2/lib/liblzma.dylib</div><div class=\"line\">Undefined symbols <span class=\"keyword\">for</span> architecture i386:</div><div class=\"line\">  <span class=\"string\">\"_lzma_auto_decoder\"</span>, referenced from:</div><div class=\"line\">      _xz_head <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">  <span class=\"string\">\"_lzma_code\"</span>, referenced from:</div><div class=\"line\">      _xz_decomp <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">  <span class=\"string\">\"_lzma_end\"</span>, referenced from:</div><div class=\"line\">      ___libxml2_xzclose <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">  <span class=\"string\">\"_lzma_properties_decode\"</span>, referenced from:</div><div class=\"line\">      _is_format_lzma <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">ld: symbol(s) not found <span class=\"keyword\">for</span> architecture i386</div><div class=\"line\">clang: error: linker <span class=\"built_in\">command</span> failed with <span class=\"built_in\">exit</span> code 1 (use -v to see invocation)</div><div class=\"line\">make[2]: *** [xmllint] Error 1</div><div class=\"line\">make[1]: *** [all-recursive] Error 1</div><div class=\"line\">make: *** [all] Error 2</div><div class=\"line\">========================================================================</div><div class=\"line\">*** extconf.rb failed ***</div><div class=\"line\">Could not create Makefile due to some reason, probably lack of necessary</div><div class=\"line\">libraries and/or headers.  Check the mkmf.log file <span class=\"keyword\">for</span> more details.  You may</div><div class=\"line\">need configuration options.</div><div class=\"line\"></div><div class=\"line\">Provided configuration options:</div><div class=\"line\">\t--with-opt-dir</div><div class=\"line\">\t--without-opt-dir</div><div class=\"line\">\t--with-opt-include</div><div class=\"line\">\t--without-opt-include=<span class=\"variable\">$&#123;opt-dir&#125;</span>/include</div><div class=\"line\">\t--with-opt-lib</div><div class=\"line\">\t--without-opt-lib=<span class=\"variable\">$&#123;opt-dir&#125;</span>/lib</div><div class=\"line\">\t--with-make-prog</div><div class=\"line\">\t--without-make-prog</div><div class=\"line\">\t--srcdir=.</div><div class=\"line\">\t--curdir</div><div class=\"line\">\t--ruby=/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby</div><div class=\"line\">\t--<span class=\"built_in\">help</span></div><div class=\"line\">\t--clean</div><div class=\"line\">\t--use-system-libraries</div><div class=\"line\">\t--<span class=\"built_in\">enable</span>-static</div><div class=\"line\">\t--<span class=\"built_in\">disable</span>-static</div><div class=\"line\">\t--with-zlib-dir</div><div class=\"line\">\t--without-zlib-dir</div><div class=\"line\">\t--with-zlib-include</div><div class=\"line\">\t--without-zlib-include=<span class=\"variable\">$&#123;zlib-dir&#125;</span>/include</div><div class=\"line\">\t--with-zlib-lib</div><div class=\"line\">\t--without-zlib-lib=<span class=\"variable\">$&#123;zlib-dir&#125;</span>/lib</div><div class=\"line\">\t--<span class=\"built_in\">enable</span>-cross-build</div><div class=\"line\">\t--<span class=\"built_in\">disable</span>-cross-build</div><div class=\"line\">/Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:366:<span class=\"keyword\">in</span> `block <span class=\"keyword\">in</span> execute<span class=\"string\">': Failed to complete compile task (RuntimeError)</span></div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:in `chdir'</div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:<span class=\"keyword\">in</span> `execute<span class=\"string\">'</span></div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:111:in `compile'</div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:150:<span class=\"keyword\">in</span> `cook<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:365:in `block (2 levels) in process_recipe'</div><div class=\"line\">\tfrom extconf.rb:258:<span class=\"keyword\">in</span> `block <span class=\"keyword\">in</span> chdir_for_build<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:257:in `chdir'</div><div class=\"line\">\tfrom extconf.rb:257:<span class=\"keyword\">in</span> `chdir_for_build<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:364:in `block in process_recipe'</div><div class=\"line\">\tfrom extconf.rb:263:<span class=\"keyword\">in</span> `tap<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:263:in `process_recipe'</div><div class=\"line\">\tfrom extconf.rb:556:<span class=\"keyword\">in</span> `&lt;main&gt;<span class=\"string\">'</span></div><div class=\"line\"></div><div class=\"line\">To see why this extension failed to compile, please check the mkmf.log which can be found here:</div><div class=\"line\"></div><div class=\"line\">  /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/mkmf.log</div><div class=\"line\"></div><div class=\"line\">extconf failed, exit code 1</div><div class=\"line\"></div><div class=\"line\">Gem files will remain installed in /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1 for inspection.</div><div class=\"line\">Results logged to /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/gem_make.out</div><div class=\"line\"></div><div class=\"line\">An error occurred while installing nokogiri (1.6.8.1), and Bundler cannot continue.</div><div class=\"line\">Make sure that `gem install nokogiri -v '1.6.8.1<span class=\"string\">'` succeeds before bundling.</span></div></pre></td></tr></table></figure>\n<p>运行以下命令解决：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew uninstall --ignore-dependencies xz</div><div class=\"line\"></div><div class=\"line\">bundle update</div></pre></td></tr></table></figure>"},{"title":"RandomAccess 接口使用","date":"2016-03-19T07:41:42.000Z","_content":"\nList 实现所使用的标记接口，用来表明其支持快速（通常是固定时间）随机访问。此接口的主要目的是允许一般的算法更改其行为，从而在将其应用到随机或连续访问列表时能提供良好的性能。\n\n<!--more-->\n\n##用法\n\nRandom Access List(随机访问列表)如 `ArrayList` 要实现此接口，Sequence Access List(顺序访问列表)如 `LinkedList` 不要实现。\n因为两者的高效遍历算法不同\n\n通常做法，遍历前先判断：\n\n```java\nif (list instance of RandomAccess) {       \n  for(int m = 0; m < list.size(); m++){}   \n}else{       \n  Iterator iter = list.iterator();       \n  while(iter.hasNext()){}   \n}\n```\n\n随机访问列表使用循环遍历，顺序访问列表使用迭代器遍历。\n\n##JDK 定义\n\n`List` 实现使用的标记接口，用来表明支持快速(通常是固定时间)随机访问。这个接口的主要目的是允许一般的算法更改它们的行为，从而在随机或连续访问列表时提供更好的性能。\n\n将操作随机访问列表(比如 `ArrayList`)的最好的算法应用到顺序访问列表(比如 `LinkedList`)时，会产生二次项行为。鼓励一般的列表算法检查给定的列表是否 `instanceof` 这个接口，防止在顺序访问列表时使用较差的算法，如果需要保证可接受的性能时可以更改算法。\n\n公认的是随机和顺序访问的区别通常是模糊的。例如，当一些 `List` 实现很大时会提供渐进的线性访问时间，但实际是固定的访问时间。这样的 `List` 实现通常应该实现此接口。通常来说，一个 `List` 的实现类应该实现这个接口如果\n\n```java\nfor (int i=0, n=list.size(); i < n; i++)\n        list.get(i);\n```\n\n比\n\n```java\n for (Iterator i=list.iterator(); i.hasNext(); )\n          i.next();\n```\n\n快\n\n##验证事例\n\n```java\npackage com.ld.practice.arraylist;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.RandomAccess;\n\n/**\n * 测试Random Access List(随机访问列表)如 ArrayList 和 Sequence Access List(顺序访问列表)如 LinkedList </br>\n * 不同遍历算法的效率</br>\n * 结论：前者用循环，后者用迭代器\n */\n@SuppressWarnings({\"rawtypes\", \"unchecked\"})\npublic class ListLoopTest {\n\n\t/**\n\t * 初始化 list，添加n个元素\n\t *\n\t * @param list\n\t * @return\n\t */\n\tpublic static <T> List initList(List list, int n) {\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tlist.add(i);\n\t\treturn list;\n\t}\n\n\t/**\n\t * 遍历 list，判断是否实现 RandomAccess 接口来使用不同的遍历方法\n\t *\n\t * @param list\n\t */\n\tpublic static void accessList(List list) {\n\t\tlong startTime = System.currentTimeMillis();\n\n\t\tif (list instanceof RandomAccess) {\n\t\t\tSystem.out.println(\"实现了 RandomAccess 接口...\");\n\t\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\t\tlist.get(i);\n\t\t\t}\n\t\t} else {\n\t\t\tSystem.out.println(\"没实现 RandomAccess 接口...\");\n\t\t\tfor (Iterator iterator = list.iterator(); iterator.hasNext();) {\n\t\t\t\titerator.next();\n\t\t\t}\n\t\t}\n\n\t\tlong endTime = System.currentTimeMillis();\n\t\tSystem.out.println(\"遍历时间：\" + (endTime - startTime));\n\t}\n\n\t/**\n\t * loop 遍历 list\n\t */\n\tpublic static void accessListByLoop(List list) {\n\t\tlong startTime = System.currentTimeMillis();\n\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tlist.get(i);\n\t\t}\n\n\t\tlong endTime = System.currentTimeMillis();\n\t\tSystem.out.println(\"loop遍历时间：\" + (endTime - startTime));\n\t}\n\n\t/**\n\t * 迭代器遍历\n\t */\n\tpublic static void accessListByIterator(List list) {\n\t\tlong startTime = System.currentTimeMillis();\n\n\t\tfor (Iterator iterator = list.iterator(); iterator.hasNext();) {\n\t\t\titerator.next();\n\t\t}\n\n\t\tlong endTime = System.currentTimeMillis();\n\t\tSystem.out.println(\"Iterator遍历时间：\" + (endTime - startTime));\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tArrayList<Integer> aList = (ArrayList<Integer>) initList(new ArrayList<>(), 2000000);\n\t\tLinkedList<Integer> lList = (LinkedList<Integer>) initList(new LinkedList<>(), 50000);\n\n\t\taccessList(aList);\n\t\taccessList(lList);\n\n\t\tSystem.out.println(\"ArrayList\");\n\t\taccessListByLoop(aList);\n\t\taccessListByIterator(aList);\n\n\t\tSystem.out.println(\"LinkedList\");\n\t\taccessListByLoop(lList);\n\t\taccessListByIterator(lList);\n\t}\n\n  /*\n  实现了 RandomAccess 接口...\n  遍历时间：8\n  没实现 RandomAccess 接口...\n  遍历时间：2\n  ArrayList\n  loop遍历时间：5\n  Iterator遍历时间：8\n  LinkedList\n  loop遍历时间：1532\n  Iterator遍历时间：1\n  */\n}\n```\n","source":"_posts/random-access.md","raw":"---\ntitle: RandomAccess 接口使用\ndate: 2016-03-19 15:41:42\ntags: java\n---\n\nList 实现所使用的标记接口，用来表明其支持快速（通常是固定时间）随机访问。此接口的主要目的是允许一般的算法更改其行为，从而在将其应用到随机或连续访问列表时能提供良好的性能。\n\n<!--more-->\n\n##用法\n\nRandom Access List(随机访问列表)如 `ArrayList` 要实现此接口，Sequence Access List(顺序访问列表)如 `LinkedList` 不要实现。\n因为两者的高效遍历算法不同\n\n通常做法，遍历前先判断：\n\n```java\nif (list instance of RandomAccess) {       \n  for(int m = 0; m < list.size(); m++){}   \n}else{       \n  Iterator iter = list.iterator();       \n  while(iter.hasNext()){}   \n}\n```\n\n随机访问列表使用循环遍历，顺序访问列表使用迭代器遍历。\n\n##JDK 定义\n\n`List` 实现使用的标记接口，用来表明支持快速(通常是固定时间)随机访问。这个接口的主要目的是允许一般的算法更改它们的行为，从而在随机或连续访问列表时提供更好的性能。\n\n将操作随机访问列表(比如 `ArrayList`)的最好的算法应用到顺序访问列表(比如 `LinkedList`)时，会产生二次项行为。鼓励一般的列表算法检查给定的列表是否 `instanceof` 这个接口，防止在顺序访问列表时使用较差的算法，如果需要保证可接受的性能时可以更改算法。\n\n公认的是随机和顺序访问的区别通常是模糊的。例如，当一些 `List` 实现很大时会提供渐进的线性访问时间，但实际是固定的访问时间。这样的 `List` 实现通常应该实现此接口。通常来说，一个 `List` 的实现类应该实现这个接口如果\n\n```java\nfor (int i=0, n=list.size(); i < n; i++)\n        list.get(i);\n```\n\n比\n\n```java\n for (Iterator i=list.iterator(); i.hasNext(); )\n          i.next();\n```\n\n快\n\n##验证事例\n\n```java\npackage com.ld.practice.arraylist;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.RandomAccess;\n\n/**\n * 测试Random Access List(随机访问列表)如 ArrayList 和 Sequence Access List(顺序访问列表)如 LinkedList </br>\n * 不同遍历算法的效率</br>\n * 结论：前者用循环，后者用迭代器\n */\n@SuppressWarnings({\"rawtypes\", \"unchecked\"})\npublic class ListLoopTest {\n\n\t/**\n\t * 初始化 list，添加n个元素\n\t *\n\t * @param list\n\t * @return\n\t */\n\tpublic static <T> List initList(List list, int n) {\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tlist.add(i);\n\t\treturn list;\n\t}\n\n\t/**\n\t * 遍历 list，判断是否实现 RandomAccess 接口来使用不同的遍历方法\n\t *\n\t * @param list\n\t */\n\tpublic static void accessList(List list) {\n\t\tlong startTime = System.currentTimeMillis();\n\n\t\tif (list instanceof RandomAccess) {\n\t\t\tSystem.out.println(\"实现了 RandomAccess 接口...\");\n\t\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\t\tlist.get(i);\n\t\t\t}\n\t\t} else {\n\t\t\tSystem.out.println(\"没实现 RandomAccess 接口...\");\n\t\t\tfor (Iterator iterator = list.iterator(); iterator.hasNext();) {\n\t\t\t\titerator.next();\n\t\t\t}\n\t\t}\n\n\t\tlong endTime = System.currentTimeMillis();\n\t\tSystem.out.println(\"遍历时间：\" + (endTime - startTime));\n\t}\n\n\t/**\n\t * loop 遍历 list\n\t */\n\tpublic static void accessListByLoop(List list) {\n\t\tlong startTime = System.currentTimeMillis();\n\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tlist.get(i);\n\t\t}\n\n\t\tlong endTime = System.currentTimeMillis();\n\t\tSystem.out.println(\"loop遍历时间：\" + (endTime - startTime));\n\t}\n\n\t/**\n\t * 迭代器遍历\n\t */\n\tpublic static void accessListByIterator(List list) {\n\t\tlong startTime = System.currentTimeMillis();\n\n\t\tfor (Iterator iterator = list.iterator(); iterator.hasNext();) {\n\t\t\titerator.next();\n\t\t}\n\n\t\tlong endTime = System.currentTimeMillis();\n\t\tSystem.out.println(\"Iterator遍历时间：\" + (endTime - startTime));\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tArrayList<Integer> aList = (ArrayList<Integer>) initList(new ArrayList<>(), 2000000);\n\t\tLinkedList<Integer> lList = (LinkedList<Integer>) initList(new LinkedList<>(), 50000);\n\n\t\taccessList(aList);\n\t\taccessList(lList);\n\n\t\tSystem.out.println(\"ArrayList\");\n\t\taccessListByLoop(aList);\n\t\taccessListByIterator(aList);\n\n\t\tSystem.out.println(\"LinkedList\");\n\t\taccessListByLoop(lList);\n\t\taccessListByIterator(lList);\n\t}\n\n  /*\n  实现了 RandomAccess 接口...\n  遍历时间：8\n  没实现 RandomAccess 接口...\n  遍历时间：2\n  ArrayList\n  loop遍历时间：5\n  Iterator遍历时间：8\n  LinkedList\n  loop遍历时间：1532\n  Iterator遍历时间：1\n  */\n}\n```\n","slug":"random-access","published":1,"updated":"2017-05-22T08:04:24.331Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj44zcksl0005536ubui0mk0w","content":"<p>List 实现所使用的标记接口，用来表明其支持快速（通常是固定时间）随机访问。此接口的主要目的是允许一般的算法更改其行为，从而在将其应用到随机或连续访问列表时能提供良好的性能。</p>\n<a id=\"more\"></a>\n<p>##用法</p>\n<p>Random Access List(随机访问列表)如 <code>ArrayList</code> 要实现此接口，Sequence Access List(顺序访问列表)如 <code>LinkedList</code> 不要实现。<br>因为两者的高效遍历算法不同</p>\n<p>通常做法，遍历前先判断：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (list instance of RandomAccess) &#123;       </div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> m = <span class=\"number\">0</span>; m &lt; list.size(); m++)&#123;&#125;   </div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;       </div><div class=\"line\">  Iterator iter = list.iterator();       </div><div class=\"line\">  <span class=\"keyword\">while</span>(iter.hasNext())&#123;&#125;   </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>随机访问列表使用循环遍历，顺序访问列表使用迭代器遍历。</p>\n<p>##JDK 定义</p>\n<p><code>List</code> 实现使用的标记接口，用来表明支持快速(通常是固定时间)随机访问。这个接口的主要目的是允许一般的算法更改它们的行为，从而在随机或连续访问列表时提供更好的性能。</p>\n<p>将操作随机访问列表(比如 <code>ArrayList</code>)的最好的算法应用到顺序访问列表(比如 <code>LinkedList</code>)时，会产生二次项行为。鼓励一般的列表算法检查给定的列表是否 <code>instanceof</code> 这个接口，防止在顺序访问列表时使用较差的算法，如果需要保证可接受的性能时可以更改算法。</p>\n<p>公认的是随机和顺序访问的区别通常是模糊的。例如，当一些 <code>List</code> 实现很大时会提供渐进的线性访问时间，但实际是固定的访问时间。这样的 <code>List</code> 实现通常应该实现此接口。通常来说，一个 <code>List</code> 的实现类应该实现这个接口如果</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>, n=list.size(); i &lt; n; i++)</div><div class=\"line\">        list.get(i);</div></pre></td></tr></table></figure>\n<p>比</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (Iterator i=list.iterator(); i.hasNext(); )</div><div class=\"line\">         i.next();</div></pre></td></tr></table></figure>\n<p>快</p>\n<p>##验证事例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.ld.practice.arraylist;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.RandomAccess;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 测试Random Access List(随机访问列表)如 ArrayList 和 Sequence Access List(顺序访问列表)如 LinkedList &lt;/br&gt;</div><div class=\"line\"> * 不同遍历算法的效率&lt;/br&gt;</div><div class=\"line\"> * 结论：前者用循环，后者用迭代器</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@SuppressWarnings</span>(&#123;<span class=\"string\">\"rawtypes\"</span>, <span class=\"string\">\"unchecked\"</span>&#125;)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ListLoopTest</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 初始化 list，添加n个元素</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> list</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">List <span class=\"title\">initList</span><span class=\"params\">(List list, <span class=\"keyword\">int</span> n)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</div><div class=\"line\">\t\t\tlist.add(i);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> list;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 遍历 list，判断是否实现 RandomAccess 接口来使用不同的遍历方法</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> list</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">accessList</span><span class=\"params\">(List list)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> startTime = System.currentTimeMillis();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (list <span class=\"keyword\">instanceof</span> RandomAccess) &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"实现了 RandomAccess 接口...\"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</div><div class=\"line\">\t\t\t\tlist.get(i);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"没实现 RandomAccess 接口...\"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Iterator iterator = list.iterator(); iterator.hasNext();) &#123;</div><div class=\"line\">\t\t\t\titerator.next();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">long</span> endTime = System.currentTimeMillis();</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"遍历时间：\"</span> + (endTime - startTime));</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * loop 遍历 list</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">accessListByLoop</span><span class=\"params\">(List list)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> startTime = System.currentTimeMillis();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</div><div class=\"line\">\t\t\tlist.get(i);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">long</span> endTime = System.currentTimeMillis();</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"loop遍历时间：\"</span> + (endTime - startTime));</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 迭代器遍历</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">accessListByIterator</span><span class=\"params\">(List list)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> startTime = System.currentTimeMillis();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (Iterator iterator = list.iterator(); iterator.hasNext();) &#123;</div><div class=\"line\">\t\t\titerator.next();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">long</span> endTime = System.currentTimeMillis();</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Iterator遍历时间：\"</span> + (endTime - startTime));</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tArrayList&lt;Integer&gt; aList = (ArrayList&lt;Integer&gt;) initList(<span class=\"keyword\">new</span> ArrayList&lt;&gt;(), <span class=\"number\">2000000</span>);</div><div class=\"line\">\t\tLinkedList&lt;Integer&gt; lList = (LinkedList&lt;Integer&gt;) initList(<span class=\"keyword\">new</span> LinkedList&lt;&gt;(), <span class=\"number\">50000</span>);</div><div class=\"line\"></div><div class=\"line\">\t\taccessList(aList);</div><div class=\"line\">\t\taccessList(lList);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"ArrayList\"</span>);</div><div class=\"line\">\t\taccessListByLoop(aList);</div><div class=\"line\">\t\taccessListByIterator(aList);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"LinkedList\"</span>);</div><div class=\"line\">\t\taccessListByLoop(lList);</div><div class=\"line\">\t\taccessListByIterator(lList);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">/*</span></div><div class=\"line\">  实现了 RandomAccess 接口...</div><div class=\"line\">  遍历时间：8</div><div class=\"line\">  没实现 RandomAccess 接口...</div><div class=\"line\">  遍历时间：2</div><div class=\"line\">  ArrayList</div><div class=\"line\">  loop遍历时间：5</div><div class=\"line\">  Iterator遍历时间：8</div><div class=\"line\">  LinkedList</div><div class=\"line\">  loop遍历时间：1532</div><div class=\"line\">  Iterator遍历时间：1</div><div class=\"line\">  */</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>List 实现所使用的标记接口，用来表明其支持快速（通常是固定时间）随机访问。此接口的主要目的是允许一般的算法更改其行为，从而在将其应用到随机或连续访问列表时能提供良好的性能。</p>","more":"<p>##用法</p>\n<p>Random Access List(随机访问列表)如 <code>ArrayList</code> 要实现此接口，Sequence Access List(顺序访问列表)如 <code>LinkedList</code> 不要实现。<br>因为两者的高效遍历算法不同</p>\n<p>通常做法，遍历前先判断：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (list instance of RandomAccess) &#123;       </div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> m = <span class=\"number\">0</span>; m &lt; list.size(); m++)&#123;&#125;   </div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;       </div><div class=\"line\">  Iterator iter = list.iterator();       </div><div class=\"line\">  <span class=\"keyword\">while</span>(iter.hasNext())&#123;&#125;   </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>随机访问列表使用循环遍历，顺序访问列表使用迭代器遍历。</p>\n<p>##JDK 定义</p>\n<p><code>List</code> 实现使用的标记接口，用来表明支持快速(通常是固定时间)随机访问。这个接口的主要目的是允许一般的算法更改它们的行为，从而在随机或连续访问列表时提供更好的性能。</p>\n<p>将操作随机访问列表(比如 <code>ArrayList</code>)的最好的算法应用到顺序访问列表(比如 <code>LinkedList</code>)时，会产生二次项行为。鼓励一般的列表算法检查给定的列表是否 <code>instanceof</code> 这个接口，防止在顺序访问列表时使用较差的算法，如果需要保证可接受的性能时可以更改算法。</p>\n<p>公认的是随机和顺序访问的区别通常是模糊的。例如，当一些 <code>List</code> 实现很大时会提供渐进的线性访问时间，但实际是固定的访问时间。这样的 <code>List</code> 实现通常应该实现此接口。通常来说，一个 <code>List</code> 的实现类应该实现这个接口如果</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>, n=list.size(); i &lt; n; i++)</div><div class=\"line\">        list.get(i);</div></pre></td></tr></table></figure>\n<p>比</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (Iterator i=list.iterator(); i.hasNext(); )</div><div class=\"line\">         i.next();</div></pre></td></tr></table></figure>\n<p>快</p>\n<p>##验证事例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.ld.practice.arraylist;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.RandomAccess;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 测试Random Access List(随机访问列表)如 ArrayList 和 Sequence Access List(顺序访问列表)如 LinkedList &lt;/br&gt;</div><div class=\"line\"> * 不同遍历算法的效率&lt;/br&gt;</div><div class=\"line\"> * 结论：前者用循环，后者用迭代器</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@SuppressWarnings</span>(&#123;<span class=\"string\">\"rawtypes\"</span>, <span class=\"string\">\"unchecked\"</span>&#125;)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ListLoopTest</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 初始化 list，添加n个元素</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> list</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">List <span class=\"title\">initList</span><span class=\"params\">(List list, <span class=\"keyword\">int</span> n)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</div><div class=\"line\">\t\t\tlist.add(i);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> list;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 遍历 list，判断是否实现 RandomAccess 接口来使用不同的遍历方法</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> list</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">accessList</span><span class=\"params\">(List list)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> startTime = System.currentTimeMillis();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (list <span class=\"keyword\">instanceof</span> RandomAccess) &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"实现了 RandomAccess 接口...\"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</div><div class=\"line\">\t\t\t\tlist.get(i);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"没实现 RandomAccess 接口...\"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Iterator iterator = list.iterator(); iterator.hasNext();) &#123;</div><div class=\"line\">\t\t\t\titerator.next();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">long</span> endTime = System.currentTimeMillis();</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"遍历时间：\"</span> + (endTime - startTime));</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * loop 遍历 list</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">accessListByLoop</span><span class=\"params\">(List list)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> startTime = System.currentTimeMillis();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</div><div class=\"line\">\t\t\tlist.get(i);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">long</span> endTime = System.currentTimeMillis();</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"loop遍历时间：\"</span> + (endTime - startTime));</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 迭代器遍历</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">accessListByIterator</span><span class=\"params\">(List list)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> startTime = System.currentTimeMillis();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (Iterator iterator = list.iterator(); iterator.hasNext();) &#123;</div><div class=\"line\">\t\t\titerator.next();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">long</span> endTime = System.currentTimeMillis();</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Iterator遍历时间：\"</span> + (endTime - startTime));</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tArrayList&lt;Integer&gt; aList = (ArrayList&lt;Integer&gt;) initList(<span class=\"keyword\">new</span> ArrayList&lt;&gt;(), <span class=\"number\">2000000</span>);</div><div class=\"line\">\t\tLinkedList&lt;Integer&gt; lList = (LinkedList&lt;Integer&gt;) initList(<span class=\"keyword\">new</span> LinkedList&lt;&gt;(), <span class=\"number\">50000</span>);</div><div class=\"line\"></div><div class=\"line\">\t\taccessList(aList);</div><div class=\"line\">\t\taccessList(lList);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"ArrayList\"</span>);</div><div class=\"line\">\t\taccessListByLoop(aList);</div><div class=\"line\">\t\taccessListByIterator(aList);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"LinkedList\"</span>);</div><div class=\"line\">\t\taccessListByLoop(lList);</div><div class=\"line\">\t\taccessListByIterator(lList);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">/*</span></div><div class=\"line\">  实现了 RandomAccess 接口...</div><div class=\"line\">  遍历时间：8</div><div class=\"line\">  没实现 RandomAccess 接口...</div><div class=\"line\">  遍历时间：2</div><div class=\"line\">  ArrayList</div><div class=\"line\">  loop遍历时间：5</div><div class=\"line\">  Iterator遍历时间：8</div><div class=\"line\">  LinkedList</div><div class=\"line\">  loop遍历时间：1532</div><div class=\"line\">  Iterator遍历时间：1</div><div class=\"line\">  */</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"响应模式","date":"2016-12-20T08:01:55.000Z","description":"html 4 种常见响应模式","_content":"# 常见响应模式\n- 大体流动模型(mostly fluid)\n- 掉落列模型(column drop)\n- 活动布局模型(layout shifter)\n- 画布溢出模型(off canvas)\n\n<!--more-->\n\n## 掉落列模型\n\n```css\n<div class=\"container\">\n  <div class=\"box dark_blue\"></div>\n  <div class=\"box light_blue\"></div>\n  <div class=\"box green\"></div>\n</div>\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.box {\n  width: 100%;\n}\n\n@media screen and (min-width: 450px) {\n  .dark-blue {\n    width: 25%;\n  }\n\n  .light-blue {\n    width: 75%;\n  }\n}\n\n@media screen and (min-width: 550px) {\n  .dark-blue,\n  .green {\n    width: 25%;\n  }\n\n  .light-blue {\n    width: 50%;\n  }\n}\n```\n\n## 大体流动模型\n\n```css\n<div class=\"container\">\n  <div class=\"box dark_blue\"></div>\n  <div class=\"box light_blue\"></div>\n  <div class=\"box green\"></div>\n  <div class=\"box red\"></div>\n  <div class=\"box orange\"></div>\n</div>\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.box {\n  width: 100%;\n}\n\n@media screen and (min-width: 450px) {\n  .light-blue,\n  .green {\n    width: 50%;\n  }\n}\n\n@media screen and (min-width: 550px) {\n  .dark-blue,\n  .light-blue {\n    width: 50%;\n  }\n\n  .red,\n  .green,\n  .orange {\n    width: 33.333333%;\n  }\n}\n\n@media screen and (min-width: 700px) {\n  .container {\n    width: 700px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n}\n```\n\n## 活动布局模型\n```css\n<div class=\"container\">\n  <div class=\"box dark_blue\"></div>\n  <div class=\"container\" id=\"container2\">\n    <div class=\"box light_blue\"></div>\n    <div class=\"box green\"></div>\n  </div>\n  <div class=\"box red\"></div>\n</div>\n\n.container {\n  width: 100%;  /* .ddd */\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.box {\n  width: 100%;\n}\n\n@media screen and (min-width: 500px) {\n  .dark-blue {\n    width: 50%;\n  }\n  #container2 {\n    width: 50%;\n  }\n}\n\n@media screen and (min-width: 600px) {\n  .dark-blue {\n    width: 25%;\n    order: 1;\n  }\n  #container2 {\n    width: 50%;\n  }\n  .red {\n    width: 25%;\n    order: -1;\n  }\n}\n```\n\n## 画布溢出模型\n\n```html\n<!DOCTYPE html>\n<!-- saved from url=(0070)http://udacity.github.io/RWDF-samples/Lesson4/patterns/off-canvas.html -->\n<html lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title></title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./off-canvas_files/default-styles.css\">\n    <style type=\"text/css\">\n\n      html, body {\n        height: 100%;\n        width: 100%;\n      }\n      a#menu svg {\n        width: 40px;\n        fill: #000;\n      }\n      nav, main {\n        padding: 1em;\n        box-sizing: border-box;\n      }\n      main {\n        width: 100%;\n        height: 100%;\n      }\n\n\n      /*\n       * Off-canvas layout styles.\n       */\n\n      /* Since we're mobile-first, by default, the drawer is hidden. */\n      nav {\n        width: 300px;\n        height: 100%;\n        position: absolute;\n        /* This trasform moves the drawer off canvas. */\n        -webkit-transform: translate(-300px, 0);\n        transform: translate(-300px, 0);\n        /* Optionally, we animate the drawer. */\n        transition: transform 0.3s ease;\n      }\n      nav.open {\n        -webkit-transform: translate(0, 0);\n        transform: translate(0, 0);\n      }\n\n      /* If there is enough space (> 600px), we keep the drawer open all the time. */\n      @media (min-width: 600px) {\n\n        /* We open the drawer. */\n        nav {\n          position:relative;\n          -webkit-transform: translate(0, 0);\n          transform: translate(0, 0);\n        }\n\n        /* We use Flexbox on the parent. */\n        body {\n          display: -webkit-flex;\n          display: flex;\n          -webkit-flex-flow: row nowrap;\n          flex-flow: row nowrap;\n        }\n\n        main {\n          width: auto;\n          /* Flex-grow streches the main content to fill all available space. */\n          flex-grow: 1;\n        }\n      }\n\n      /* If there is space (> 800px), we keep the drawer open by default. */\n      @media (min-width: 600px) {\n        main > #menu:after {\n          content: 'The drawer stays open if width > 600px';\n        }\n        main p, nav p {\n          text-decoration: line-through;\n        }\n      }\n\n    </style>\n  <link rel=\"import\" href=\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/templates/feedback.html\" id=\"udacity-test-widget\"><script id=\"ud-grader-options\">UdacityFEGradingEngine.turnOn();</script></head>\n  <body>\n    <nav id=\"drawer\" class=\"dark_blue\">\n      <h2>Off Canvas</h2>\n      <p>Click outside the drawer to close</p>\n    </nav>\n\n    <main class=\"light_blue\">\n      <a id=\"menu\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path d=\"M2 6h20v3H2zm0 5h20v3H2zm0 5h20v3H2z\"></path>\n        </svg>\n      </a>\n      <p>Click on the menu icon to open the drawer</p>\n    </main>\n\n    <script>\n      /*\n       * Open the drawer when the menu ison is clicked.\n       */\n      var menu = document.querySelector('#menu');\n      var main = document.querySelector('main');\n      var drawer = document.querySelector('#drawer');\n\n      menu.addEventListener('click', function(e) {\n        drawer.classList.toggle('open');\n        e.stopPropagation();\n      });\n      main.addEventListener('click', function() {\n        drawer.classList.remove('open');\n      });\n\n    </script><script src=\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/js/libs/GE.js\" id=\"udacity-front-end-feedback\"></script><test-widget></test-widget></body></html>\n```\n\n```css\n@import url(https://fonts.googleapis.com/css?family=Roboto);\n\nhtml, body {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-family: 'Roboto', sans-serif;\n}\n\n.title {\n  font-size: 2.5em;\n  text-align: center;\n}\n\n.box {\n  min-height: 150px;\n}\n\n.dark_blue {\n  background-color: #2A457A;\n  color: #efefef;\n}\n\n.light_blue {\n  background-color: #099DD9;\n}\n\n.green {\n  background-color: #0C8542;\n}\n\n.lime {\n  background-color: rgb(179, 210, 52);\n}\n\n.seafoam {\n  background-color: rgb(77, 190, 161);\n}\n\n.red {\n  background-color: #EC1D3B;\n}\n\n.orange {\n  background-color: #F79420;\n}\n```\n","source":"_posts/xyms.md","raw":"---\ntitle: 响应模式\ndate: 2016-12-20 16:01:55\ntags: html\ndescription: html 4 种常见响应模式\n---\n# 常见响应模式\n- 大体流动模型(mostly fluid)\n- 掉落列模型(column drop)\n- 活动布局模型(layout shifter)\n- 画布溢出模型(off canvas)\n\n<!--more-->\n\n## 掉落列模型\n\n```css\n<div class=\"container\">\n  <div class=\"box dark_blue\"></div>\n  <div class=\"box light_blue\"></div>\n  <div class=\"box green\"></div>\n</div>\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.box {\n  width: 100%;\n}\n\n@media screen and (min-width: 450px) {\n  .dark-blue {\n    width: 25%;\n  }\n\n  .light-blue {\n    width: 75%;\n  }\n}\n\n@media screen and (min-width: 550px) {\n  .dark-blue,\n  .green {\n    width: 25%;\n  }\n\n  .light-blue {\n    width: 50%;\n  }\n}\n```\n\n## 大体流动模型\n\n```css\n<div class=\"container\">\n  <div class=\"box dark_blue\"></div>\n  <div class=\"box light_blue\"></div>\n  <div class=\"box green\"></div>\n  <div class=\"box red\"></div>\n  <div class=\"box orange\"></div>\n</div>\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.box {\n  width: 100%;\n}\n\n@media screen and (min-width: 450px) {\n  .light-blue,\n  .green {\n    width: 50%;\n  }\n}\n\n@media screen and (min-width: 550px) {\n  .dark-blue,\n  .light-blue {\n    width: 50%;\n  }\n\n  .red,\n  .green,\n  .orange {\n    width: 33.333333%;\n  }\n}\n\n@media screen and (min-width: 700px) {\n  .container {\n    width: 700px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n}\n```\n\n## 活动布局模型\n```css\n<div class=\"container\">\n  <div class=\"box dark_blue\"></div>\n  <div class=\"container\" id=\"container2\">\n    <div class=\"box light_blue\"></div>\n    <div class=\"box green\"></div>\n  </div>\n  <div class=\"box red\"></div>\n</div>\n\n.container {\n  width: 100%;  /* .ddd */\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.box {\n  width: 100%;\n}\n\n@media screen and (min-width: 500px) {\n  .dark-blue {\n    width: 50%;\n  }\n  #container2 {\n    width: 50%;\n  }\n}\n\n@media screen and (min-width: 600px) {\n  .dark-blue {\n    width: 25%;\n    order: 1;\n  }\n  #container2 {\n    width: 50%;\n  }\n  .red {\n    width: 25%;\n    order: -1;\n  }\n}\n```\n\n## 画布溢出模型\n\n```html\n<!DOCTYPE html>\n<!-- saved from url=(0070)http://udacity.github.io/RWDF-samples/Lesson4/patterns/off-canvas.html -->\n<html lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title></title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./off-canvas_files/default-styles.css\">\n    <style type=\"text/css\">\n\n      html, body {\n        height: 100%;\n        width: 100%;\n      }\n      a#menu svg {\n        width: 40px;\n        fill: #000;\n      }\n      nav, main {\n        padding: 1em;\n        box-sizing: border-box;\n      }\n      main {\n        width: 100%;\n        height: 100%;\n      }\n\n\n      /*\n       * Off-canvas layout styles.\n       */\n\n      /* Since we're mobile-first, by default, the drawer is hidden. */\n      nav {\n        width: 300px;\n        height: 100%;\n        position: absolute;\n        /* This trasform moves the drawer off canvas. */\n        -webkit-transform: translate(-300px, 0);\n        transform: translate(-300px, 0);\n        /* Optionally, we animate the drawer. */\n        transition: transform 0.3s ease;\n      }\n      nav.open {\n        -webkit-transform: translate(0, 0);\n        transform: translate(0, 0);\n      }\n\n      /* If there is enough space (> 600px), we keep the drawer open all the time. */\n      @media (min-width: 600px) {\n\n        /* We open the drawer. */\n        nav {\n          position:relative;\n          -webkit-transform: translate(0, 0);\n          transform: translate(0, 0);\n        }\n\n        /* We use Flexbox on the parent. */\n        body {\n          display: -webkit-flex;\n          display: flex;\n          -webkit-flex-flow: row nowrap;\n          flex-flow: row nowrap;\n        }\n\n        main {\n          width: auto;\n          /* Flex-grow streches the main content to fill all available space. */\n          flex-grow: 1;\n        }\n      }\n\n      /* If there is space (> 800px), we keep the drawer open by default. */\n      @media (min-width: 600px) {\n        main > #menu:after {\n          content: 'The drawer stays open if width > 600px';\n        }\n        main p, nav p {\n          text-decoration: line-through;\n        }\n      }\n\n    </style>\n  <link rel=\"import\" href=\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/templates/feedback.html\" id=\"udacity-test-widget\"><script id=\"ud-grader-options\">UdacityFEGradingEngine.turnOn();</script></head>\n  <body>\n    <nav id=\"drawer\" class=\"dark_blue\">\n      <h2>Off Canvas</h2>\n      <p>Click outside the drawer to close</p>\n    </nav>\n\n    <main class=\"light_blue\">\n      <a id=\"menu\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path d=\"M2 6h20v3H2zm0 5h20v3H2zm0 5h20v3H2z\"></path>\n        </svg>\n      </a>\n      <p>Click on the menu icon to open the drawer</p>\n    </main>\n\n    <script>\n      /*\n       * Open the drawer when the menu ison is clicked.\n       */\n      var menu = document.querySelector('#menu');\n      var main = document.querySelector('main');\n      var drawer = document.querySelector('#drawer');\n\n      menu.addEventListener('click', function(e) {\n        drawer.classList.toggle('open');\n        e.stopPropagation();\n      });\n      main.addEventListener('click', function() {\n        drawer.classList.remove('open');\n      });\n\n    </script><script src=\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/js/libs/GE.js\" id=\"udacity-front-end-feedback\"></script><test-widget></test-widget></body></html>\n```\n\n```css\n@import url(https://fonts.googleapis.com/css?family=Roboto);\n\nhtml, body {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-family: 'Roboto', sans-serif;\n}\n\n.title {\n  font-size: 2.5em;\n  text-align: center;\n}\n\n.box {\n  min-height: 150px;\n}\n\n.dark_blue {\n  background-color: #2A457A;\n  color: #efefef;\n}\n\n.light_blue {\n  background-color: #099DD9;\n}\n\n.green {\n  background-color: #0C8542;\n}\n\n.lime {\n  background-color: rgb(179, 210, 52);\n}\n\n.seafoam {\n  background-color: rgb(77, 190, 161);\n}\n\n.red {\n  background-color: #EC1D3B;\n}\n\n.orange {\n  background-color: #F79420;\n}\n```\n","slug":"xyms","published":1,"updated":"2017-06-19T08:59:27.156Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj44zcksm0006536uv8x6q1sb","content":"<h1 id=\"常见响应模式\"><a href=\"#常见响应模式\" class=\"headerlink\" title=\"常见响应模式\"></a>常见响应模式</h1><ul>\n<li>大体流动模型(mostly fluid)</li>\n<li>掉落列模型(column drop)</li>\n<li>活动布局模型(layout shifter)</li>\n<li>画布溢出模型(off canvas)</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"掉落列模型\"><a href=\"#掉落列模型\" class=\"headerlink\" title=\"掉落列模型\"></a>掉落列模型</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"container\"&gt;</div><div class=\"line\">  &lt;div class=\"box dark_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box light_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box green\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.container &#123;</div><div class=\"line\">  display: flex;</div><div class=\"line\">  flex-wrap: wrap;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.box &#123;</div><div class=\"line\">  width: 100%;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 450px) &#123;</div><div class=\"line\">  .dark-blue &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  .light-blue &#123;</div><div class=\"line\">    width: 75%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 550px) &#123;</div><div class=\"line\">  .dark-blue,</div><div class=\"line\">  .green &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  .light-blue &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"大体流动模型\"><a href=\"#大体流动模型\" class=\"headerlink\" title=\"大体流动模型\"></a>大体流动模型</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"container\"&gt;</div><div class=\"line\">  &lt;div class=\"box dark_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box light_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box green\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box red\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box orange\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.container &#123;</div><div class=\"line\">  display: flex;</div><div class=\"line\">  flex-wrap: wrap;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.box &#123;</div><div class=\"line\">  width: 100%;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 450px) &#123;</div><div class=\"line\">  .light-blue,</div><div class=\"line\">  .green &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 550px) &#123;</div><div class=\"line\">  .dark-blue,</div><div class=\"line\">  .light-blue &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  .red,</div><div class=\"line\">  .green,</div><div class=\"line\">  .orange &#123;</div><div class=\"line\">    width: 33.333333%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 700px) &#123;</div><div class=\"line\">  .container &#123;</div><div class=\"line\">    width: 700px;</div><div class=\"line\">    margin-left: auto;</div><div class=\"line\">    margin-right: auto;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"活动布局模型\"><a href=\"#活动布局模型\" class=\"headerlink\" title=\"活动布局模型\"></a>活动布局模型</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"container\"&gt;</div><div class=\"line\">  &lt;div class=\"box dark_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"container\" id=\"container2\"&gt;</div><div class=\"line\">    &lt;div class=\"box light_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"box green\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box red\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.container &#123;</div><div class=\"line\">  width: 100%;  /* .ddd */</div><div class=\"line\">  display: flex;</div><div class=\"line\">  flex-wrap: wrap;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.box &#123;</div><div class=\"line\">  width: 100%;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 500px) &#123;</div><div class=\"line\">  .dark-blue &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">  #container2 &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 600px) &#123;</div><div class=\"line\">  .dark-blue &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">    order: 1;</div><div class=\"line\">  &#125;</div><div class=\"line\">  #container2 &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">  .red &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">    order: -1;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"画布溢出模型\"><a href=\"#画布溢出模型\" class=\"headerlink\" title=\"画布溢出模型\"></a>画布溢出模型</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- saved from url=(0070)http://udacity.github.io/RWDF-samples/Lesson4/patterns/off-canvas.html --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=UTF-8\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"./off-canvas_files/default-styles.css\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></span></div><div class=\"line\"></div><div class=\"line\">      <span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">a</span><span class=\"selector-id\">#menu</span> <span class=\"selector-tag\">svg</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</div><div class=\"line\">        <span class=\"attribute\">fill</span>: <span class=\"number\">#000</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">nav</span>, <span class=\"selector-tag\">main</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">padding</span>: <span class=\"number\">1em</span>;</div><div class=\"line\">        <span class=\"attribute\">box-sizing</span>: border-box;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">main</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/*</span></div><div class=\"line\">       * Off-canvas layout styles.</div><div class=\"line\">       */</div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/* Since we're mobile-first, by default, the drawer is hidden. */</span></div><div class=\"line\">      <span class=\"selector-tag\">nav</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">        <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">        <span class=\"comment\">/* This trasform moves the drawer off canvas. */</span></div><div class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(-300px, 0);</div><div class=\"line\">        <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-300px, 0);</div><div class=\"line\">        <span class=\"comment\">/* Optionally, we animate the drawer. */</span></div><div class=\"line\">        <span class=\"attribute\">transition</span>: transform <span class=\"number\">0.3s</span> ease;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">nav</span><span class=\"selector-class\">.open</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">        <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/* If there is enough space (&gt; 600px), we keep the drawer open all the time. */</span></div><div class=\"line\">      @<span class=\"keyword\">media</span> (min-width: <span class=\"number\">600px</span>) &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/* We open the drawer. */</span></div><div class=\"line\">        <span class=\"selector-tag\">nav</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">position</span>:relative;</div><div class=\"line\">          <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">          <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/* We use Flexbox on the parent. */</span></div><div class=\"line\">        <span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">display</span>: -webkit-flex;</div><div class=\"line\">          <span class=\"attribute\">display</span>: flex;</div><div class=\"line\">          <span class=\"attribute\">-webkit-flex-flow</span>: row nowrap;</div><div class=\"line\">          <span class=\"attribute\">flex-flow</span>: row nowrap;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"selector-tag\">main</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">width</span>: auto;</div><div class=\"line\">          <span class=\"comment\">/* Flex-grow streches the main content to fill all available space. */</span></div><div class=\"line\">          <span class=\"attribute\">flex-grow</span>: <span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/* If there is space (&gt; 800px), we keep the drawer open by default. */</span></div><div class=\"line\">      @<span class=\"keyword\">media</span> (min-width: <span class=\"number\">600px</span>) &#123;</div><div class=\"line\">        <span class=\"selector-tag\">main</span> &gt; <span class=\"selector-id\">#menu</span><span class=\"selector-pseudo\">:after</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">content</span>: <span class=\"string\">'The drawer stays open if width &gt; 600px'</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"selector-tag\">main</span> <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">p</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">text-decoration</span>: line-through;</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"import\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/templates/feedback.html\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"udacity-test-widget\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ud-grader-options\"</span>&gt;</span><span class=\"undefined\">UdacityFEGradingEngine.turnOn();</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">id</span>=<span class=\"string\">\"drawer\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dark_blue\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Off Canvas<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Click outside the drawer to close<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">main</span> <span class=\"attr\">class</span>=<span class=\"string\">\"light_blue\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">\"menu\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/2000/svg\"</span> <span class=\"attr\">viewBox</span>=<span class=\"string\">\"0 0 24 24\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">d</span>=<span class=\"string\">\"M2 6h20v3H2zm0 5h20v3H2zm0 5h20v3H2z\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">path</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Click on the menu icon to open the drawer<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">      <span class=\"comment\">/*</span></div><div class=\"line\">       * Open the drawer when the menu ison is clicked.</div><div class=\"line\">       */</div><div class=\"line\">      <span class=\"keyword\">var</span> menu = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#menu'</span>);</div><div class=\"line\">      <span class=\"keyword\">var</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'main'</span>);</div><div class=\"line\">      <span class=\"keyword\">var</span> drawer = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#drawer'</span>);</div><div class=\"line\"></div><div class=\"line\">      menu.addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">        drawer.classList.toggle(<span class=\"string\">'open'</span>);</div><div class=\"line\">        e.stopPropagation();</div><div class=\"line\">      &#125;);</div><div class=\"line\">      main.addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        drawer.classList.remove(<span class=\"string\">'open'</span>);</div><div class=\"line\">      &#125;);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/js/libs/GE.js\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"udacity-front-end-feedback\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">test-widget</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">test-widget</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">import</span> url(https://fonts.googleapis.com/css?family=Roboto);</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Roboto'</span>, sans-serif;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.title</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2.5em</span>;</div><div class=\"line\">  <span class=\"attribute\">text-align</span>: center;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">150px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.dark_blue</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#2A457A</span>;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#efefef</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.light_blue</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#099DD9</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.green</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#0C8542</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.lime</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(179, 210, 52);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.seafoam</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(77, 190, 161);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.red</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#EC1D3B</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.orange</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#F79420</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"常见响应模式\"><a href=\"#常见响应模式\" class=\"headerlink\" title=\"常见响应模式\"></a>常见响应模式</h1><ul>\n<li>大体流动模型(mostly fluid)</li>\n<li>掉落列模型(column drop)</li>\n<li>活动布局模型(layout shifter)</li>\n<li>画布溢出模型(off canvas)</li>\n</ul>","more":"<h2 id=\"掉落列模型\"><a href=\"#掉落列模型\" class=\"headerlink\" title=\"掉落列模型\"></a>掉落列模型</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"container\"&gt;</div><div class=\"line\">  &lt;div class=\"box dark_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box light_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box green\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.container &#123;</div><div class=\"line\">  display: flex;</div><div class=\"line\">  flex-wrap: wrap;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.box &#123;</div><div class=\"line\">  width: 100%;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 450px) &#123;</div><div class=\"line\">  .dark-blue &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  .light-blue &#123;</div><div class=\"line\">    width: 75%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 550px) &#123;</div><div class=\"line\">  .dark-blue,</div><div class=\"line\">  .green &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  .light-blue &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"大体流动模型\"><a href=\"#大体流动模型\" class=\"headerlink\" title=\"大体流动模型\"></a>大体流动模型</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"container\"&gt;</div><div class=\"line\">  &lt;div class=\"box dark_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box light_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box green\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box red\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box orange\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.container &#123;</div><div class=\"line\">  display: flex;</div><div class=\"line\">  flex-wrap: wrap;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.box &#123;</div><div class=\"line\">  width: 100%;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 450px) &#123;</div><div class=\"line\">  .light-blue,</div><div class=\"line\">  .green &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 550px) &#123;</div><div class=\"line\">  .dark-blue,</div><div class=\"line\">  .light-blue &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  .red,</div><div class=\"line\">  .green,</div><div class=\"line\">  .orange &#123;</div><div class=\"line\">    width: 33.333333%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 700px) &#123;</div><div class=\"line\">  .container &#123;</div><div class=\"line\">    width: 700px;</div><div class=\"line\">    margin-left: auto;</div><div class=\"line\">    margin-right: auto;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"活动布局模型\"><a href=\"#活动布局模型\" class=\"headerlink\" title=\"活动布局模型\"></a>活动布局模型</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"container\"&gt;</div><div class=\"line\">  &lt;div class=\"box dark_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"container\" id=\"container2\"&gt;</div><div class=\"line\">    &lt;div class=\"box light_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"box green\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box red\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.container &#123;</div><div class=\"line\">  width: 100%;  /* .ddd */</div><div class=\"line\">  display: flex;</div><div class=\"line\">  flex-wrap: wrap;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.box &#123;</div><div class=\"line\">  width: 100%;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 500px) &#123;</div><div class=\"line\">  .dark-blue &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">  #container2 &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 600px) &#123;</div><div class=\"line\">  .dark-blue &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">    order: 1;</div><div class=\"line\">  &#125;</div><div class=\"line\">  #container2 &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">  .red &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">    order: -1;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"画布溢出模型\"><a href=\"#画布溢出模型\" class=\"headerlink\" title=\"画布溢出模型\"></a>画布溢出模型</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- saved from url=(0070)http://udacity.github.io/RWDF-samples/Lesson4/patterns/off-canvas.html --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=UTF-8\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"./off-canvas_files/default-styles.css\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></span></div><div class=\"line\"></div><div class=\"line\">      <span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">a</span><span class=\"selector-id\">#menu</span> <span class=\"selector-tag\">svg</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</div><div class=\"line\">        <span class=\"attribute\">fill</span>: <span class=\"number\">#000</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">nav</span>, <span class=\"selector-tag\">main</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">padding</span>: <span class=\"number\">1em</span>;</div><div class=\"line\">        <span class=\"attribute\">box-sizing</span>: border-box;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">main</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/*</span></div><div class=\"line\">       * Off-canvas layout styles.</div><div class=\"line\">       */</div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/* Since we're mobile-first, by default, the drawer is hidden. */</span></div><div class=\"line\">      <span class=\"selector-tag\">nav</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">        <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">        <span class=\"comment\">/* This trasform moves the drawer off canvas. */</span></div><div class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(-300px, 0);</div><div class=\"line\">        <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-300px, 0);</div><div class=\"line\">        <span class=\"comment\">/* Optionally, we animate the drawer. */</span></div><div class=\"line\">        <span class=\"attribute\">transition</span>: transform <span class=\"number\">0.3s</span> ease;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">nav</span><span class=\"selector-class\">.open</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">        <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/* If there is enough space (&gt; 600px), we keep the drawer open all the time. */</span></div><div class=\"line\">      @<span class=\"keyword\">media</span> (min-width: <span class=\"number\">600px</span>) &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/* We open the drawer. */</span></div><div class=\"line\">        <span class=\"selector-tag\">nav</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">position</span>:relative;</div><div class=\"line\">          <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">          <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/* We use Flexbox on the parent. */</span></div><div class=\"line\">        <span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">display</span>: -webkit-flex;</div><div class=\"line\">          <span class=\"attribute\">display</span>: flex;</div><div class=\"line\">          <span class=\"attribute\">-webkit-flex-flow</span>: row nowrap;</div><div class=\"line\">          <span class=\"attribute\">flex-flow</span>: row nowrap;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"selector-tag\">main</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">width</span>: auto;</div><div class=\"line\">          <span class=\"comment\">/* Flex-grow streches the main content to fill all available space. */</span></div><div class=\"line\">          <span class=\"attribute\">flex-grow</span>: <span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/* If there is space (&gt; 800px), we keep the drawer open by default. */</span></div><div class=\"line\">      @<span class=\"keyword\">media</span> (min-width: <span class=\"number\">600px</span>) &#123;</div><div class=\"line\">        <span class=\"selector-tag\">main</span> &gt; <span class=\"selector-id\">#menu</span><span class=\"selector-pseudo\">:after</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">content</span>: <span class=\"string\">'The drawer stays open if width &gt; 600px'</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"selector-tag\">main</span> <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">p</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">text-decoration</span>: line-through;</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"import\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/templates/feedback.html\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"udacity-test-widget\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ud-grader-options\"</span>&gt;</span><span class=\"undefined\">UdacityFEGradingEngine.turnOn();</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">id</span>=<span class=\"string\">\"drawer\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dark_blue\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Off Canvas<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Click outside the drawer to close<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">main</span> <span class=\"attr\">class</span>=<span class=\"string\">\"light_blue\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">\"menu\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/2000/svg\"</span> <span class=\"attr\">viewBox</span>=<span class=\"string\">\"0 0 24 24\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">d</span>=<span class=\"string\">\"M2 6h20v3H2zm0 5h20v3H2zm0 5h20v3H2z\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">path</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Click on the menu icon to open the drawer<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">      <span class=\"comment\">/*</span></div><div class=\"line\">       * Open the drawer when the menu ison is clicked.</div><div class=\"line\">       */</div><div class=\"line\">      <span class=\"keyword\">var</span> menu = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#menu'</span>);</div><div class=\"line\">      <span class=\"keyword\">var</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'main'</span>);</div><div class=\"line\">      <span class=\"keyword\">var</span> drawer = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#drawer'</span>);</div><div class=\"line\"></div><div class=\"line\">      menu.addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">        drawer.classList.toggle(<span class=\"string\">'open'</span>);</div><div class=\"line\">        e.stopPropagation();</div><div class=\"line\">      &#125;);</div><div class=\"line\">      main.addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        drawer.classList.remove(<span class=\"string\">'open'</span>);</div><div class=\"line\">      &#125;);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/js/libs/GE.js\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"udacity-front-end-feedback\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">test-widget</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">test-widget</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">import</span> url(https://fonts.googleapis.com/css?family=Roboto);</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Roboto'</span>, sans-serif;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.title</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2.5em</span>;</div><div class=\"line\">  <span class=\"attribute\">text-align</span>: center;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">150px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.dark_blue</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#2A457A</span>;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#efefef</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.light_blue</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#099DD9</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.green</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#0C8542</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.lime</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(179, 210, 52);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.seafoam</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(77, 190, 161);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.red</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#EC1D3B</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.orange</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#F79420</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"java 调用 c# 的方法","date":"2017-06-28T12:00:00.000Z","description":"java 调用 c# 程序的几种方式。","_content":"\njava 调用 c# 程序的几种方式。\n\n<!--more-->\n\n# Native Java\n\nJava不能直接调用C#的dll，这是因为C#和Java一样，也是运行在虚拟机上的语言，所生成的dll并不是和C++一样的native dll，因此没有办法使用JNI进行直接调用。\n\nJava调用C#的基本思路是：\n\nJava <=== JNI ===> C++ Native dll <=== CLR ===> C# dll\n\n给C# dll做一个C++的wrapper，Java与C++之间通过JNI实现调用，而C++和C#之间通过CLR实现调用。\n\n**这样做有个缺陷就是不能在 linux 上运行。**\n\n有以下几种方法实现：\n\n## jni4net\n\ngithub: https://github.com/jni4net/jni4net\n\n```java\nimport java.io.File;\nimport java.io.IOException;\nimport testlib.Test;\nimport net.sf.jni4net.Bridge;\n...\n        try {\n\n            Bridge.setVerbose(true);\n            Bridge.init();\n\n            Bridge.LoadAndRegisterAssemblyFrom(new File(\"testlib.j4n.dll\"));\n\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n\n        Test test = new Test();\n        test.Hello();\n        test.Repeat(\"It works!\");\n```\n\n缺点：\n\n1. 很长时间没更新了\n2. 不支持在 Mono 和 Linux 上运行。原文：[It's not supported at the moment, sorry](http://zamboch.blogspot.cz/2010/04/jni4net-not-yet-on-mono-linux.html)\n3. 性能一般\n\n## javonet\n\n按年收费\n\n```java\npublic void GenerateRandomNumber() throws JavonetException {\n    NObject objRandom = Javonet.New(\"System.Random\");\n    int value = objRandom.invoke(\"Next\",10,20);\n\n    System.out.println(value);\n}\n```\n\n## 自己实现一个C++ native dll作为你的C# dll的代理\n\n基本的实现思路是：\n\n1. 对应你的C# dll，写一套Java版本的API。\n2. 使用javah命令，将Java API翻译成对应的C++ API，并输出到对应的xxxxJNI.h文件中。\n3. 创建C++ dll工程，添加xxxxJNI.h以及jdk提供的jni.h和jni_md.h，并启用clr支持。\n4. 在C++ dll工程中通过managed C++调用你的C#dll，进而实现所有的C++ API。\n\n操作过程可参考  [How-to-wrap-a-Csharp-library-for-use-in-Java](https://www.codeproject.com/Articles/378826/How-to-wrap-a-Csharp-library-for-use-in-Java) 和 [Java 调用 C# DLL](http://www.iteye.com/topic/1133867).\n\n# 使用中间文件做交互\n\n可以把输入和输出存到一个中间文本文件中(json, csv, txt)，让 c# 程序调用，然后输出一个文本文件。\n\n缺点：\n\n1. 过程繁琐。\n2. java 和 c# 方都无法感知对方处理进度，无法方便的确定输入输出完成时间。(可以在文本结尾放置一段特殊字符作为处理结束标志)\n3. 程序异常不好发现。\n\n# 接口调用\n\nc# 将输入封装成 http 或 socket 接口，供 java 调用。c# 程序编译成 exe，在安装了 Mono 的 Linux 机器上运行，或运行在 Mono Docker 镜像中。\n\n---\n\n参考\n\n> http://ju.outofmemory.cn/entry/153844\n","source":"_posts/java_call_cnet.md","raw":"---\ntitle: java 调用 c# 的方法\ndate: 2017-06-28 20:00:00\ntags: java\ndescription: java 调用 c# 程序的几种方式。\n---\n\njava 调用 c# 程序的几种方式。\n\n<!--more-->\n\n# Native Java\n\nJava不能直接调用C#的dll，这是因为C#和Java一样，也是运行在虚拟机上的语言，所生成的dll并不是和C++一样的native dll，因此没有办法使用JNI进行直接调用。\n\nJava调用C#的基本思路是：\n\nJava <=== JNI ===> C++ Native dll <=== CLR ===> C# dll\n\n给C# dll做一个C++的wrapper，Java与C++之间通过JNI实现调用，而C++和C#之间通过CLR实现调用。\n\n**这样做有个缺陷就是不能在 linux 上运行。**\n\n有以下几种方法实现：\n\n## jni4net\n\ngithub: https://github.com/jni4net/jni4net\n\n```java\nimport java.io.File;\nimport java.io.IOException;\nimport testlib.Test;\nimport net.sf.jni4net.Bridge;\n...\n        try {\n\n            Bridge.setVerbose(true);\n            Bridge.init();\n\n            Bridge.LoadAndRegisterAssemblyFrom(new File(\"testlib.j4n.dll\"));\n\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n\n        Test test = new Test();\n        test.Hello();\n        test.Repeat(\"It works!\");\n```\n\n缺点：\n\n1. 很长时间没更新了\n2. 不支持在 Mono 和 Linux 上运行。原文：[It's not supported at the moment, sorry](http://zamboch.blogspot.cz/2010/04/jni4net-not-yet-on-mono-linux.html)\n3. 性能一般\n\n## javonet\n\n按年收费\n\n```java\npublic void GenerateRandomNumber() throws JavonetException {\n    NObject objRandom = Javonet.New(\"System.Random\");\n    int value = objRandom.invoke(\"Next\",10,20);\n\n    System.out.println(value);\n}\n```\n\n## 自己实现一个C++ native dll作为你的C# dll的代理\n\n基本的实现思路是：\n\n1. 对应你的C# dll，写一套Java版本的API。\n2. 使用javah命令，将Java API翻译成对应的C++ API，并输出到对应的xxxxJNI.h文件中。\n3. 创建C++ dll工程，添加xxxxJNI.h以及jdk提供的jni.h和jni_md.h，并启用clr支持。\n4. 在C++ dll工程中通过managed C++调用你的C#dll，进而实现所有的C++ API。\n\n操作过程可参考  [How-to-wrap-a-Csharp-library-for-use-in-Java](https://www.codeproject.com/Articles/378826/How-to-wrap-a-Csharp-library-for-use-in-Java) 和 [Java 调用 C# DLL](http://www.iteye.com/topic/1133867).\n\n# 使用中间文件做交互\n\n可以把输入和输出存到一个中间文本文件中(json, csv, txt)，让 c# 程序调用，然后输出一个文本文件。\n\n缺点：\n\n1. 过程繁琐。\n2. java 和 c# 方都无法感知对方处理进度，无法方便的确定输入输出完成时间。(可以在文本结尾放置一段特殊字符作为处理结束标志)\n3. 程序异常不好发现。\n\n# 接口调用\n\nc# 将输入封装成 http 或 socket 接口，供 java 调用。c# 程序编译成 exe，在安装了 Mono 的 Linux 机器上运行，或运行在 Mono Docker 镜像中。\n\n---\n\n参考\n\n> http://ju.outofmemory.cn/entry/153844\n","slug":"java_call_cnet","published":1,"updated":"2018-04-13T07:00:02.716Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfxmm6rr0000jkr3wmtj0w3j","content":"<p>java 调用 c# 程序的几种方式。</p>\n<a id=\"more\"></a>\n<h1 id=\"Native-Java\"><a href=\"#Native-Java\" class=\"headerlink\" title=\"Native Java\"></a>Native Java</h1><p>Java不能直接调用C#的dll，这是因为C#和Java一样，也是运行在虚拟机上的语言，所生成的dll并不是和C++一样的native dll，因此没有办法使用JNI进行直接调用。</p>\n<p>Java调用C#的基本思路是：</p>\n<p>Java &lt;=== JNI ===&gt; C++ Native dll &lt;=== CLR ===&gt; C# dll</p>\n<p>给C# dll做一个C++的wrapper，Java与C++之间通过JNI实现调用，而C++和C#之间通过CLR实现调用。</p>\n<p><strong>这样做有个缺陷就是不能在 linux 上运行。</strong></p>\n<p>有以下几种方法实现：</p>\n<h2 id=\"jni4net\"><a href=\"#jni4net\" class=\"headerlink\" title=\"jni4net\"></a>jni4net</h2><p>github: <a href=\"https://github.com/jni4net/jni4net\" target=\"_blank\" rel=\"noopener\">https://github.com/jni4net/jni4net</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> testlib.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> net.sf.jni4net.Bridge;</span><br><span class=\"line\">...</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            Bridge.setVerbose(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            Bridge.init();</span><br><span class=\"line\"></span><br><span class=\"line\">            Bridge.LoadAndRegisterAssemblyFrom(<span class=\"keyword\">new</span> File(<span class=\"string\">\"testlib.j4n.dll\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Test test = <span class=\"keyword\">new</span> Test();</span><br><span class=\"line\">        test.Hello();</span><br><span class=\"line\">        test.Repeat(<span class=\"string\">\"It works!\"</span>);</span><br></pre></td></tr></table></figure>\n<p>缺点：</p>\n<ol>\n<li>很长时间没更新了</li>\n<li>不支持在 Mono 和 Linux 上运行。原文：<a href=\"http://zamboch.blogspot.cz/2010/04/jni4net-not-yet-on-mono-linux.html\" target=\"_blank\" rel=\"noopener\">It’s not supported at the moment, sorry</a></li>\n<li>性能一般</li>\n</ol>\n<h2 id=\"javonet\"><a href=\"#javonet\" class=\"headerlink\" title=\"javonet\"></a>javonet</h2><p>按年收费</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">GenerateRandomNumber</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> JavonetException </span>&#123;</span><br><span class=\"line\">    NObject objRandom = Javonet.New(<span class=\"string\">\"System.Random\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> value = objRandom.invoke(<span class=\"string\">\"Next\"</span>,<span class=\"number\">10</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"自己实现一个C-native-dll作为你的C-dll的代理\"><a href=\"#自己实现一个C-native-dll作为你的C-dll的代理\" class=\"headerlink\" title=\"自己实现一个C++ native dll作为你的C# dll的代理\"></a>自己实现一个C++ native dll作为你的C# dll的代理</h2><p>基本的实现思路是：</p>\n<ol>\n<li>对应你的C# dll，写一套Java版本的API。</li>\n<li>使用javah命令，将Java API翻译成对应的C++ API，并输出到对应的xxxxJNI.h文件中。</li>\n<li>创建C++ dll工程，添加xxxxJNI.h以及jdk提供的jni.h和jni_md.h，并启用clr支持。</li>\n<li>在C++ dll工程中通过managed C++调用你的C#dll，进而实现所有的C++ API。</li>\n</ol>\n<p>操作过程可参考  <a href=\"https://www.codeproject.com/Articles/378826/How-to-wrap-a-Csharp-library-for-use-in-Java\" target=\"_blank\" rel=\"noopener\">How-to-wrap-a-Csharp-library-for-use-in-Java</a> 和 <a href=\"http://www.iteye.com/topic/1133867\" target=\"_blank\" rel=\"noopener\">Java 调用 C# DLL</a>.</p>\n<h1 id=\"使用中间文件做交互\"><a href=\"#使用中间文件做交互\" class=\"headerlink\" title=\"使用中间文件做交互\"></a>使用中间文件做交互</h1><p>可以把输入和输出存到一个中间文本文件中(json, csv, txt)，让 c# 程序调用，然后输出一个文本文件。</p>\n<p>缺点：</p>\n<ol>\n<li>过程繁琐。</li>\n<li>java 和 c# 方都无法感知对方处理进度，无法方便的确定输入输出完成时间。(可以在文本结尾放置一段特殊字符作为处理结束标志)</li>\n<li>程序异常不好发现。</li>\n</ol>\n<h1 id=\"接口调用\"><a href=\"#接口调用\" class=\"headerlink\" title=\"接口调用\"></a>接口调用</h1><p>c# 将输入封装成 http 或 socket 接口，供 java 调用。c# 程序编译成 exe，在安装了 Mono 的 Linux 机器上运行，或运行在 Mono Docker 镜像中。</p>\n<hr>\n<p>参考</p>\n<blockquote>\n<p><a href=\"http://ju.outofmemory.cn/entry/153844\" target=\"_blank\" rel=\"noopener\">http://ju.outofmemory.cn/entry/153844</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>java 调用 c# 程序的几种方式。</p>","more":"<h1 id=\"Native-Java\"><a href=\"#Native-Java\" class=\"headerlink\" title=\"Native Java\"></a>Native Java</h1><p>Java不能直接调用C#的dll，这是因为C#和Java一样，也是运行在虚拟机上的语言，所生成的dll并不是和C++一样的native dll，因此没有办法使用JNI进行直接调用。</p>\n<p>Java调用C#的基本思路是：</p>\n<p>Java &lt;=== JNI ===&gt; C++ Native dll &lt;=== CLR ===&gt; C# dll</p>\n<p>给C# dll做一个C++的wrapper，Java与C++之间通过JNI实现调用，而C++和C#之间通过CLR实现调用。</p>\n<p><strong>这样做有个缺陷就是不能在 linux 上运行。</strong></p>\n<p>有以下几种方法实现：</p>\n<h2 id=\"jni4net\"><a href=\"#jni4net\" class=\"headerlink\" title=\"jni4net\"></a>jni4net</h2><p>github: <a href=\"https://github.com/jni4net/jni4net\" target=\"_blank\" rel=\"noopener\">https://github.com/jni4net/jni4net</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> testlib.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> net.sf.jni4net.Bridge;</span><br><span class=\"line\">...</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            Bridge.setVerbose(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            Bridge.init();</span><br><span class=\"line\"></span><br><span class=\"line\">            Bridge.LoadAndRegisterAssemblyFrom(<span class=\"keyword\">new</span> File(<span class=\"string\">\"testlib.j4n.dll\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Test test = <span class=\"keyword\">new</span> Test();</span><br><span class=\"line\">        test.Hello();</span><br><span class=\"line\">        test.Repeat(<span class=\"string\">\"It works!\"</span>);</span><br></pre></td></tr></table></figure>\n<p>缺点：</p>\n<ol>\n<li>很长时间没更新了</li>\n<li>不支持在 Mono 和 Linux 上运行。原文：<a href=\"http://zamboch.blogspot.cz/2010/04/jni4net-not-yet-on-mono-linux.html\" target=\"_blank\" rel=\"noopener\">It’s not supported at the moment, sorry</a></li>\n<li>性能一般</li>\n</ol>\n<h2 id=\"javonet\"><a href=\"#javonet\" class=\"headerlink\" title=\"javonet\"></a>javonet</h2><p>按年收费</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">GenerateRandomNumber</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> JavonetException </span>&#123;</span><br><span class=\"line\">    NObject objRandom = Javonet.New(<span class=\"string\">\"System.Random\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> value = objRandom.invoke(<span class=\"string\">\"Next\"</span>,<span class=\"number\">10</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"自己实现一个C-native-dll作为你的C-dll的代理\"><a href=\"#自己实现一个C-native-dll作为你的C-dll的代理\" class=\"headerlink\" title=\"自己实现一个C++ native dll作为你的C# dll的代理\"></a>自己实现一个C++ native dll作为你的C# dll的代理</h2><p>基本的实现思路是：</p>\n<ol>\n<li>对应你的C# dll，写一套Java版本的API。</li>\n<li>使用javah命令，将Java API翻译成对应的C++ API，并输出到对应的xxxxJNI.h文件中。</li>\n<li>创建C++ dll工程，添加xxxxJNI.h以及jdk提供的jni.h和jni_md.h，并启用clr支持。</li>\n<li>在C++ dll工程中通过managed C++调用你的C#dll，进而实现所有的C++ API。</li>\n</ol>\n<p>操作过程可参考  <a href=\"https://www.codeproject.com/Articles/378826/How-to-wrap-a-Csharp-library-for-use-in-Java\" target=\"_blank\" rel=\"noopener\">How-to-wrap-a-Csharp-library-for-use-in-Java</a> 和 <a href=\"http://www.iteye.com/topic/1133867\" target=\"_blank\" rel=\"noopener\">Java 调用 C# DLL</a>.</p>\n<h1 id=\"使用中间文件做交互\"><a href=\"#使用中间文件做交互\" class=\"headerlink\" title=\"使用中间文件做交互\"></a>使用中间文件做交互</h1><p>可以把输入和输出存到一个中间文本文件中(json, csv, txt)，让 c# 程序调用，然后输出一个文本文件。</p>\n<p>缺点：</p>\n<ol>\n<li>过程繁琐。</li>\n<li>java 和 c# 方都无法感知对方处理进度，无法方便的确定输入输出完成时间。(可以在文本结尾放置一段特殊字符作为处理结束标志)</li>\n<li>程序异常不好发现。</li>\n</ol>\n<h1 id=\"接口调用\"><a href=\"#接口调用\" class=\"headerlink\" title=\"接口调用\"></a>接口调用</h1><p>c# 将输入封装成 http 或 socket 接口，供 java 调用。c# 程序编译成 exe，在安装了 Mono 的 Linux 机器上运行，或运行在 Mono Docker 镜像中。</p>\n<hr>\n<p>参考</p>\n<blockquote>\n<p><a href=\"http://ju.outofmemory.cn/entry/153844\" target=\"_blank\" rel=\"noopener\">http://ju.outofmemory.cn/entry/153844</a></p>\n</blockquote>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj44zckse0002536unrmvk46d","tag_id":"cj44zcksh0004536u9fvwaazs","_id":"cj44zcksp0009536udb67cetv"},{"post_id":"cj44zckse0002536unrmvk46d","tag_id":"cj44zckso0007536uc21bqj26","_id":"cj44zcksp000a536ucs42oydp"},{"post_id":"cj44zcksg0003536ugg1qa8pk","tag_id":"cj44zckso0008536uabldil0y","_id":"cj44zcksp000c536ukbvzzgr9"},{"post_id":"cj44zcksl0005536ubui0mk0w","tag_id":"cj44zcksp000b536uatry2j0c","_id":"cj44zcksp000e536ue7l6haq9"},{"post_id":"cj44zcksm0006536uv8x6q1sb","tag_id":"cj44zcksp000d536uqa4zn3k7","_id":"cj44zcksp000f536ugdvqowm3"},{"post_id":"cjfxmm6rr0000jkr3wmtj0w3j","tag_id":"cj44zcksp000b536uatry2j0c","_id":"cjfxmm6rx0001jkr3w14cmw6b"},{"post_id":"cj44zckse0002536unrmvk46d","tag_id":"cj44zcksp000b536uatry2j0c","_id":"cjfxmm6sg0002jkr3cav7zrsf"}],"Tag":[{"name":"aspect","_id":"cj44zcksh0004536u9fvwaazs"},{"name":"spring","_id":"cj44zckso0007536uc21bqj26"},{"name":"github-pages","_id":"cj44zckso0008536uabldil0y"},{"name":"java","_id":"cj44zcksp000b536uatry2j0c"},{"name":"html","_id":"cj44zcksp000d536uqa4zn3k7"}]}}