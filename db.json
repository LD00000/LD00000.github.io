{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/yilia/source/main.b3331d.css","path":"main.b3331d.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/slider.445162.js","path":"slider.445162.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.b3331d.js","path":"main.b3331d.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/mobile.8d90af.js","path":"mobile.8d90af.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.3a9902.eot","path":"fonts/iconfont.3a9902.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.6e162c.woff","path":"fonts/iconfont.6e162c.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.9abe9f.svg","path":"fonts/iconfont.9abe9f.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.d0da7e.ttf","path":"fonts/iconfont.d0da7e.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"5e63ee22f77cd4f236fdf627029fa5f53b2f7bf0","modified":1497839871465},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1497858303712},{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1497858303712},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1497858303712},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1497858303712},{"_id":"themes/yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1497858303712},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1497858303712},{"_id":"themes/yilia/README.md","hash":"8444a63c50d8a7e40bb3f1f10e549a60da94a21f","modified":1497858303712},{"_id":"themes/yilia/_config.yml","hash":"26a780fb38e636e8b36058e209adbefe77a06dc5","modified":1497858303712},{"_id":"themes/yilia/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1497858303716},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1497858303720},{"_id":"source/_drafts/css.md","hash":"057168483f9482f1593e2bdad34c8afba424bcae","modified":1495440797663},{"_id":"source/_posts/aspects_are_not_applied.md","hash":"aa7b4935304db8dcc74830db698c580c4b245e81","modified":1497859128108},{"_id":"source/_posts/github-pages-jekyll.md","hash":"88248598546e3441916f768c3ed228ee071a1d2a","modified":1495440275751},{"_id":"source/_posts/random-access.md","hash":"cfe89394dd7fecd7d2edd7182a212c6493652797","modified":1495440264331},{"_id":"source/_posts/xyms.md","hash":"1e621ec00a1bdbd38175f644f353f21ffef51da0","modified":1495440324439},{"_id":"source/about/index.md","hash":"4e2b2537fa4b7557a0e6f2080f82b74fb2162848","modified":1495446239227},{"_id":"themes/yilia/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1497858303692},{"_id":"themes/yilia/.git/config","hash":"45dbf7cad960774e3ebd63f878005463a78e4c69","modified":1497858303692},{"_id":"themes/yilia/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1497857334256},{"_id":"themes/yilia/.git/index","hash":"50dd891245b2ea5bebeaa21d0296f83fcb9ea277","modified":1497858303720},{"_id":"themes/yilia/.git/packed-refs","hash":"cf41ff42218453f57f86f8bf8a37ce6b19a31ad9","modified":1497858303672},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1497858303712},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1497858303712},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1497858303712},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1497858303712},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1497858303712},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1497858303712},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1497858303712},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1497858303716},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1497858303716},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1497858303716},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1497858303716},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1497858303716},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1497858303716},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1497858303716},{"_id":"themes/yilia/source/main.b3331d.css","hash":"7d0162a4618e8026bd23779f3120c09c83197b9f","modified":1497858303720},{"_id":"themes/yilia/source/slider.445162.js","hash":"e21c3c2cf663d7a4fb0d77f43ae1a148553a7cca","modified":1497858303720},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1497858303716},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1497858303716},{"_id":"themes/yilia/source/main.b3331d.js","hash":"0e98e3674c7687ae4ff7bdcecb05e15434c46e0d","modified":1497858303720},{"_id":"themes/yilia/source/mobile.8d90af.js","hash":"cf2ab659138db5abc70e3e0d7bc64f50d48e834d","modified":1497858303720},{"_id":"themes/yilia/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1497857334256},{"_id":"themes/yilia/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1497857334256},{"_id":"themes/yilia/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1497857334256},{"_id":"themes/yilia/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1497857334256},{"_id":"themes/yilia/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1497857334256},{"_id":"themes/yilia/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1497857334256},{"_id":"themes/yilia/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1497857334256},{"_id":"themes/yilia/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1497857334256},{"_id":"themes/yilia/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1497857334256},{"_id":"themes/yilia/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1497857334256},{"_id":"themes/yilia/.git/logs/HEAD","hash":"193a7705711c487362e2745de1c97b7604f15b58","modified":1497858303692},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"143710485f734c5a997e0b1c26192bbba2982bcc","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"7547bc40b533d9db62f430c43dc0e595c9caa5b6","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"f8a42263edeeb3ccf6115cea5f96f551ed1e76e5","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"2387d91cf94b0b36e8a36841992a5fce63ebd069","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1497858303716},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1497858303716},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1497858303716},{"_id":"themes/yilia/source/fonts/iconfont.3a9902.eot","hash":"51d4e8d333ae7867915037983ea5d4b2ad971930","modified":1497858303716},{"_id":"themes/yilia/source/fonts/iconfont.6e162c.woff","hash":"709373d566526ad4bdb330757a3915e3c5e37b66","modified":1497858303716},{"_id":"themes/yilia/source/fonts/iconfont.9abe9f.svg","hash":"772383b62548e2a4fa560d589e05929b9f6f7f7b","modified":1497858303716},{"_id":"themes/yilia/source/fonts/iconfont.d0da7e.ttf","hash":"53ea5a5027a2fab93bcdad18cad6dc5f1b728726","modified":1497858303716},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1497858303716},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1497858303716},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1497858303716},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1497858303716},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1497858303716},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1497858303716},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1497858303716},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1497858303716},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1497858303716},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1497858303716},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1497858303716},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"e6e83d4863afcc589d4dd2f327e9f396f7d7b343","modified":1497858303716},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"3f5808a49a7365e3f813f78ba96b692f7ca27886","modified":1497858303716},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1497858303716},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1497858303716},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1497858303716},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1497858303716},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1497858303716},{"_id":"themes/yilia/source-src/css/main.scss","hash":"ac8c3312182519e33d0f729d157deb36e5f42894","modified":1497858303716},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1497858303716},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"a40400734c6509b9ac6e393a6681ccd8bafed5eb","modified":1497858303716},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1497858303716},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1497858303716},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1497858303716},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1497858303716},{"_id":"themes/yilia/source-src/css/social.scss","hash":"b5324302815491d0a5e63142f1ead2048ad3f72f","modified":1497858303716},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1497858303716},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1497858303716},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"17a97f7c38f5dfacc3eadf354b5826d77f1c2bdb","modified":1497858303716},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1497858303716},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1497858303716},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1497858303716},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1497858303716},{"_id":"themes/yilia/source-src/js/fix.js","hash":"9591a0f61236a56b2a15a541f572bcfd93823a0f","modified":1497858303716},{"_id":"themes/yilia/source-src/js/main.js","hash":"d665f4cf30450984591bc8ad2348a1baf720d04b","modified":1497858303716},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1497858303716},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1497858303716},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1497858303716},{"_id":"themes/yilia/source-src/js/slider.js","hash":"3bf0d70ae171404a0dc73c33ec48927fc2521a54","modified":1497858303716},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1497858303716},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"808a2e1ed407984cfdc929b827d3638f70ec9a2a","modified":1497858303716},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"6160c13783a7f31dab4fdcc6b752b3a368586d67","modified":1497858303716},{"_id":"themes/yilia/.git/objects/pack/pack-149e73dd21ac165412f3146538f0edfe9cab3b36.idx","hash":"b5c96f156ea151d3839346b96cf9478dc0c7e181","modified":1497858303592},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"c2dccf1a95ec09ceeee5004293ac7edb7e1c9a66","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"9f9fa4f8b0de5f87a9494fd0cb5064502a5d5ef5","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"341103df70d0b476e3acd0afbc507a4a120d8f5f","modified":1497858303712},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1497858303716},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1497858303716},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1497858303716},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1497858303716},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1497858303716},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1497858303716},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1497858303716},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1497858303716},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"51d4e8d333ae7867915037983ea5d4b2ad971930","modified":1497858303716},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"709373d566526ad4bdb330757a3915e3c5e37b66","modified":1497858303716},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"53ea5a5027a2fab93bcdad18cad6dc5f1b728726","modified":1497858303716},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"772383b62548e2a4fa560d589e05929b9f6f7f7b","modified":1497858303716},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1497858303716},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1497858303716},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1497858303716},{"_id":"themes/yilia/.git/refs/heads/master","hash":"597a0d14c701a189e5d74eaa70341e78e3ad7c80","modified":1497858303692},{"_id":"themes/yilia/.git/logs/refs/heads/master","hash":"193a7705711c487362e2745de1c97b7604f15b58","modified":1497858303692},{"_id":"themes/yilia/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1497858303672},{"_id":"themes/yilia/.git/logs/refs/remotes/origin/HEAD","hash":"193a7705711c487362e2745de1c97b7604f15b58","modified":1497858303692},{"_id":"themes/yilia/.git/objects/pack/pack-149e73dd21ac165412f3146538f0edfe9cab3b36.pack","hash":"ac7f9af6c96969bf7610ba6c41a96860378baac3","modified":1497858303592}],"Category":[],"Data":[],"Page":[{"layout":"page","_content":"\n## ld000\n\n<i class=\"fa fa-envelope-open-o\"></i> Email: [lidong9144@163.com]()\n<i class=\"fa fa-github\" aria-hidden=\"true\"></i> Github: [ld000](https://github.com/ld000)\n","source":"about/index.md","raw":"---\nlayout: page\n---\n\n## ld000\n\n<i class=\"fa fa-envelope-open-o\"></i> Email: [lidong9144@163.com]()\n<i class=\"fa fa-github\" aria-hidden=\"true\"></i> Github: [ld000](https://github.com/ld000)\n","date":"2017-05-22T09:43:59.227Z","updated":"2017-05-22T09:43:59.227Z","path":"about/index.html","title":"","comments":1,"_id":"cj43vzq160001np6u8shy0cpn","content":"<h2 id=\"ld000\"><a href=\"#ld000\" class=\"headerlink\" title=\"ld000\"></a>ld000</h2><p><i class=\"fa fa-envelope-open-o\"></i> Email: <a href=\"\">lidong9144@163.com</a><br><i class=\"fa fa-github\" aria-hidden=\"true\"></i> Github: <a href=\"https://github.com/ld000\" target=\"_blank\" rel=\"external\">ld000</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"ld000\"><a href=\"#ld000\" class=\"headerlink\" title=\"ld000\"></a>ld000</h2><p><i class=\"fa fa-envelope-open-o\"></i> Email: <a href=\"\">lidong9144@163.com</a><br><i class=\"fa fa-github\" aria-hidden=\"true\"></i> Github: <a href=\"https://github.com/ld000\" target=\"_blank\" rel=\"external\">ld000</a></p>\n"}],"Post":[{"title":"css","date":"2017-05-22T08:02:16.000Z","layout":"false","_content":"![](http://upload-images.jianshu.io/upload_images/1768578-678f35e772132a47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```css\nfont-family: Helvetica, Arial, sans-serif;\nfont-size: 60px;\ntext-transform: uppercase;  // 大写\ntext-decoration: underline;  // 下划线\ncolor: #8001ff;\n```\n---\n\n![](http://upload-images.jianshu.io/upload_images/1768578-ae3d31ed146b7798.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```css\nborder: 5px dashed salmon;\nborder-radius: 5px;\ncursor: pointer;\nbox-shadow: 5px 5px 20px #ccc;\n```\n\n---\n\n```css\ndisplay: block;  // 块元素\ndisplay: inline;  // 内联元素\n```\n`inline`, `weight` 和 `height` 无效。\n\n---\n\n```css\nbox-sizing: border-box;  // width 计算 padding 和 border\n-webkit-box-sizing: border-box;\n-moz-box-sizing: border-box;\n-ms-box-sizing: border-box;\n```\n\n---\n\n![](http://upload-images.jianshu.io/upload_images/1768578-470c41345887b0a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```css\ntext-align: justify;  // 左右对齐\n```\n\n---\n\n垂直对齐\n\n```css\nvertical-align: top;\nvertical-align: bottom;\nvertical-align: middle;\n```\n\n---\n\n行高\n\n```css\nline-height:1.2;\nline-height:19.2px;\nline-height:120%;\n```\n\n---\n\n居中对齐\n\n```css\nmargin: 0 auto;\n```\n\n---\n\n```css\noutline: 1px solid red  !important;  // border 外框，outline是不占空间的，既不会增加额外的width或者height，边框占用宽度\n```\n\n---\n\n```css\n@media only screen and (max-width: 300px) {\n  /* style */\n}\n```\n\n---\n\n```css\nimg,\nembed,\nobject,\nvideo {\n  max-width: 100%;\n}\n```\n\n---\n\n手指大约 40px，小屏按钮最小设置为 48 * 48px，两个之间最好空 40px\n\n```css\nmin-height: 48px;\nmin-width: 48px;\n```\n\n---\n\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n```\n\n---\n\n```css\npadding: 1.5em inhenit;\n```\n\n---\n\n```css\ndisplay: flex;\nflex-wrap: wrap;\n```\n\n---\n\n```\ncalc(100px - 10%)\n *有效，* calc(100px-10%)\n *则无效\n```\n\n---\n\n```css\n`!important` 优先级最高\n\n.testClass{\n  color:blue !important;\n}\n```\n\n---\n\n你是否注意到，将 height\n 和 width\n 设置为 100vmax\n 或 100vmin\n 会如何改变图片的宽高比？它会将你的图片压缩成正方形，所以，如果你想要保留其他宽高比，请小心！\n\n---\n\n# 压缩、优化和自动化\n开始编写你自己的自动化 ImageMagick 或 ImageOptim 工具前，你需要安装 [Node.js](https://nodejs.org/en/download/) 和 [npm](https://docs.npmjs.com/getting-started/installing-node)。 ImageMagick:\n[ImageMagick](http://www.imagemagick.org/)\n[Mac 上的一个简单的 ImageMagick 安装包](http://cactuslab.com/imagemagick/)\n[GraphicsMagick](http://www.graphicsmagick.org/) (ImageMagick 的一个分叉)\n\nGrunt:\n[Grunt 简介](http://gruntjs.com/getting-started)\n[Grunt 使用入门](http://24ways.org/2013/grunt-is-not-weird-and-hard/)\n[用 Grunt 生成不同分辨率的图片](http://addyosmani.com/blog/generate-multi-resolution-images-for-srcset-with-grunt/)\n[用于生成多张图片的 grunt-responsive-images 插件](https://github.com/andismith/grunt-responsive-images)\n[用于响应式图片工作流的 grunt-respimg 插件](https://www.npmjs.com/package/grunt-respimg)\n\n脚本编制示例中使用的文件：\n[convert.sh](http://udacity.github.io/responsive-images/convert.sh) (含说明)\n[Gruntfile.js](http://udacity.github.io/responsive-images/Gruntfile.js) (对于 Windows，移除第 7 行：engine: 'im',\n)\n[Imager.js](https://github.com/BBC-News/Imager.js/)：为 BBC 新闻开发的响应式图片加载。\n\n图片处理工具：\n[ImageOptim](http://imageoptim.com/) (Mac)\n[Trimage](http://trimage.org/) - 和 ImageOptim 类似 (Windows, Mac, Linux)\n[ImageAlpha](https://github.com/pornel/ImageAlpha)\n\n# 图片压缩\n[PageSpeed Insights 示例](https://developers.google.com/speed/pagespeed/insights/?url=simpl.info%2Fcssfilters)\n[Grunt PageSpeed 插件](https://www.npmjs.com/package/grunt-pagespeed)\n[PageSpeed Node module](https://github.com/addyosmani/psi/)\n[cURL 示例](http://www.thegeekstuff.com/2012/04/curl-examples/)\n[PageSpeed Insights Node module](https://github.com/addyosmani/psi/)\n\n练习: 项目第 1 部分\n请从 [此处](http://udacity.github.io/responsive-images/downloads/RI-Project-Part-1-Start.zip)下载项目文档。*\n*请确保通过 localhost 运行项目。* 对于 Mac/Linux，请 cd\n 至工作目录并设置一个[简单的 HTTP 服务器](http://www.linuxjournal.com/content/tech-tip-really-simple-http-server-python)。对于 Windows，请参见下文。\nMake sure you are running the [Udacity Feedback Chrome Extension](https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi) to get feedback. 确保你已经安装了[优达学城前端反馈插件](https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi)。\n*打开控制台，看看图片的总体积！*\n[了解更多有关 figure 标签的信息！](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure)\n\n# 性能\n延迟会什么会成为新的瓶颈？[看看 Ilya ](http://chimera.labs.oreilly.com/books/1230000000545/ch10.html#MORE_BANDWIDTH_DOESNT_MATTER_MUCH)在*高性能浏览器网络*中有什么要说的。请注意缩短延迟如何不断改善页面加载时间，而使带宽的图表趋于平缓：\n![graph about latency](http://upload-images.jianshu.io/upload_images/1768578-826454c6055633cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n要减少图片下载次数，你也可以使用 [CSS 图片精灵](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/CSS_Image_Sprites)或[响应式精灵](http://blog.brianjohnsondesign.com/responsive-background-image-sprites-css-tutorial/%EF%BC%89%E3%80%82[%E7%B2%BE%E7%81%B5%E9%A1%B5](https://www.google.co.uk/images/nav_logo195.png) 图片组合了大量图片，这些图片可以通过将精灵页设置为元素背景，然后通过 CSS 调整背景位置来单独显示。此技巧对图标和其他重复图形尤为有用。\n**无论你采用何种技巧来避免延迟，都请注意 HTTP/2 带来的更改。**\n简单地说，HTTP/2 表示请求多个文件的成本更小：准备停止使用脚本编写、连接和其他 HTTP/1 技巧！\n如需了解更多信息，请查看[面向前端 Web 开发的 HTTP2](https://mattwilcox.net/web-development/http2-for-front-end-web-developers)。\n\n---\n\nCSS 背景图片\n[Div with background image](http://udacity.github.io/responsive-images/examples/2-06/divWithBackgroundImage)\n[CSS background-size: cover](http://udacity.github.io/responsive-images/examples/2-06/backgroundSizeCover)\n[Body with background image](http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImage)\n[Body with background image and gradient](http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImageAndGradient)\n[Body with elaborate background using only CSS](http://udacity.github.io/responsive-images/examples/2-06/bodyWithElaboratePatternPureCSS)\n[Using CSS background images for conditional image display](http://udacity.github.io/responsive-images/examples/2-06/backgroundImageConditional)\n[Using CSS background images for alternative images](http://udacity.github.io/responsive-images/examples/2-06/backgroundImageAlternative)\n[image-set()](http://udacity.github.io/responsive-images/examples/2-06/imageSet)\n\n---\n\n```css\nbackground-color: cover;\nbackground-color: contain;\n```\n\n---\n\n符号字符\n例子：[Unicode 代替图片](http://udacity.github.io/responsive-images/examples/2-08/unicodeStar)\n[Unicode 字符集](http://unicode-table.com/en/sets/)\n[Unicode 符号集合](http://en.wikipedia.org/wiki/List_of_Unicode_characters)\n\n---\n\n图标字体\n[Zocial](http://zocial.smcllns.com/)\n[Font Awesome](http://fortawesome.github.io/Font-Awesome/)\n[We Love Icon Fonts!](http://weloveiconfonts.com/)\n[Icon fonts on CSS-Tricks](https://css-tricks.com/examples/IconFont/)\n\n---\n\nSVG 和数据 URI 行内图片\n例子：\n[SVG Data URI in HTML](http://udacity.github.io/responsive-images/examples/2-11/svgDataUri)\n\n[SVG Data URI in CSS](http://udacity.github.io/responsive-images/examples/2-11/svgDataUriCss)\n\n[SVG text on a path](http://udacity.github.io/responsive-images/examples/2-11/svgTextOnAPath)\n\n[SVG optimized and unoptimized](http://udacity.github.io/responsive-images/examples/2-11/svgUnoptimisedAndOptimised)\n\n---\n\n示例：\n[srcset with w values](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues)\n[srcset with w values, 50vw](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw)\n\n---\n\nSizes 属性\n示例：\n[srcset with w values](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues)\n[srcset with w values, 50vw](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw)\n\n---\n\nsrcset 和 sizes 练习\n我想总结你刚刚学习的关于图片属性 srcset\n 和 sizes\n 的内容。 你可以借此机会先详细了解每个属性的语法，然后在下面两道测试题中，在真正的页面上尝试使用它们。\n在本测试题中，你将尝试使用 srcset\n。在下一道测试题中，你将添加 sizes\n，以便为浏览器提供更多信息。\n语法\nsrcset\n 有两种自定义方式，一种使用 x\n 来区分设备像素比 (DPR)，另一种使用 w\n 来描述图像的宽度。\n对设备像素比的反应\n<img src=\"image_2x.jpg\" srcset=\"image_2x.jpg 2x, image_1x.jpg 1x\" alt=\"a cool image\">\n\n将 srcset\n 设置为与逗号分隔的一连串 filename multiplier\n 对相等，其中每个 multiplier\n 必须是后跟 x\n 的整数。\n例如，1x\n 表示 1 倍显示屏，2x\n 表示像素密度为两倍的显示屏，如 Apple 的 Retina 显示屏。\n浏览器会下载与其 DPR 对应的最佳图片。\n另请注意，有一个作为备用的 src\n 属性。\n对图片宽度的反应\n<img src=\"image_200.jpg\" srcset=\"image_200.jpg 200w, image_100.jpg 100w\" alt=\"a cool image\">\n\n将 srcset\n 设置为与逗号分隔的一连串 filename widthDescriptor\n 对相等，其中每个 widthDescriptor\n 都以像素为测量单位， 并且必须是后跟 w\n 的整数。在这里，widthDescriptor\n 指定每个图片文件的自然宽度，使浏览器能够根据窗口大小和 DPR 选择要请求的最适当的图片。 （如果没有 widthDescriptor\n，浏览器需要下载图片才能知道其宽度！）\n另请注意，有一个作为备用的 src\n 属性。\n准备好尝试一下？单击“继续”试试吧！\n\nHere are my finished image tags:\nDPR (海牙)\n<img class=\"dpi\" src=\"images/Den_Haag_2x.jpg\" srcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x\" alt=\"Den Haag Skyline\">\n\n请注意我如何获得 src\n 作为备份。srcset\n 中的来源顺序无关紧要。此外，如果你遗漏了乘数，它将默认为 1x\n，也就是说，\nsrcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x\"\n\n等同于：\nsrcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg\"\n\n图片宽度（澳大利亚）\n<img class=\"w\" src=\"images/Australia_1280w.jpg\" srcset=\"images/Australia_1280w.jpg 1280w, images/Australia_640w.jpg 640w\" alt=\"Australia from Space\">\n\n同样地，会出现 src\n 备份，你可以切换 srcset\n 中的图片顺序。\n\n包含大小的图片宽度\n如果图片不以全窗口宽度显示会怎样？那么，除了 srcset\n 外，你还需要其他元素（假设图片将为全窗口宽度）\n向包含媒体查询的图片添加一个 sizes\n 属性和一个 vw\n 值。srcset\n 和 sizes\n 合起来可让浏览器知道图片的自然宽度以及图片相对于窗口宽度的显示宽度。 知道图片的显示宽度和可用图片文件的宽度后，浏览器将获得下载具有满足其需求的适当分辨率且尽可能小的图片所需的信息。 而且，浏览器在页面加载初期，解析 HTML 时即可做出此选择。\nsrcset 与 sizes 配合使用的语法\n这里是一个示例：\n<img src=\"images/great_pic_800.jpg\" sizes=\"(max-width: 400px) 100vw, (min-width: 401px) 50vw\" srcset=\"images/great_pic_400.jpg 400w, images/great_pic_800.jpg 800w\" alt=\"great picture\">\n\nsizes\n 由以逗号分隔的 mediaQuery width\n 对组成。sizes\n 会在加载流程初期告诉浏览器，该图片会在点击 mediaQuery\n 时以某个 width\n 显示。\n实际上，如果 sizes\n 缺失，浏览器会将 sizes\n 默认为 100vw\n，表示它预计图片将以全窗口宽度显示。\nsizes\n 会为浏览器额外提供一条信息，以确保它根据图片的最终显示宽度下载正确的图片文件。说明一下，它实际上*不会*调整图片的大小 - 这是 CSS 的工作。\n在本示例中，如果浏览器的窗口宽度等于或小于 400 像素，浏览器知道图片将为全窗口宽度；如果窗口宽度大于 400 像素，则为一半窗口宽度。浏览器知道它具有两个图片选项 - 一个具有 400 像素的自然宽度，另一个具有 800 像素。\n准备好帮助浏览器了？单击“继续”亲自试试吧！\n\n这里是我已完成的图片标记：\n<img class=\"w\" src=\"images/Coffee_1280w.jpg\" srcset=\"images/Coffee_1280w.jpg 1280w, images/Coffee_640w.jpg 640w\" sizes=\"(max-width: 960px) 50vw, 100vw\" alt=\"Coffee by Amy March from Turkey\">\n\n我没有在 sizes\n 中包括第二个媒体查询，因为如果没有媒体查询，列出的宽度会被视为默认值。\n另外请注意，sizes\n 中的媒体查询与 CSS 匹配。说明一下，更改 sizes\n 不会影响 CSS。它只会提醒浏览器注意最终需要在该处显示的图片。\n\n---\n\n网络广播从最初在系统上设置 Grunt 开始， 一直讲到设置完整的项目流程。\n此处链接为 [关于此网络广播的详细论坛文章 ](https://discussions.udacity.com/t/grunt-and-setting-up-a-grunt-workflow-intermediate/21984)。 文章中包含对 Grunt 安装配置和设置任务 的相关向导。\n此处链接为 [在网络广播中使用的 GitHub 存储库 ](https://github.com/JohnUdacity/grunt-workflow-guide)。\n有关网络广播的详细整理，请访问 [此处](https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp).\n\n---\n\n设置 Gulp 工作流演示（概要）\n由学习教练 John 主讲，有关如何设置 Gulp 的现场演示。\nGulp 可代替前端开发人员完成所有必需的繁琐、 重复性任务：压缩、串联、lint 操作、 图像优化、Git 提交等多种任务， 都可以交由 Gulp 来实现。从而让你能够集中精力处理重要任务，也就是 编写代码。\n网络广播从最初在系统上设置 Gulp 开始， 一直讲到设置完整的项目流程。\n要查看网络广播的详细概要（包括代码 段），请参阅此 [论坛 文章](https://discussions.udacity.com/t/gulp-and-setting-up-a-gulp-workflow-intermediate/24359).\n如果想要跟随演示学习，请在 [此存储库](https://github.com/JohnUdacity/gulp-start) 中下载起始代码。\n有关网络广播的详细整理，请访问 [此处](https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp).\n","source":"_drafts/css.md","raw":"---\ntitle: css\ndate: 2017-05-22 16:02:16\ntags:\nlayout: false\n---\n![](http://upload-images.jianshu.io/upload_images/1768578-678f35e772132a47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```css\nfont-family: Helvetica, Arial, sans-serif;\nfont-size: 60px;\ntext-transform: uppercase;  // 大写\ntext-decoration: underline;  // 下划线\ncolor: #8001ff;\n```\n---\n\n![](http://upload-images.jianshu.io/upload_images/1768578-ae3d31ed146b7798.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```css\nborder: 5px dashed salmon;\nborder-radius: 5px;\ncursor: pointer;\nbox-shadow: 5px 5px 20px #ccc;\n```\n\n---\n\n```css\ndisplay: block;  // 块元素\ndisplay: inline;  // 内联元素\n```\n`inline`, `weight` 和 `height` 无效。\n\n---\n\n```css\nbox-sizing: border-box;  // width 计算 padding 和 border\n-webkit-box-sizing: border-box;\n-moz-box-sizing: border-box;\n-ms-box-sizing: border-box;\n```\n\n---\n\n![](http://upload-images.jianshu.io/upload_images/1768578-470c41345887b0a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```css\ntext-align: justify;  // 左右对齐\n```\n\n---\n\n垂直对齐\n\n```css\nvertical-align: top;\nvertical-align: bottom;\nvertical-align: middle;\n```\n\n---\n\n行高\n\n```css\nline-height:1.2;\nline-height:19.2px;\nline-height:120%;\n```\n\n---\n\n居中对齐\n\n```css\nmargin: 0 auto;\n```\n\n---\n\n```css\noutline: 1px solid red  !important;  // border 外框，outline是不占空间的，既不会增加额外的width或者height，边框占用宽度\n```\n\n---\n\n```css\n@media only screen and (max-width: 300px) {\n  /* style */\n}\n```\n\n---\n\n```css\nimg,\nembed,\nobject,\nvideo {\n  max-width: 100%;\n}\n```\n\n---\n\n手指大约 40px，小屏按钮最小设置为 48 * 48px，两个之间最好空 40px\n\n```css\nmin-height: 48px;\nmin-width: 48px;\n```\n\n---\n\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n```\n\n---\n\n```css\npadding: 1.5em inhenit;\n```\n\n---\n\n```css\ndisplay: flex;\nflex-wrap: wrap;\n```\n\n---\n\n```\ncalc(100px - 10%)\n *有效，* calc(100px-10%)\n *则无效\n```\n\n---\n\n```css\n`!important` 优先级最高\n\n.testClass{\n  color:blue !important;\n}\n```\n\n---\n\n你是否注意到，将 height\n 和 width\n 设置为 100vmax\n 或 100vmin\n 会如何改变图片的宽高比？它会将你的图片压缩成正方形，所以，如果你想要保留其他宽高比，请小心！\n\n---\n\n# 压缩、优化和自动化\n开始编写你自己的自动化 ImageMagick 或 ImageOptim 工具前，你需要安装 [Node.js](https://nodejs.org/en/download/) 和 [npm](https://docs.npmjs.com/getting-started/installing-node)。 ImageMagick:\n[ImageMagick](http://www.imagemagick.org/)\n[Mac 上的一个简单的 ImageMagick 安装包](http://cactuslab.com/imagemagick/)\n[GraphicsMagick](http://www.graphicsmagick.org/) (ImageMagick 的一个分叉)\n\nGrunt:\n[Grunt 简介](http://gruntjs.com/getting-started)\n[Grunt 使用入门](http://24ways.org/2013/grunt-is-not-weird-and-hard/)\n[用 Grunt 生成不同分辨率的图片](http://addyosmani.com/blog/generate-multi-resolution-images-for-srcset-with-grunt/)\n[用于生成多张图片的 grunt-responsive-images 插件](https://github.com/andismith/grunt-responsive-images)\n[用于响应式图片工作流的 grunt-respimg 插件](https://www.npmjs.com/package/grunt-respimg)\n\n脚本编制示例中使用的文件：\n[convert.sh](http://udacity.github.io/responsive-images/convert.sh) (含说明)\n[Gruntfile.js](http://udacity.github.io/responsive-images/Gruntfile.js) (对于 Windows，移除第 7 行：engine: 'im',\n)\n[Imager.js](https://github.com/BBC-News/Imager.js/)：为 BBC 新闻开发的响应式图片加载。\n\n图片处理工具：\n[ImageOptim](http://imageoptim.com/) (Mac)\n[Trimage](http://trimage.org/) - 和 ImageOptim 类似 (Windows, Mac, Linux)\n[ImageAlpha](https://github.com/pornel/ImageAlpha)\n\n# 图片压缩\n[PageSpeed Insights 示例](https://developers.google.com/speed/pagespeed/insights/?url=simpl.info%2Fcssfilters)\n[Grunt PageSpeed 插件](https://www.npmjs.com/package/grunt-pagespeed)\n[PageSpeed Node module](https://github.com/addyosmani/psi/)\n[cURL 示例](http://www.thegeekstuff.com/2012/04/curl-examples/)\n[PageSpeed Insights Node module](https://github.com/addyosmani/psi/)\n\n练习: 项目第 1 部分\n请从 [此处](http://udacity.github.io/responsive-images/downloads/RI-Project-Part-1-Start.zip)下载项目文档。*\n*请确保通过 localhost 运行项目。* 对于 Mac/Linux，请 cd\n 至工作目录并设置一个[简单的 HTTP 服务器](http://www.linuxjournal.com/content/tech-tip-really-simple-http-server-python)。对于 Windows，请参见下文。\nMake sure you are running the [Udacity Feedback Chrome Extension](https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi) to get feedback. 确保你已经安装了[优达学城前端反馈插件](https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi)。\n*打开控制台，看看图片的总体积！*\n[了解更多有关 figure 标签的信息！](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure)\n\n# 性能\n延迟会什么会成为新的瓶颈？[看看 Ilya ](http://chimera.labs.oreilly.com/books/1230000000545/ch10.html#MORE_BANDWIDTH_DOESNT_MATTER_MUCH)在*高性能浏览器网络*中有什么要说的。请注意缩短延迟如何不断改善页面加载时间，而使带宽的图表趋于平缓：\n![graph about latency](http://upload-images.jianshu.io/upload_images/1768578-826454c6055633cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n要减少图片下载次数，你也可以使用 [CSS 图片精灵](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/CSS_Image_Sprites)或[响应式精灵](http://blog.brianjohnsondesign.com/responsive-background-image-sprites-css-tutorial/%EF%BC%89%E3%80%82[%E7%B2%BE%E7%81%B5%E9%A1%B5](https://www.google.co.uk/images/nav_logo195.png) 图片组合了大量图片，这些图片可以通过将精灵页设置为元素背景，然后通过 CSS 调整背景位置来单独显示。此技巧对图标和其他重复图形尤为有用。\n**无论你采用何种技巧来避免延迟，都请注意 HTTP/2 带来的更改。**\n简单地说，HTTP/2 表示请求多个文件的成本更小：准备停止使用脚本编写、连接和其他 HTTP/1 技巧！\n如需了解更多信息，请查看[面向前端 Web 开发的 HTTP2](https://mattwilcox.net/web-development/http2-for-front-end-web-developers)。\n\n---\n\nCSS 背景图片\n[Div with background image](http://udacity.github.io/responsive-images/examples/2-06/divWithBackgroundImage)\n[CSS background-size: cover](http://udacity.github.io/responsive-images/examples/2-06/backgroundSizeCover)\n[Body with background image](http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImage)\n[Body with background image and gradient](http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImageAndGradient)\n[Body with elaborate background using only CSS](http://udacity.github.io/responsive-images/examples/2-06/bodyWithElaboratePatternPureCSS)\n[Using CSS background images for conditional image display](http://udacity.github.io/responsive-images/examples/2-06/backgroundImageConditional)\n[Using CSS background images for alternative images](http://udacity.github.io/responsive-images/examples/2-06/backgroundImageAlternative)\n[image-set()](http://udacity.github.io/responsive-images/examples/2-06/imageSet)\n\n---\n\n```css\nbackground-color: cover;\nbackground-color: contain;\n```\n\n---\n\n符号字符\n例子：[Unicode 代替图片](http://udacity.github.io/responsive-images/examples/2-08/unicodeStar)\n[Unicode 字符集](http://unicode-table.com/en/sets/)\n[Unicode 符号集合](http://en.wikipedia.org/wiki/List_of_Unicode_characters)\n\n---\n\n图标字体\n[Zocial](http://zocial.smcllns.com/)\n[Font Awesome](http://fortawesome.github.io/Font-Awesome/)\n[We Love Icon Fonts!](http://weloveiconfonts.com/)\n[Icon fonts on CSS-Tricks](https://css-tricks.com/examples/IconFont/)\n\n---\n\nSVG 和数据 URI 行内图片\n例子：\n[SVG Data URI in HTML](http://udacity.github.io/responsive-images/examples/2-11/svgDataUri)\n\n[SVG Data URI in CSS](http://udacity.github.io/responsive-images/examples/2-11/svgDataUriCss)\n\n[SVG text on a path](http://udacity.github.io/responsive-images/examples/2-11/svgTextOnAPath)\n\n[SVG optimized and unoptimized](http://udacity.github.io/responsive-images/examples/2-11/svgUnoptimisedAndOptimised)\n\n---\n\n示例：\n[srcset with w values](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues)\n[srcset with w values, 50vw](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw)\n\n---\n\nSizes 属性\n示例：\n[srcset with w values](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues)\n[srcset with w values, 50vw](http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw)\n\n---\n\nsrcset 和 sizes 练习\n我想总结你刚刚学习的关于图片属性 srcset\n 和 sizes\n 的内容。 你可以借此机会先详细了解每个属性的语法，然后在下面两道测试题中，在真正的页面上尝试使用它们。\n在本测试题中，你将尝试使用 srcset\n。在下一道测试题中，你将添加 sizes\n，以便为浏览器提供更多信息。\n语法\nsrcset\n 有两种自定义方式，一种使用 x\n 来区分设备像素比 (DPR)，另一种使用 w\n 来描述图像的宽度。\n对设备像素比的反应\n<img src=\"image_2x.jpg\" srcset=\"image_2x.jpg 2x, image_1x.jpg 1x\" alt=\"a cool image\">\n\n将 srcset\n 设置为与逗号分隔的一连串 filename multiplier\n 对相等，其中每个 multiplier\n 必须是后跟 x\n 的整数。\n例如，1x\n 表示 1 倍显示屏，2x\n 表示像素密度为两倍的显示屏，如 Apple 的 Retina 显示屏。\n浏览器会下载与其 DPR 对应的最佳图片。\n另请注意，有一个作为备用的 src\n 属性。\n对图片宽度的反应\n<img src=\"image_200.jpg\" srcset=\"image_200.jpg 200w, image_100.jpg 100w\" alt=\"a cool image\">\n\n将 srcset\n 设置为与逗号分隔的一连串 filename widthDescriptor\n 对相等，其中每个 widthDescriptor\n 都以像素为测量单位， 并且必须是后跟 w\n 的整数。在这里，widthDescriptor\n 指定每个图片文件的自然宽度，使浏览器能够根据窗口大小和 DPR 选择要请求的最适当的图片。 （如果没有 widthDescriptor\n，浏览器需要下载图片才能知道其宽度！）\n另请注意，有一个作为备用的 src\n 属性。\n准备好尝试一下？单击“继续”试试吧！\n\nHere are my finished image tags:\nDPR (海牙)\n<img class=\"dpi\" src=\"images/Den_Haag_2x.jpg\" srcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x\" alt=\"Den Haag Skyline\">\n\n请注意我如何获得 src\n 作为备份。srcset\n 中的来源顺序无关紧要。此外，如果你遗漏了乘数，它将默认为 1x\n，也就是说，\nsrcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x\"\n\n等同于：\nsrcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg\"\n\n图片宽度（澳大利亚）\n<img class=\"w\" src=\"images/Australia_1280w.jpg\" srcset=\"images/Australia_1280w.jpg 1280w, images/Australia_640w.jpg 640w\" alt=\"Australia from Space\">\n\n同样地，会出现 src\n 备份，你可以切换 srcset\n 中的图片顺序。\n\n包含大小的图片宽度\n如果图片不以全窗口宽度显示会怎样？那么，除了 srcset\n 外，你还需要其他元素（假设图片将为全窗口宽度）\n向包含媒体查询的图片添加一个 sizes\n 属性和一个 vw\n 值。srcset\n 和 sizes\n 合起来可让浏览器知道图片的自然宽度以及图片相对于窗口宽度的显示宽度。 知道图片的显示宽度和可用图片文件的宽度后，浏览器将获得下载具有满足其需求的适当分辨率且尽可能小的图片所需的信息。 而且，浏览器在页面加载初期，解析 HTML 时即可做出此选择。\nsrcset 与 sizes 配合使用的语法\n这里是一个示例：\n<img src=\"images/great_pic_800.jpg\" sizes=\"(max-width: 400px) 100vw, (min-width: 401px) 50vw\" srcset=\"images/great_pic_400.jpg 400w, images/great_pic_800.jpg 800w\" alt=\"great picture\">\n\nsizes\n 由以逗号分隔的 mediaQuery width\n 对组成。sizes\n 会在加载流程初期告诉浏览器，该图片会在点击 mediaQuery\n 时以某个 width\n 显示。\n实际上，如果 sizes\n 缺失，浏览器会将 sizes\n 默认为 100vw\n，表示它预计图片将以全窗口宽度显示。\nsizes\n 会为浏览器额外提供一条信息，以确保它根据图片的最终显示宽度下载正确的图片文件。说明一下，它实际上*不会*调整图片的大小 - 这是 CSS 的工作。\n在本示例中，如果浏览器的窗口宽度等于或小于 400 像素，浏览器知道图片将为全窗口宽度；如果窗口宽度大于 400 像素，则为一半窗口宽度。浏览器知道它具有两个图片选项 - 一个具有 400 像素的自然宽度，另一个具有 800 像素。\n准备好帮助浏览器了？单击“继续”亲自试试吧！\n\n这里是我已完成的图片标记：\n<img class=\"w\" src=\"images/Coffee_1280w.jpg\" srcset=\"images/Coffee_1280w.jpg 1280w, images/Coffee_640w.jpg 640w\" sizes=\"(max-width: 960px) 50vw, 100vw\" alt=\"Coffee by Amy March from Turkey\">\n\n我没有在 sizes\n 中包括第二个媒体查询，因为如果没有媒体查询，列出的宽度会被视为默认值。\n另外请注意，sizes\n 中的媒体查询与 CSS 匹配。说明一下，更改 sizes\n 不会影响 CSS。它只会提醒浏览器注意最终需要在该处显示的图片。\n\n---\n\n网络广播从最初在系统上设置 Grunt 开始， 一直讲到设置完整的项目流程。\n此处链接为 [关于此网络广播的详细论坛文章 ](https://discussions.udacity.com/t/grunt-and-setting-up-a-grunt-workflow-intermediate/21984)。 文章中包含对 Grunt 安装配置和设置任务 的相关向导。\n此处链接为 [在网络广播中使用的 GitHub 存储库 ](https://github.com/JohnUdacity/grunt-workflow-guide)。\n有关网络广播的详细整理，请访问 [此处](https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp).\n\n---\n\n设置 Gulp 工作流演示（概要）\n由学习教练 John 主讲，有关如何设置 Gulp 的现场演示。\nGulp 可代替前端开发人员完成所有必需的繁琐、 重复性任务：压缩、串联、lint 操作、 图像优化、Git 提交等多种任务， 都可以交由 Gulp 来实现。从而让你能够集中精力处理重要任务，也就是 编写代码。\n网络广播从最初在系统上设置 Gulp 开始， 一直讲到设置完整的项目流程。\n要查看网络广播的详细概要（包括代码 段），请参阅此 [论坛 文章](https://discussions.udacity.com/t/gulp-and-setting-up-a-gulp-workflow-intermediate/24359).\n如果想要跟随演示学习，请在 [此存储库](https://github.com/JohnUdacity/gulp-start) 中下载起始代码。\n有关网络广播的详细整理，请访问 [此处](https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp).\n","slug":"css","published":0,"updated":"2017-05-22T08:13:17.663Z","comments":1,"photos":[],"link":"","_id":"cj43vzq120000np6uggkegx5h","content":"<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-678f35e772132a47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">font-family: Helvetica, Arial, sans-serif;</div><div class=\"line\">font-size: 60px;</div><div class=\"line\">text-transform: uppercase;  // 大写</div><div class=\"line\">text-decoration: underline;  // 下划线</div><div class=\"line\">color: #8001ff;</div></pre></td></tr></table></figure>\n<hr>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-ae3d31ed146b7798.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">border</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">dashed</span> <span class=\"selector-tag\">salmon</span>;</div><div class=\"line\"><span class=\"selector-tag\">border-radius</span>: 5<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</div><div class=\"line\"><span class=\"selector-tag\">box-shadow</span>: 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> 20<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#ccc</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">display: block;  // 块元素</div><div class=\"line\">display: inline;  // 内联元素</div></pre></td></tr></table></figure>\n<p><code>inline</code>, <code>weight</code> 和 <code>height</code> 无效。</p>\n<hr>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">box-sizing: border-box;  // width 计算 padding 和 border</div><div class=\"line\">-webkit-box-sizing: border-box;</div><div class=\"line\">-moz-box-sizing: border-box;</div><div class=\"line\">-ms-box-sizing: border-box;</div></pre></td></tr></table></figure>\n<hr>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-470c41345887b0a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">text-align: justify;  // 左右对齐</div></pre></td></tr></table></figure>\n<hr>\n<p>垂直对齐</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">top</span>;</div><div class=\"line\"><span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">bottom</span>;</div><div class=\"line\"><span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">middle</span>;</div></pre></td></tr></table></figure>\n<hr>\n<p>行高</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">line-height</span><span class=\"selector-pseudo\">:1.2</span>;</div><div class=\"line\"><span class=\"selector-tag\">line-height</span><span class=\"selector-pseudo\">:19.2px</span>;</div><div class=\"line\"><span class=\"selector-tag\">line-height</span><span class=\"selector-pseudo\">:120</span>%;</div></pre></td></tr></table></figure>\n<hr>\n<p>居中对齐</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">margin</span>: 0 <span class=\"selector-tag\">auto</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">outline: 1px solid red  !important;  // border 外框，outline是不占空间的，既不会增加额外的width或者height，边框占用宽度</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">media</span> only screen and (max-width: <span class=\"number\">300px</span>) &#123;</div><div class=\"line\">  <span class=\"comment\">/* style */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">img</span>,</div><div class=\"line\"><span class=\"selector-tag\">embed</span>,</div><div class=\"line\"><span class=\"selector-tag\">object</span>,</div><div class=\"line\"><span class=\"selector-tag\">video</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<p>手指大约 40px，小屏按钮最小设置为 48 * 48px，两个之间最好空 40px</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">min-height</span>: 48<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">min-width</span>: 48<span class=\"selector-tag\">px</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">padding</span>: 1<span class=\"selector-class\">.5em</span> <span class=\"selector-tag\">inhenit</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span>;</div><div class=\"line\"><span class=\"selector-tag\">flex-wrap</span>: <span class=\"selector-tag\">wrap</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">calc(<span class=\"number\">100</span>px - <span class=\"number\">10</span>%)</div><div class=\"line\"> *有效，* calc(<span class=\"number\">100</span>px<span class=\"number\">-10</span>%)</div><div class=\"line\"> *则无效</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">`!<span class=\"selector-tag\">important</span>` 优先级最高</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.testClass</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">color</span>:blue <span class=\"meta\">!important</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<p>你是否注意到，将 height<br> 和 width<br> 设置为 100vmax<br> 或 100vmin<br> 会如何改变图片的宽高比？它会将你的图片压缩成正方形，所以，如果你想要保留其他宽高比，请小心！</p>\n<hr>\n<h1 id=\"压缩、优化和自动化\"><a href=\"#压缩、优化和自动化\" class=\"headerlink\" title=\"压缩、优化和自动化\"></a>压缩、优化和自动化</h1><p>开始编写你自己的自动化 ImageMagick 或 ImageOptim 工具前，你需要安装 <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"external\">Node.js</a> 和 <a href=\"https://docs.npmjs.com/getting-started/installing-node\" target=\"_blank\" rel=\"external\">npm</a>。 ImageMagick:<br><a href=\"http://www.imagemagick.org/\" target=\"_blank\" rel=\"external\">ImageMagick</a><br><a href=\"http://cactuslab.com/imagemagick/\" target=\"_blank\" rel=\"external\">Mac 上的一个简单的 ImageMagick 安装包</a><br><a href=\"http://www.graphicsmagick.org/\" target=\"_blank\" rel=\"external\">GraphicsMagick</a> (ImageMagick 的一个分叉)</p>\n<p>Grunt:<br><a href=\"http://gruntjs.com/getting-started\" target=\"_blank\" rel=\"external\">Grunt 简介</a><br><a href=\"http://24ways.org/2013/grunt-is-not-weird-and-hard/\" target=\"_blank\" rel=\"external\">Grunt 使用入门</a><br><a href=\"http://addyosmani.com/blog/generate-multi-resolution-images-for-srcset-with-grunt/\" target=\"_blank\" rel=\"external\">用 Grunt 生成不同分辨率的图片</a><br><a href=\"https://github.com/andismith/grunt-responsive-images\" target=\"_blank\" rel=\"external\">用于生成多张图片的 grunt-responsive-images 插件</a><br><a href=\"https://www.npmjs.com/package/grunt-respimg\" target=\"_blank\" rel=\"external\">用于响应式图片工作流的 grunt-respimg 插件</a></p>\n<p>脚本编制示例中使用的文件：<br><a href=\"http://udacity.github.io/responsive-images/convert.sh\" target=\"_blank\" rel=\"external\">convert.sh</a> (含说明)<br><a href=\"http://udacity.github.io/responsive-images/Gruntfile.js\" target=\"_blank\" rel=\"external\">Gruntfile.js</a> (对于 Windows，移除第 7 行：engine: ‘im’,<br>)<br><a href=\"https://github.com/BBC-News/Imager.js/\" target=\"_blank\" rel=\"external\">Imager.js</a>：为 BBC 新闻开发的响应式图片加载。</p>\n<p>图片处理工具：<br><a href=\"http://imageoptim.com/\" target=\"_blank\" rel=\"external\">ImageOptim</a> (Mac)<br><a href=\"http://trimage.org/\" target=\"_blank\" rel=\"external\">Trimage</a> - 和 ImageOptim 类似 (Windows, Mac, Linux)<br><a href=\"https://github.com/pornel/ImageAlpha\" target=\"_blank\" rel=\"external\">ImageAlpha</a></p>\n<h1 id=\"图片压缩\"><a href=\"#图片压缩\" class=\"headerlink\" title=\"图片压缩\"></a>图片压缩</h1><p><a href=\"https://developers.google.com/speed/pagespeed/insights/?url=simpl.info%2Fcssfilters\" target=\"_blank\" rel=\"external\">PageSpeed Insights 示例</a><br><a href=\"https://www.npmjs.com/package/grunt-pagespeed\" target=\"_blank\" rel=\"external\">Grunt PageSpeed 插件</a><br><a href=\"https://github.com/addyosmani/psi/\" target=\"_blank\" rel=\"external\">PageSpeed Node module</a><br><a href=\"http://www.thegeekstuff.com/2012/04/curl-examples/\" target=\"_blank\" rel=\"external\">cURL 示例</a><br><a href=\"https://github.com/addyosmani/psi/\" target=\"_blank\" rel=\"external\">PageSpeed Insights Node module</a></p>\n<p>练习: 项目第 1 部分<br>请从 <a href=\"http://udacity.github.io/responsive-images/downloads/RI-Project-Part-1-Start.zip\" target=\"_blank\" rel=\"external\">此处</a>下载项目文档。<em>\n</em>请确保通过 localhost 运行项目。<em> 对于 Mac/Linux，请 cd<br> 至工作目录并设置一个<a href=\"http://www.linuxjournal.com/content/tech-tip-really-simple-http-server-python\" target=\"_blank\" rel=\"external\">简单的 HTTP 服务器</a>。对于 Windows，请参见下文。<br>Make sure you are running the <a href=\"https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi\" target=\"_blank\" rel=\"external\">Udacity Feedback Chrome Extension</a> to get feedback. 确保你已经安装了<a href=\"https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi\" target=\"_blank\" rel=\"external\">优达学城前端反馈插件</a>。\n</em>打开控制台，看看图片的总体积！*<br><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure\" target=\"_blank\" rel=\"external\">了解更多有关 figure 标签的信息！</a></p>\n<h1 id=\"性能\"><a href=\"#性能\" class=\"headerlink\" title=\"性能\"></a>性能</h1><p>延迟会什么会成为新的瓶颈？<a href=\"http://chimera.labs.oreilly.com/books/1230000000545/ch10.html#MORE_BANDWIDTH_DOESNT_MATTER_MUCH\" target=\"_blank\" rel=\"external\">看看 Ilya </a>在<em>高性能浏览器网络</em>中有什么要说的。请注意缩短延迟如何不断改善页面加载时间，而使带宽的图表趋于平缓：<br><img src=\"http://upload-images.jianshu.io/upload_images/1768578-826454c6055633cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"graph about latency\"><br>要减少图片下载次数，你也可以使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/CSS_Image_Sprites\" target=\"_blank\" rel=\"external\">CSS 图片精灵</a>或<a href=\"http://blog.brianjohnsondesign.com/responsive-background-image-sprites-css-tutorial/%EF%BC%89%E3%80%82[%E7%B2%BE%E7%81%B5%E9%A1%B5](https://www.google.co.uk/images/nav_logo195.png\" target=\"_blank\" rel=\"external\">响应式精灵</a> 图片组合了大量图片，这些图片可以通过将精灵页设置为元素背景，然后通过 CSS 调整背景位置来单独显示。此技巧对图标和其他重复图形尤为有用。<br><strong>无论你采用何种技巧来避免延迟，都请注意 HTTP/2 带来的更改。</strong><br>简单地说，HTTP/2 表示请求多个文件的成本更小：准备停止使用脚本编写、连接和其他 HTTP/1 技巧！<br>如需了解更多信息，请查看<a href=\"https://mattwilcox.net/web-development/http2-for-front-end-web-developers\" target=\"_blank\" rel=\"external\">面向前端 Web 开发的 HTTP2</a>。</p>\n<hr>\n<p>CSS 背景图片<br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/divWithBackgroundImage\" target=\"_blank\" rel=\"external\">Div with background image</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/backgroundSizeCover\" target=\"_blank\" rel=\"external\">CSS background-size: cover</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImage\" target=\"_blank\" rel=\"external\">Body with background image</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImageAndGradient\" target=\"_blank\" rel=\"external\">Body with background image and gradient</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/bodyWithElaboratePatternPureCSS\" target=\"_blank\" rel=\"external\">Body with elaborate background using only CSS</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/backgroundImageConditional\" target=\"_blank\" rel=\"external\">Using CSS background images for conditional image display</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/backgroundImageAlternative\" target=\"_blank\" rel=\"external\">Using CSS background images for alternative images</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/imageSet\" target=\"_blank\" rel=\"external\">image-set()</a></p>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">background-color</span>: <span class=\"selector-tag\">cover</span>;</div><div class=\"line\"><span class=\"selector-tag\">background-color</span>: <span class=\"selector-tag\">contain</span>;</div></pre></td></tr></table></figure>\n<hr>\n<p>符号字符<br>例子：<a href=\"http://udacity.github.io/responsive-images/examples/2-08/unicodeStar\" target=\"_blank\" rel=\"external\">Unicode 代替图片</a><br><a href=\"http://unicode-table.com/en/sets/\" target=\"_blank\" rel=\"external\">Unicode 字符集</a><br><a href=\"http://en.wikipedia.org/wiki/List_of_Unicode_characters\" target=\"_blank\" rel=\"external\">Unicode 符号集合</a></p>\n<hr>\n<p>图标字体<br><a href=\"http://zocial.smcllns.com/\" target=\"_blank\" rel=\"external\">Zocial</a><br><a href=\"http://fortawesome.github.io/Font-Awesome/\" target=\"_blank\" rel=\"external\">Font Awesome</a><br><a href=\"http://weloveiconfonts.com/\" target=\"_blank\" rel=\"external\">We Love Icon Fonts!</a><br><a href=\"https://css-tricks.com/examples/IconFont/\" target=\"_blank\" rel=\"external\">Icon fonts on CSS-Tricks</a></p>\n<hr>\n<p>SVG 和数据 URI 行内图片<br>例子：<br><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgDataUri\" target=\"_blank\" rel=\"external\">SVG Data URI in HTML</a></p>\n<p><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgDataUriCss\" target=\"_blank\" rel=\"external\">SVG Data URI in CSS</a></p>\n<p><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgTextOnAPath\" target=\"_blank\" rel=\"external\">SVG text on a path</a></p>\n<p><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgUnoptimisedAndOptimised\" target=\"_blank\" rel=\"external\">SVG optimized and unoptimized</a></p>\n<hr>\n<p>示例：<br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues\" target=\"_blank\" rel=\"external\">srcset with w values</a><br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw\" target=\"_blank\" rel=\"external\">srcset with w values, 50vw</a></p>\n<hr>\n<p>Sizes 属性<br>示例：<br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues\" target=\"_blank\" rel=\"external\">srcset with w values</a><br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw\" target=\"_blank\" rel=\"external\">srcset with w values, 50vw</a></p>\n<hr>\n<p>srcset 和 sizes 练习<br>我想总结你刚刚学习的关于图片属性 srcset<br> 和 sizes<br> 的内容。 你可以借此机会先详细了解每个属性的语法，然后在下面两道测试题中，在真正的页面上尝试使用它们。<br>在本测试题中，你将尝试使用 srcset<br>。在下一道测试题中，你将添加 sizes<br>，以便为浏览器提供更多信息。<br>语法<br>srcset<br> 有两种自定义方式，一种使用 x<br> 来区分设备像素比 (DPR)，另一种使用 w<br> 来描述图像的宽度。<br>对设备像素比的反应<br><img src=\"image_2x.jpg\" srcset=\"image_2x.jpg 2x, image_1x.jpg 1x\" alt=\"a cool image\"></p>\n<p>将 srcset<br> 设置为与逗号分隔的一连串 filename multiplier<br> 对相等，其中每个 multiplier<br> 必须是后跟 x<br> 的整数。<br>例如，1x<br> 表示 1 倍显示屏，2x<br> 表示像素密度为两倍的显示屏，如 Apple 的 Retina 显示屏。<br>浏览器会下载与其 DPR 对应的最佳图片。<br>另请注意，有一个作为备用的 src<br> 属性。<br>对图片宽度的反应<br><img src=\"image_200.jpg\" srcset=\"image_200.jpg 200w, image_100.jpg 100w\" alt=\"a cool image\"></p>\n<p>将 srcset<br> 设置为与逗号分隔的一连串 filename widthDescriptor<br> 对相等，其中每个 widthDescriptor<br> 都以像素为测量单位， 并且必须是后跟 w<br> 的整数。在这里，widthDescriptor<br> 指定每个图片文件的自然宽度，使浏览器能够根据窗口大小和 DPR 选择要请求的最适当的图片。 （如果没有 widthDescriptor<br>，浏览器需要下载图片才能知道其宽度！）<br>另请注意，有一个作为备用的 src<br> 属性。<br>准备好尝试一下？单击“继续”试试吧！</p>\n<p>Here are my finished image tags:<br>DPR (海牙)<br><img class=\"dpi\" src=\"images/Den_Haag_2x.jpg\" srcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x\" alt=\"Den Haag Skyline\"></p>\n<p>请注意我如何获得 src<br> 作为备份。srcset<br> 中的来源顺序无关紧要。此外，如果你遗漏了乘数，它将默认为 1x<br>，也就是说，<br>srcset=”images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x”</p>\n<p>等同于：<br>srcset=”images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg”</p>\n<p>图片宽度（澳大利亚）<br><img class=\"w\" src=\"images/Australia_1280w.jpg\" srcset=\"images/Australia_1280w.jpg 1280w, images/Australia_640w.jpg 640w\" alt=\"Australia from Space\"></p>\n<p>同样地，会出现 src<br> 备份，你可以切换 srcset<br> 中的图片顺序。</p>\n<p>包含大小的图片宽度<br>如果图片不以全窗口宽度显示会怎样？那么，除了 srcset<br> 外，你还需要其他元素（假设图片将为全窗口宽度）<br>向包含媒体查询的图片添加一个 sizes<br> 属性和一个 vw<br> 值。srcset<br> 和 sizes<br> 合起来可让浏览器知道图片的自然宽度以及图片相对于窗口宽度的显示宽度。 知道图片的显示宽度和可用图片文件的宽度后，浏览器将获得下载具有满足其需求的适当分辨率且尽可能小的图片所需的信息。 而且，浏览器在页面加载初期，解析 HTML 时即可做出此选择。<br>srcset 与 sizes 配合使用的语法<br>这里是一个示例：<br><img src=\"images/great_pic_800.jpg\" sizes=\"(max-width: 400px) 100vw, (min-width: 401px) 50vw\" srcset=\"images/great_pic_400.jpg 400w, images/great_pic_800.jpg 800w\" alt=\"great picture\"></p>\n<p>sizes<br> 由以逗号分隔的 mediaQuery width<br> 对组成。sizes<br> 会在加载流程初期告诉浏览器，该图片会在点击 mediaQuery<br> 时以某个 width<br> 显示。<br>实际上，如果 sizes<br> 缺失，浏览器会将 sizes<br> 默认为 100vw<br>，表示它预计图片将以全窗口宽度显示。<br>sizes<br> 会为浏览器额外提供一条信息，以确保它根据图片的最终显示宽度下载正确的图片文件。说明一下，它实际上<em>不会</em>调整图片的大小 - 这是 CSS 的工作。<br>在本示例中，如果浏览器的窗口宽度等于或小于 400 像素，浏览器知道图片将为全窗口宽度；如果窗口宽度大于 400 像素，则为一半窗口宽度。浏览器知道它具有两个图片选项 - 一个具有 400 像素的自然宽度，另一个具有 800 像素。<br>准备好帮助浏览器了？单击“继续”亲自试试吧！</p>\n<p>这里是我已完成的图片标记：<br><img class=\"w\" src=\"images/Coffee_1280w.jpg\" srcset=\"images/Coffee_1280w.jpg 1280w, images/Coffee_640w.jpg 640w\" sizes=\"(max-width: 960px) 50vw, 100vw\" alt=\"Coffee by Amy March from Turkey\"></p>\n<p>我没有在 sizes<br> 中包括第二个媒体查询，因为如果没有媒体查询，列出的宽度会被视为默认值。<br>另外请注意，sizes<br> 中的媒体查询与 CSS 匹配。说明一下，更改 sizes<br> 不会影响 CSS。它只会提醒浏览器注意最终需要在该处显示的图片。</p>\n<hr>\n<p>网络广播从最初在系统上设置 Grunt 开始， 一直讲到设置完整的项目流程。<br>此处链接为 <a href=\"https://discussions.udacity.com/t/grunt-and-setting-up-a-grunt-workflow-intermediate/21984\" target=\"_blank\" rel=\"external\">关于此网络广播的详细论坛文章 </a>。 文章中包含对 Grunt 安装配置和设置任务 的相关向导。<br>此处链接为 <a href=\"https://github.com/JohnUdacity/grunt-workflow-guide\" target=\"_blank\" rel=\"external\">在网络广播中使用的 GitHub 存储库 </a>。<br>有关网络广播的详细整理，请访问 <a href=\"https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp\" target=\"_blank\" rel=\"external\">此处</a>.</p>\n<hr>\n<p>设置 Gulp 工作流演示（概要）<br>由学习教练 John 主讲，有关如何设置 Gulp 的现场演示。<br>Gulp 可代替前端开发人员完成所有必需的繁琐、 重复性任务：压缩、串联、lint 操作、 图像优化、Git 提交等多种任务， 都可以交由 Gulp 来实现。从而让你能够集中精力处理重要任务，也就是 编写代码。<br>网络广播从最初在系统上设置 Gulp 开始， 一直讲到设置完整的项目流程。<br>要查看网络广播的详细概要（包括代码 段），请参阅此 <a href=\"https://discussions.udacity.com/t/gulp-and-setting-up-a-gulp-workflow-intermediate/24359\" target=\"_blank\" rel=\"external\">论坛 文章</a>.<br>如果想要跟随演示学习，请在 <a href=\"https://github.com/JohnUdacity/gulp-start\" target=\"_blank\" rel=\"external\">此存储库</a> 中下载起始代码。<br>有关网络广播的详细整理，请访问 <a href=\"https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp\" target=\"_blank\" rel=\"external\">此处</a>.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-678f35e772132a47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">font-family: Helvetica, Arial, sans-serif;</div><div class=\"line\">font-size: 60px;</div><div class=\"line\">text-transform: uppercase;  // 大写</div><div class=\"line\">text-decoration: underline;  // 下划线</div><div class=\"line\">color: #8001ff;</div></pre></td></tr></table></figure>\n<hr>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-ae3d31ed146b7798.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">border</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">dashed</span> <span class=\"selector-tag\">salmon</span>;</div><div class=\"line\"><span class=\"selector-tag\">border-radius</span>: 5<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</div><div class=\"line\"><span class=\"selector-tag\">box-shadow</span>: 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> 20<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#ccc</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">display: block;  // 块元素</div><div class=\"line\">display: inline;  // 内联元素</div></pre></td></tr></table></figure>\n<p><code>inline</code>, <code>weight</code> 和 <code>height</code> 无效。</p>\n<hr>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">box-sizing: border-box;  // width 计算 padding 和 border</div><div class=\"line\">-webkit-box-sizing: border-box;</div><div class=\"line\">-moz-box-sizing: border-box;</div><div class=\"line\">-ms-box-sizing: border-box;</div></pre></td></tr></table></figure>\n<hr>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-470c41345887b0a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">text-align: justify;  // 左右对齐</div></pre></td></tr></table></figure>\n<hr>\n<p>垂直对齐</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">top</span>;</div><div class=\"line\"><span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">bottom</span>;</div><div class=\"line\"><span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">middle</span>;</div></pre></td></tr></table></figure>\n<hr>\n<p>行高</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">line-height</span><span class=\"selector-pseudo\">:1.2</span>;</div><div class=\"line\"><span class=\"selector-tag\">line-height</span><span class=\"selector-pseudo\">:19.2px</span>;</div><div class=\"line\"><span class=\"selector-tag\">line-height</span><span class=\"selector-pseudo\">:120</span>%;</div></pre></td></tr></table></figure>\n<hr>\n<p>居中对齐</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">margin</span>: 0 <span class=\"selector-tag\">auto</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">outline: 1px solid red  !important;  // border 外框，outline是不占空间的，既不会增加额外的width或者height，边框占用宽度</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">media</span> only screen and (max-width: <span class=\"number\">300px</span>) &#123;</div><div class=\"line\">  <span class=\"comment\">/* style */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">img</span>,</div><div class=\"line\"><span class=\"selector-tag\">embed</span>,</div><div class=\"line\"><span class=\"selector-tag\">object</span>,</div><div class=\"line\"><span class=\"selector-tag\">video</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<p>手指大约 40px，小屏按钮最小设置为 48 * 48px，两个之间最好空 40px</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">min-height</span>: 48<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">min-width</span>: 48<span class=\"selector-tag\">px</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">padding</span>: 1<span class=\"selector-class\">.5em</span> <span class=\"selector-tag\">inhenit</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span>;</div><div class=\"line\"><span class=\"selector-tag\">flex-wrap</span>: <span class=\"selector-tag\">wrap</span>;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">calc(<span class=\"number\">100</span>px - <span class=\"number\">10</span>%)</div><div class=\"line\"> *有效，* calc(<span class=\"number\">100</span>px<span class=\"number\">-10</span>%)</div><div class=\"line\"> *则无效</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">`!<span class=\"selector-tag\">important</span>` 优先级最高</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.testClass</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">color</span>:blue <span class=\"meta\">!important</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<p>你是否注意到，将 height<br> 和 width<br> 设置为 100vmax<br> 或 100vmin<br> 会如何改变图片的宽高比？它会将你的图片压缩成正方形，所以，如果你想要保留其他宽高比，请小心！</p>\n<hr>\n<h1 id=\"压缩、优化和自动化\"><a href=\"#压缩、优化和自动化\" class=\"headerlink\" title=\"压缩、优化和自动化\"></a>压缩、优化和自动化</h1><p>开始编写你自己的自动化 ImageMagick 或 ImageOptim 工具前，你需要安装 <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"external\">Node.js</a> 和 <a href=\"https://docs.npmjs.com/getting-started/installing-node\" target=\"_blank\" rel=\"external\">npm</a>。 ImageMagick:<br><a href=\"http://www.imagemagick.org/\" target=\"_blank\" rel=\"external\">ImageMagick</a><br><a href=\"http://cactuslab.com/imagemagick/\" target=\"_blank\" rel=\"external\">Mac 上的一个简单的 ImageMagick 安装包</a><br><a href=\"http://www.graphicsmagick.org/\" target=\"_blank\" rel=\"external\">GraphicsMagick</a> (ImageMagick 的一个分叉)</p>\n<p>Grunt:<br><a href=\"http://gruntjs.com/getting-started\" target=\"_blank\" rel=\"external\">Grunt 简介</a><br><a href=\"http://24ways.org/2013/grunt-is-not-weird-and-hard/\" target=\"_blank\" rel=\"external\">Grunt 使用入门</a><br><a href=\"http://addyosmani.com/blog/generate-multi-resolution-images-for-srcset-with-grunt/\" target=\"_blank\" rel=\"external\">用 Grunt 生成不同分辨率的图片</a><br><a href=\"https://github.com/andismith/grunt-responsive-images\" target=\"_blank\" rel=\"external\">用于生成多张图片的 grunt-responsive-images 插件</a><br><a href=\"https://www.npmjs.com/package/grunt-respimg\" target=\"_blank\" rel=\"external\">用于响应式图片工作流的 grunt-respimg 插件</a></p>\n<p>脚本编制示例中使用的文件：<br><a href=\"http://udacity.github.io/responsive-images/convert.sh\" target=\"_blank\" rel=\"external\">convert.sh</a> (含说明)<br><a href=\"http://udacity.github.io/responsive-images/Gruntfile.js\" target=\"_blank\" rel=\"external\">Gruntfile.js</a> (对于 Windows，移除第 7 行：engine: ‘im’,<br>)<br><a href=\"https://github.com/BBC-News/Imager.js/\" target=\"_blank\" rel=\"external\">Imager.js</a>：为 BBC 新闻开发的响应式图片加载。</p>\n<p>图片处理工具：<br><a href=\"http://imageoptim.com/\" target=\"_blank\" rel=\"external\">ImageOptim</a> (Mac)<br><a href=\"http://trimage.org/\" target=\"_blank\" rel=\"external\">Trimage</a> - 和 ImageOptim 类似 (Windows, Mac, Linux)<br><a href=\"https://github.com/pornel/ImageAlpha\" target=\"_blank\" rel=\"external\">ImageAlpha</a></p>\n<h1 id=\"图片压缩\"><a href=\"#图片压缩\" class=\"headerlink\" title=\"图片压缩\"></a>图片压缩</h1><p><a href=\"https://developers.google.com/speed/pagespeed/insights/?url=simpl.info%2Fcssfilters\" target=\"_blank\" rel=\"external\">PageSpeed Insights 示例</a><br><a href=\"https://www.npmjs.com/package/grunt-pagespeed\" target=\"_blank\" rel=\"external\">Grunt PageSpeed 插件</a><br><a href=\"https://github.com/addyosmani/psi/\" target=\"_blank\" rel=\"external\">PageSpeed Node module</a><br><a href=\"http://www.thegeekstuff.com/2012/04/curl-examples/\" target=\"_blank\" rel=\"external\">cURL 示例</a><br><a href=\"https://github.com/addyosmani/psi/\" target=\"_blank\" rel=\"external\">PageSpeed Insights Node module</a></p>\n<p>练习: 项目第 1 部分<br>请从 <a href=\"http://udacity.github.io/responsive-images/downloads/RI-Project-Part-1-Start.zip\" target=\"_blank\" rel=\"external\">此处</a>下载项目文档。<em>\n</em>请确保通过 localhost 运行项目。<em> 对于 Mac/Linux，请 cd<br> 至工作目录并设置一个<a href=\"http://www.linuxjournal.com/content/tech-tip-really-simple-http-server-python\" target=\"_blank\" rel=\"external\">简单的 HTTP 服务器</a>。对于 Windows，请参见下文。<br>Make sure you are running the <a href=\"https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi\" target=\"_blank\" rel=\"external\">Udacity Feedback Chrome Extension</a> to get feedback. 确保你已经安装了<a href=\"https://chrome.google.com/webstore/detail/udacity-front-end-feedbac/melpgahbngpgnbhhccnopmlmpbmdaeoi\" target=\"_blank\" rel=\"external\">优达学城前端反馈插件</a>。\n</em>打开控制台，看看图片的总体积！*<br><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure\" target=\"_blank\" rel=\"external\">了解更多有关 figure 标签的信息！</a></p>\n<h1 id=\"性能\"><a href=\"#性能\" class=\"headerlink\" title=\"性能\"></a>性能</h1><p>延迟会什么会成为新的瓶颈？<a href=\"http://chimera.labs.oreilly.com/books/1230000000545/ch10.html#MORE_BANDWIDTH_DOESNT_MATTER_MUCH\" target=\"_blank\" rel=\"external\">看看 Ilya </a>在<em>高性能浏览器网络</em>中有什么要说的。请注意缩短延迟如何不断改善页面加载时间，而使带宽的图表趋于平缓：<br><img src=\"http://upload-images.jianshu.io/upload_images/1768578-826454c6055633cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"graph about latency\"><br>要减少图片下载次数，你也可以使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/CSS_Image_Sprites\" target=\"_blank\" rel=\"external\">CSS 图片精灵</a>或<a href=\"http://blog.brianjohnsondesign.com/responsive-background-image-sprites-css-tutorial/%EF%BC%89%E3%80%82[%E7%B2%BE%E7%81%B5%E9%A1%B5](https://www.google.co.uk/images/nav_logo195.png\" target=\"_blank\" rel=\"external\">响应式精灵</a> 图片组合了大量图片，这些图片可以通过将精灵页设置为元素背景，然后通过 CSS 调整背景位置来单独显示。此技巧对图标和其他重复图形尤为有用。<br><strong>无论你采用何种技巧来避免延迟，都请注意 HTTP/2 带来的更改。</strong><br>简单地说，HTTP/2 表示请求多个文件的成本更小：准备停止使用脚本编写、连接和其他 HTTP/1 技巧！<br>如需了解更多信息，请查看<a href=\"https://mattwilcox.net/web-development/http2-for-front-end-web-developers\" target=\"_blank\" rel=\"external\">面向前端 Web 开发的 HTTP2</a>。</p>\n<hr>\n<p>CSS 背景图片<br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/divWithBackgroundImage\" target=\"_blank\" rel=\"external\">Div with background image</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/backgroundSizeCover\" target=\"_blank\" rel=\"external\">CSS background-size: cover</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImage\" target=\"_blank\" rel=\"external\">Body with background image</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/bodyWithBackgroundImageAndGradient\" target=\"_blank\" rel=\"external\">Body with background image and gradient</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/bodyWithElaboratePatternPureCSS\" target=\"_blank\" rel=\"external\">Body with elaborate background using only CSS</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/backgroundImageConditional\" target=\"_blank\" rel=\"external\">Using CSS background images for conditional image display</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/backgroundImageAlternative\" target=\"_blank\" rel=\"external\">Using CSS background images for alternative images</a><br><a href=\"http://udacity.github.io/responsive-images/examples/2-06/imageSet\" target=\"_blank\" rel=\"external\">image-set()</a></p>\n<hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">background-color</span>: <span class=\"selector-tag\">cover</span>;</div><div class=\"line\"><span class=\"selector-tag\">background-color</span>: <span class=\"selector-tag\">contain</span>;</div></pre></td></tr></table></figure>\n<hr>\n<p>符号字符<br>例子：<a href=\"http://udacity.github.io/responsive-images/examples/2-08/unicodeStar\" target=\"_blank\" rel=\"external\">Unicode 代替图片</a><br><a href=\"http://unicode-table.com/en/sets/\" target=\"_blank\" rel=\"external\">Unicode 字符集</a><br><a href=\"http://en.wikipedia.org/wiki/List_of_Unicode_characters\" target=\"_blank\" rel=\"external\">Unicode 符号集合</a></p>\n<hr>\n<p>图标字体<br><a href=\"http://zocial.smcllns.com/\" target=\"_blank\" rel=\"external\">Zocial</a><br><a href=\"http://fortawesome.github.io/Font-Awesome/\" target=\"_blank\" rel=\"external\">Font Awesome</a><br><a href=\"http://weloveiconfonts.com/\" target=\"_blank\" rel=\"external\">We Love Icon Fonts!</a><br><a href=\"https://css-tricks.com/examples/IconFont/\" target=\"_blank\" rel=\"external\">Icon fonts on CSS-Tricks</a></p>\n<hr>\n<p>SVG 和数据 URI 行内图片<br>例子：<br><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgDataUri\" target=\"_blank\" rel=\"external\">SVG Data URI in HTML</a></p>\n<p><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgDataUriCss\" target=\"_blank\" rel=\"external\">SVG Data URI in CSS</a></p>\n<p><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgTextOnAPath\" target=\"_blank\" rel=\"external\">SVG text on a path</a></p>\n<p><a href=\"http://udacity.github.io/responsive-images/examples/2-11/svgUnoptimisedAndOptimised\" target=\"_blank\" rel=\"external\">SVG optimized and unoptimized</a></p>\n<hr>\n<p>示例：<br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues\" target=\"_blank\" rel=\"external\">srcset with w values</a><br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw\" target=\"_blank\" rel=\"external\">srcset with w values, 50vw</a></p>\n<hr>\n<p>Sizes 属性<br>示例：<br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues\" target=\"_blank\" rel=\"external\">srcset with w values</a><br><a href=\"http://udacity.github.io/responsive-images/examples/3-03/srcsetWValues50vw\" target=\"_blank\" rel=\"external\">srcset with w values, 50vw</a></p>\n<hr>\n<p>srcset 和 sizes 练习<br>我想总结你刚刚学习的关于图片属性 srcset<br> 和 sizes<br> 的内容。 你可以借此机会先详细了解每个属性的语法，然后在下面两道测试题中，在真正的页面上尝试使用它们。<br>在本测试题中，你将尝试使用 srcset<br>。在下一道测试题中，你将添加 sizes<br>，以便为浏览器提供更多信息。<br>语法<br>srcset<br> 有两种自定义方式，一种使用 x<br> 来区分设备像素比 (DPR)，另一种使用 w<br> 来描述图像的宽度。<br>对设备像素比的反应<br><img src=\"image_2x.jpg\" srcset=\"image_2x.jpg 2x, image_1x.jpg 1x\" alt=\"a cool image\"></p>\n<p>将 srcset<br> 设置为与逗号分隔的一连串 filename multiplier<br> 对相等，其中每个 multiplier<br> 必须是后跟 x<br> 的整数。<br>例如，1x<br> 表示 1 倍显示屏，2x<br> 表示像素密度为两倍的显示屏，如 Apple 的 Retina 显示屏。<br>浏览器会下载与其 DPR 对应的最佳图片。<br>另请注意，有一个作为备用的 src<br> 属性。<br>对图片宽度的反应<br><img src=\"image_200.jpg\" srcset=\"image_200.jpg 200w, image_100.jpg 100w\" alt=\"a cool image\"></p>\n<p>将 srcset<br> 设置为与逗号分隔的一连串 filename widthDescriptor<br> 对相等，其中每个 widthDescriptor<br> 都以像素为测量单位， 并且必须是后跟 w<br> 的整数。在这里，widthDescriptor<br> 指定每个图片文件的自然宽度，使浏览器能够根据窗口大小和 DPR 选择要请求的最适当的图片。 （如果没有 widthDescriptor<br>，浏览器需要下载图片才能知道其宽度！）<br>另请注意，有一个作为备用的 src<br> 属性。<br>准备好尝试一下？单击“继续”试试吧！</p>\n<p>Here are my finished image tags:<br>DPR (海牙)<br><img class=\"dpi\" src=\"images/Den_Haag_2x.jpg\" srcset=\"images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x\" alt=\"Den Haag Skyline\"></p>\n<p>请注意我如何获得 src<br> 作为备份。srcset<br> 中的来源顺序无关紧要。此外，如果你遗漏了乘数，它将默认为 1x<br>，也就是说，<br>srcset=”images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg 1x”</p>\n<p>等同于：<br>srcset=”images/Den_Haag_2x.jpg 2x, images/Den_Haag_1x.jpg”</p>\n<p>图片宽度（澳大利亚）<br><img class=\"w\" src=\"images/Australia_1280w.jpg\" srcset=\"images/Australia_1280w.jpg 1280w, images/Australia_640w.jpg 640w\" alt=\"Australia from Space\"></p>\n<p>同样地，会出现 src<br> 备份，你可以切换 srcset<br> 中的图片顺序。</p>\n<p>包含大小的图片宽度<br>如果图片不以全窗口宽度显示会怎样？那么，除了 srcset<br> 外，你还需要其他元素（假设图片将为全窗口宽度）<br>向包含媒体查询的图片添加一个 sizes<br> 属性和一个 vw<br> 值。srcset<br> 和 sizes<br> 合起来可让浏览器知道图片的自然宽度以及图片相对于窗口宽度的显示宽度。 知道图片的显示宽度和可用图片文件的宽度后，浏览器将获得下载具有满足其需求的适当分辨率且尽可能小的图片所需的信息。 而且，浏览器在页面加载初期，解析 HTML 时即可做出此选择。<br>srcset 与 sizes 配合使用的语法<br>这里是一个示例：<br><img src=\"images/great_pic_800.jpg\" sizes=\"(max-width: 400px) 100vw, (min-width: 401px) 50vw\" srcset=\"images/great_pic_400.jpg 400w, images/great_pic_800.jpg 800w\" alt=\"great picture\"></p>\n<p>sizes<br> 由以逗号分隔的 mediaQuery width<br> 对组成。sizes<br> 会在加载流程初期告诉浏览器，该图片会在点击 mediaQuery<br> 时以某个 width<br> 显示。<br>实际上，如果 sizes<br> 缺失，浏览器会将 sizes<br> 默认为 100vw<br>，表示它预计图片将以全窗口宽度显示。<br>sizes<br> 会为浏览器额外提供一条信息，以确保它根据图片的最终显示宽度下载正确的图片文件。说明一下，它实际上<em>不会</em>调整图片的大小 - 这是 CSS 的工作。<br>在本示例中，如果浏览器的窗口宽度等于或小于 400 像素，浏览器知道图片将为全窗口宽度；如果窗口宽度大于 400 像素，则为一半窗口宽度。浏览器知道它具有两个图片选项 - 一个具有 400 像素的自然宽度，另一个具有 800 像素。<br>准备好帮助浏览器了？单击“继续”亲自试试吧！</p>\n<p>这里是我已完成的图片标记：<br><img class=\"w\" src=\"images/Coffee_1280w.jpg\" srcset=\"images/Coffee_1280w.jpg 1280w, images/Coffee_640w.jpg 640w\" sizes=\"(max-width: 960px) 50vw, 100vw\" alt=\"Coffee by Amy March from Turkey\"></p>\n<p>我没有在 sizes<br> 中包括第二个媒体查询，因为如果没有媒体查询，列出的宽度会被视为默认值。<br>另外请注意，sizes<br> 中的媒体查询与 CSS 匹配。说明一下，更改 sizes<br> 不会影响 CSS。它只会提醒浏览器注意最终需要在该处显示的图片。</p>\n<hr>\n<p>网络广播从最初在系统上设置 Grunt 开始， 一直讲到设置完整的项目流程。<br>此处链接为 <a href=\"https://discussions.udacity.com/t/grunt-and-setting-up-a-grunt-workflow-intermediate/21984\" target=\"_blank\" rel=\"external\">关于此网络广播的详细论坛文章 </a>。 文章中包含对 Grunt 安装配置和设置任务 的相关向导。<br>此处链接为 <a href=\"https://github.com/JohnUdacity/grunt-workflow-guide\" target=\"_blank\" rel=\"external\">在网络广播中使用的 GitHub 存储库 </a>。<br>有关网络广播的详细整理，请访问 <a href=\"https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp\" target=\"_blank\" rel=\"external\">此处</a>.</p>\n<hr>\n<p>设置 Gulp 工作流演示（概要）<br>由学习教练 John 主讲，有关如何设置 Gulp 的现场演示。<br>Gulp 可代替前端开发人员完成所有必需的繁琐、 重复性任务：压缩、串联、lint 操作、 图像优化、Git 提交等多种任务， 都可以交由 Gulp 来实现。从而让你能够集中精力处理重要任务，也就是 编写代码。<br>网络广播从最初在系统上设置 Gulp 开始， 一直讲到设置完整的项目流程。<br>要查看网络广播的详细概要（包括代码 段），请参阅此 <a href=\"https://discussions.udacity.com/t/gulp-and-setting-up-a-gulp-workflow-intermediate/24359\" target=\"_blank\" rel=\"external\">论坛 文章</a>.<br>如果想要跟随演示学习，请在 <a href=\"https://github.com/JohnUdacity/gulp-start\" target=\"_blank\" rel=\"external\">此存储库</a> 中下载起始代码。<br>有关网络广播的详细整理，请访问 <a href=\"https://github.com/udacity/fend-office-hours/tree/master/Front%20End%20Tools/Gulp\" target=\"_blank\" rel=\"external\">此处</a>.</p>\n"},{"title":"翻译: Spring AOP 讨论最多的问题 #1 - aspects 没有生效","date":"2017-06-12T09:23:37.000Z","description":"这篇文章继续讨论从 Spring AOP top problem #2 - java.lang.ClassCastException: $Proxy7 开始的话题。在这个话题里，我想要说明一些现在接触 spring AOP 的 spring 用户(特别是新用户)讨论最多(从我的观点看来)的问题。","_content":"\n> 原文：http://denis-zhdanov.blogspot.com/2009/07/spring-aop-top-problem-1-aspects-are.html\n\n这篇文章继续讨论从 [Spring AOP top problem #2 - java.lang.ClassCastException: $Proxy7](http://denis-zhdanov.blogspot.com/2009/05/spring-aop-top-problem-2.html) 开始的话题。在这个话题里，我想要说明一些现在接触 spring AOP 的 spring 用户(特别是新用户)讨论最多(从我的观点看来)的问题。\n\n现在我想要聊一聊自身调用('self-calls')，如果你有这方面的经验可以跳过接下来的内容.\n\n请注意 spring 文档也描述了一个同样的问题 - [8.6.1 Understanding AOP proxies](http://docs.spring.io/spring/docs/3.0.x/spring-framework-reference/html/ch08s06.html#aop-understanding-aop-proxies)。然而，我发现通过 spring 论坛里的很多文章显示人们并没有发现这个问题。所以，我想要把这个问题解释的更明白些 / 用我的语言。\n\n让我们创建一个说明这个问题的例子。假设我们是 spring 的新用户而且用 spring aop 写了一个非常酷的代码，并且运行的很好。\n\n`AopService.java`\n```java\npackage com.spring.aop;\n\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class AopService {\n\n    public void service() {\n        System.out.println(\"AopService.service()\");\n    }\n\n    public void anotherService() {\n        System.out.println(\"AopService.anotherService()\");\n    }\n}\n```\n\n`TestAspect.java`\n```java\npackage com.spring.aop;\n\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Around;\nimport org.springframework.stereotype.Component;\n\n@Component\n@Aspect\npublic class TestAspect {\n\n    @Around(\"execution(* com.spring.aop.AopService.*(..))\")\n    public Object advice(ProceedingJoinPoint joinPoint) throws Throwable {\n        System.out.println(\"TestAspect.advice()\");\n        return joinPoint.proceed();\n    }\n}\n\n```\n\n`spring-config.xml`\n```xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"\n  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\n  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\n  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\">\n\n    <context:component-scan base-package=\"com.spring.aop\"/>\n    <aop:aspectj-autoproxy/>\n\n</beans>\n```\n\n`SpringStart.java`\n```java\npackage com.spring;\n\nimport com.spring.aop.AopService;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\npublic class SpringStart {\n    public static void main(String[] args) throws Exception {\n        ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring-config.xml\");\n        AopService service = context.getBeansOfType(AopService.class).values().iterator().next();\n        service.service();\n        service.anotherService();\n    }\n}\n```\n\n我们创建了一个包含简单的只会打印一些输出来说明被调用过的方法和简单的 aspect 注入这个类中所有 public 方法并且打印信息来说明注入被执行了的 service 类。如果我们执行 `SpringStart` 类，我们会看到期望的输出 - 方法都被注入成功。\n\n```\nTestAspect.advice()\nAopService.service()\nTestAspect.advice()\nAopService.anotherService()\n```\n\n让我们稍微拓展下 service 类。\n\n`AopService.java`\n```java\npackage com.spring.aop;\n\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class AopService {\n\n    public void service() {\n        System.out.println(\"AopService.service()\");\n    }\n\n    public void anotherService() {\n        System.out.println(\"AopService.anotherService(). Calling AopService.service()...\");\n        service();\n    }\n}\n```\n\n我们期望 aspect 执行 3次 - `service()` 和 `anotherService()` 在 `SpringStart.main()` 中调用，`service()` 在 `AopService.anotherService()` 中调用。然而，如果我们运行这个例子我们发现 aspect 只执行了两次（从 `SpringStart.main()` 开始执行）i.e. `AopService.anotherService()` 中调用的 `service()` 没有被注入。\n\n```\nTestAspect.advice()\nAopService.service()\nTestAspect.advice()\nAopService.anotherService(). Calling AopService.service()...\nAopService.service()\n```\n\n通常，problem root is tightly connected to [The Law of Leaky Abstractions](https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/)。I.e. 我们对 aspect 的表现有特别的期待但是没有发现 spring aop 的规则不允许这些期待实现。\n\n通常的解释是 spring AOP 是基于代理(proxy-based)的，i.e. 他假定当 bean 作为依赖被使用，他的方法应该用 aspect 代理包裹(be advised by particular aspect(s) the container injects aspect-aware bean proxy)而不是 bean 本身。例如，返回的代理使用和和下面代码近似的方法:\n\n```java\npublic class AopServiceProxy {\n\n    // Assuming that corresponding setters are introduced and the fields are defined.\n    private TestAspect aspect;\n    private AopService rawService;\n\n    public void service() {\n        aspect.advice();\n        rawService.service();\n    }\n\n    public void anotherService() {\n        aspect.advice();\n        anotherService();\n    }\n}\n```\n\nI.e. 这个代理被 aspect 包裹而且在调用 `raw` bean 前他调用了必要的 aspect 方法。然而，上一个 `AopService` 实现在 `anotherService()` 内调用了 `service()` - 这样代理无法注入因为这样调用违反了 'this' 原则, i.e. 这个方法是 'rawBean' 自己调用的。这就是为什么 aspect 在这种情况下不起作用的答案。\n\n现在，当我们明白了问题原因我们来聊聊怎么解决它。至少有三种方法：\n\n- **aspect 建议重写代码来避免 self-calls** - 非常不方便，特别是如果你在维护遗留代码;\n\n- **用 aspect-aware proxy 替换 self-calls, i.e. 在 anotherService() 里用 ((AopService) AopContext.currentProxy()).service() 代替 service()** - 也不方便，需要额外设置代理而且和 spring 的代码重复;\n\n- **用 aspectj weaving** - 这是我喜欢的方案。他会直接注入 aspect 到对应的 class 里， i.e. 不需要所有的方法都必须被代理;\n\n我会写一篇文章来说明在 spring 中怎么使用各种类型的 aspectj weaving，这样会更加清楚的说明这个问题。\n","source":"_posts/aspects_are_not_applied.md","raw":"---\ntitle: '翻译: Spring AOP 讨论最多的问题 #1 - aspects 没有生效'\ndate: 2017-06-12 17:23:37\ntags: aspect\ndescription: '这篇文章继续讨论从 Spring AOP top problem #2 - java.lang.ClassCastException: $Proxy7 开始的话题。在这个话题里，我想要说明一些现在接触 spring AOP 的 spring 用户(特别是新用户)讨论最多(从我的观点看来)的问题。'\n---\n\n> 原文：http://denis-zhdanov.blogspot.com/2009/07/spring-aop-top-problem-1-aspects-are.html\n\n这篇文章继续讨论从 [Spring AOP top problem #2 - java.lang.ClassCastException: $Proxy7](http://denis-zhdanov.blogspot.com/2009/05/spring-aop-top-problem-2.html) 开始的话题。在这个话题里，我想要说明一些现在接触 spring AOP 的 spring 用户(特别是新用户)讨论最多(从我的观点看来)的问题。\n\n现在我想要聊一聊自身调用('self-calls')，如果你有这方面的经验可以跳过接下来的内容.\n\n请注意 spring 文档也描述了一个同样的问题 - [8.6.1 Understanding AOP proxies](http://docs.spring.io/spring/docs/3.0.x/spring-framework-reference/html/ch08s06.html#aop-understanding-aop-proxies)。然而，我发现通过 spring 论坛里的很多文章显示人们并没有发现这个问题。所以，我想要把这个问题解释的更明白些 / 用我的语言。\n\n让我们创建一个说明这个问题的例子。假设我们是 spring 的新用户而且用 spring aop 写了一个非常酷的代码，并且运行的很好。\n\n`AopService.java`\n```java\npackage com.spring.aop;\n\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class AopService {\n\n    public void service() {\n        System.out.println(\"AopService.service()\");\n    }\n\n    public void anotherService() {\n        System.out.println(\"AopService.anotherService()\");\n    }\n}\n```\n\n`TestAspect.java`\n```java\npackage com.spring.aop;\n\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Around;\nimport org.springframework.stereotype.Component;\n\n@Component\n@Aspect\npublic class TestAspect {\n\n    @Around(\"execution(* com.spring.aop.AopService.*(..))\")\n    public Object advice(ProceedingJoinPoint joinPoint) throws Throwable {\n        System.out.println(\"TestAspect.advice()\");\n        return joinPoint.proceed();\n    }\n}\n\n```\n\n`spring-config.xml`\n```xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"\n  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\n  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\n  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\">\n\n    <context:component-scan base-package=\"com.spring.aop\"/>\n    <aop:aspectj-autoproxy/>\n\n</beans>\n```\n\n`SpringStart.java`\n```java\npackage com.spring;\n\nimport com.spring.aop.AopService;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\npublic class SpringStart {\n    public static void main(String[] args) throws Exception {\n        ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring-config.xml\");\n        AopService service = context.getBeansOfType(AopService.class).values().iterator().next();\n        service.service();\n        service.anotherService();\n    }\n}\n```\n\n我们创建了一个包含简单的只会打印一些输出来说明被调用过的方法和简单的 aspect 注入这个类中所有 public 方法并且打印信息来说明注入被执行了的 service 类。如果我们执行 `SpringStart` 类，我们会看到期望的输出 - 方法都被注入成功。\n\n```\nTestAspect.advice()\nAopService.service()\nTestAspect.advice()\nAopService.anotherService()\n```\n\n让我们稍微拓展下 service 类。\n\n`AopService.java`\n```java\npackage com.spring.aop;\n\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class AopService {\n\n    public void service() {\n        System.out.println(\"AopService.service()\");\n    }\n\n    public void anotherService() {\n        System.out.println(\"AopService.anotherService(). Calling AopService.service()...\");\n        service();\n    }\n}\n```\n\n我们期望 aspect 执行 3次 - `service()` 和 `anotherService()` 在 `SpringStart.main()` 中调用，`service()` 在 `AopService.anotherService()` 中调用。然而，如果我们运行这个例子我们发现 aspect 只执行了两次（从 `SpringStart.main()` 开始执行）i.e. `AopService.anotherService()` 中调用的 `service()` 没有被注入。\n\n```\nTestAspect.advice()\nAopService.service()\nTestAspect.advice()\nAopService.anotherService(). Calling AopService.service()...\nAopService.service()\n```\n\n通常，problem root is tightly connected to [The Law of Leaky Abstractions](https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/)。I.e. 我们对 aspect 的表现有特别的期待但是没有发现 spring aop 的规则不允许这些期待实现。\n\n通常的解释是 spring AOP 是基于代理(proxy-based)的，i.e. 他假定当 bean 作为依赖被使用，他的方法应该用 aspect 代理包裹(be advised by particular aspect(s) the container injects aspect-aware bean proxy)而不是 bean 本身。例如，返回的代理使用和和下面代码近似的方法:\n\n```java\npublic class AopServiceProxy {\n\n    // Assuming that corresponding setters are introduced and the fields are defined.\n    private TestAspect aspect;\n    private AopService rawService;\n\n    public void service() {\n        aspect.advice();\n        rawService.service();\n    }\n\n    public void anotherService() {\n        aspect.advice();\n        anotherService();\n    }\n}\n```\n\nI.e. 这个代理被 aspect 包裹而且在调用 `raw` bean 前他调用了必要的 aspect 方法。然而，上一个 `AopService` 实现在 `anotherService()` 内调用了 `service()` - 这样代理无法注入因为这样调用违反了 'this' 原则, i.e. 这个方法是 'rawBean' 自己调用的。这就是为什么 aspect 在这种情况下不起作用的答案。\n\n现在，当我们明白了问题原因我们来聊聊怎么解决它。至少有三种方法：\n\n- **aspect 建议重写代码来避免 self-calls** - 非常不方便，特别是如果你在维护遗留代码;\n\n- **用 aspect-aware proxy 替换 self-calls, i.e. 在 anotherService() 里用 ((AopService) AopContext.currentProxy()).service() 代替 service()** - 也不方便，需要额外设置代理而且和 spring 的代码重复;\n\n- **用 aspectj weaving** - 这是我喜欢的方案。他会直接注入 aspect 到对应的 class 里， i.e. 不需要所有的方法都必须被代理;\n\n我会写一篇文章来说明在 spring 中怎么使用各种类型的 aspectj weaving，这样会更加清楚的说明这个问题。\n","slug":"aspects_are_not_applied","published":1,"updated":"2017-06-19T07:58:48.108Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43vzq190002np6u6rgl0wim","content":"<blockquote>\n<p>原文：<a href=\"http://denis-zhdanov.blogspot.com/2009/07/spring-aop-top-problem-1-aspects-are.html\" target=\"_blank\" rel=\"external\">http://denis-zhdanov.blogspot.com/2009/07/spring-aop-top-problem-1-aspects-are.html</a></p>\n</blockquote>\n<p>这篇文章继续讨论从 <a href=\"http://denis-zhdanov.blogspot.com/2009/05/spring-aop-top-problem-2.html\" target=\"_blank\" rel=\"external\">Spring AOP top problem #2 - java.lang.ClassCastException: $Proxy7</a> 开始的话题。在这个话题里，我想要说明一些现在接触 spring AOP 的 spring 用户(特别是新用户)讨论最多(从我的观点看来)的问题。</p>\n<p>现在我想要聊一聊自身调用(‘self-calls’)，如果你有这方面的经验可以跳过接下来的内容.</p>\n<p>请注意 spring 文档也描述了一个同样的问题 - <a href=\"http://docs.spring.io/spring/docs/3.0.x/spring-framework-reference/html/ch08s06.html#aop-understanding-aop-proxies\" target=\"_blank\" rel=\"external\">8.6.1 Understanding AOP proxies</a>。然而，我发现通过 spring 论坛里的很多文章显示人们并没有发现这个问题。所以，我想要把这个问题解释的更明白些 / 用我的语言。</p>\n<p>让我们创建一个说明这个问题的例子。假设我们是 spring 的新用户而且用 spring aop 写了一个非常酷的代码，并且运行的很好。</p>\n<p><code>AopService.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.spring.aop;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Component</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AopService</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"AopService.service()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anotherService</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"AopService.anotherService()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><code>TestAspect.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.spring.aop;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.ProceedingJoinPoint;</div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Aspect;</div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Around;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Component</span></div><div class=\"line\"><span class=\"meta\">@Aspect</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestAspect</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Around</span>(<span class=\"string\">\"execution(* com.spring.aop.AopService.*(..))\"</span>)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">advice</span><span class=\"params\">(ProceedingJoinPoint joinPoint)</span> <span class=\"keyword\">throws</span> Throwable </span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"TestAspect.advice()\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> joinPoint.proceed();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><code>spring-config.xml</code><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></div><div class=\"line\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span></div><div class=\"line\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></div><div class=\"line\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></div><div class=\"line\">  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd</div><div class=\"line\">  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd</div><div class=\"line\">  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\"&gt;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.spring.aop\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">aop:aspectj-autoproxy</span>/&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p><code>SpringStart.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.spring;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.spring.aop.AopService;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringStart</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        ClassPathXmlApplicationContext context = <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"spring-config.xml\"</span>);</div><div class=\"line\">        AopService service = context.getBeansOfType(AopService.class).values().iterator().next();</div><div class=\"line\">        service.service();</div><div class=\"line\">        service.anotherService();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>我们创建了一个包含简单的只会打印一些输出来说明被调用过的方法和简单的 aspect 注入这个类中所有 public 方法并且打印信息来说明注入被执行了的 service 类。如果我们执行 <code>SpringStart</code> 类，我们会看到期望的输出 - 方法都被注入成功。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</div><div class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()</div><div class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</div><div class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.anotherService</span>()</div></pre></td></tr></table></figure>\n<p>让我们稍微拓展下 service 类。</p>\n<p><code>AopService.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.spring.aop;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Component</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AopService</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"AopService.service()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anotherService</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"AopService.anotherService(). Calling AopService.service()...\"</span>);</div><div class=\"line\">        service();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>我们期望 aspect 执行 3次 - <code>service()</code> 和 <code>anotherService()</code> 在 <code>SpringStart.main()</code> 中调用，<code>service()</code> 在 <code>AopService.anotherService()</code> 中调用。然而，如果我们运行这个例子我们发现 aspect 只执行了两次（从 <code>SpringStart.main()</code> 开始执行）i.e. <code>AopService.anotherService()</code> 中调用的 <code>service()</code> 没有被注入。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</div><div class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()</div><div class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</div><div class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.anotherService</span>(). <span class=\"selector-tag\">Calling</span> <span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()...</div><div class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()</div></pre></td></tr></table></figure>\n<p>通常，problem root is tightly connected to <a href=\"https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/\" target=\"_blank\" rel=\"external\">The Law of Leaky Abstractions</a>。I.e. 我们对 aspect 的表现有特别的期待但是没有发现 spring aop 的规则不允许这些期待实现。</p>\n<p>通常的解释是 spring AOP 是基于代理(proxy-based)的，i.e. 他假定当 bean 作为依赖被使用，他的方法应该用 aspect 代理包裹(be advised by particular aspect(s) the container injects aspect-aware bean proxy)而不是 bean 本身。例如，返回的代理使用和和下面代码近似的方法:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AopServiceProxy</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Assuming that corresponding setters are introduced and the fields are defined.</span></div><div class=\"line\">    <span class=\"keyword\">private</span> TestAspect aspect;</div><div class=\"line\">    <span class=\"keyword\">private</span> AopService rawService;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        aspect.advice();</div><div class=\"line\">        rawService.service();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anotherService</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        aspect.advice();</div><div class=\"line\">        anotherService();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>I.e. 这个代理被 aspect 包裹而且在调用 <code>raw</code> bean 前他调用了必要的 aspect 方法。然而，上一个 <code>AopService</code> 实现在 <code>anotherService()</code> 内调用了 <code>service()</code> - 这样代理无法注入因为这样调用违反了 ‘this’ 原则, i.e. 这个方法是 ‘rawBean’ 自己调用的。这就是为什么 aspect 在这种情况下不起作用的答案。</p>\n<p>现在，当我们明白了问题原因我们来聊聊怎么解决它。至少有三种方法：</p>\n<ul>\n<li><p><strong>aspect 建议重写代码来避免 self-calls</strong> - 非常不方便，特别是如果你在维护遗留代码;</p>\n</li>\n<li><p><strong>用 aspect-aware proxy 替换 self-calls, i.e. 在 anotherService() 里用 ((AopService) AopContext.currentProxy()).service() 代替 service()</strong> - 也不方便，需要额外设置代理而且和 spring 的代码重复;</p>\n</li>\n<li><p><strong>用 aspectj weaving</strong> - 这是我喜欢的方案。他会直接注入 aspect 到对应的 class 里， i.e. 不需要所有的方法都必须被代理;</p>\n</li>\n</ul>\n<p>我会写一篇文章来说明在 spring 中怎么使用各种类型的 aspectj weaving，这样会更加清楚的说明这个问题。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>原文：<a href=\"http://denis-zhdanov.blogspot.com/2009/07/spring-aop-top-problem-1-aspects-are.html\" target=\"_blank\" rel=\"external\">http://denis-zhdanov.blogspot.com/2009/07/spring-aop-top-problem-1-aspects-are.html</a></p>\n</blockquote>\n<p>这篇文章继续讨论从 <a href=\"http://denis-zhdanov.blogspot.com/2009/05/spring-aop-top-problem-2.html\" target=\"_blank\" rel=\"external\">Spring AOP top problem #2 - java.lang.ClassCastException: $Proxy7</a> 开始的话题。在这个话题里，我想要说明一些现在接触 spring AOP 的 spring 用户(特别是新用户)讨论最多(从我的观点看来)的问题。</p>\n<p>现在我想要聊一聊自身调用(‘self-calls’)，如果你有这方面的经验可以跳过接下来的内容.</p>\n<p>请注意 spring 文档也描述了一个同样的问题 - <a href=\"http://docs.spring.io/spring/docs/3.0.x/spring-framework-reference/html/ch08s06.html#aop-understanding-aop-proxies\" target=\"_blank\" rel=\"external\">8.6.1 Understanding AOP proxies</a>。然而，我发现通过 spring 论坛里的很多文章显示人们并没有发现这个问题。所以，我想要把这个问题解释的更明白些 / 用我的语言。</p>\n<p>让我们创建一个说明这个问题的例子。假设我们是 spring 的新用户而且用 spring aop 写了一个非常酷的代码，并且运行的很好。</p>\n<p><code>AopService.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.spring.aop;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Component</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AopService</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"AopService.service()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anotherService</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"AopService.anotherService()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><code>TestAspect.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.spring.aop;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.ProceedingJoinPoint;</div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Aspect;</div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Around;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Component</span></div><div class=\"line\"><span class=\"meta\">@Aspect</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestAspect</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Around</span>(<span class=\"string\">\"execution(* com.spring.aop.AopService.*(..))\"</span>)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">advice</span><span class=\"params\">(ProceedingJoinPoint joinPoint)</span> <span class=\"keyword\">throws</span> Throwable </span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"TestAspect.advice()\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> joinPoint.proceed();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><code>spring-config.xml</code><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></div><div class=\"line\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span></div><div class=\"line\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></div><div class=\"line\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></div><div class=\"line\">  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd</div><div class=\"line\">  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd</div><div class=\"line\">  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\"&gt;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.spring.aop\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">aop:aspectj-autoproxy</span>/&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p><code>SpringStart.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.spring;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.spring.aop.AopService;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringStart</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        ClassPathXmlApplicationContext context = <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"spring-config.xml\"</span>);</div><div class=\"line\">        AopService service = context.getBeansOfType(AopService.class).values().iterator().next();</div><div class=\"line\">        service.service();</div><div class=\"line\">        service.anotherService();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>我们创建了一个包含简单的只会打印一些输出来说明被调用过的方法和简单的 aspect 注入这个类中所有 public 方法并且打印信息来说明注入被执行了的 service 类。如果我们执行 <code>SpringStart</code> 类，我们会看到期望的输出 - 方法都被注入成功。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</div><div class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()</div><div class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</div><div class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.anotherService</span>()</div></pre></td></tr></table></figure>\n<p>让我们稍微拓展下 service 类。</p>\n<p><code>AopService.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.spring.aop;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Component</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AopService</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"AopService.service()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anotherService</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"AopService.anotherService(). Calling AopService.service()...\"</span>);</div><div class=\"line\">        service();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>我们期望 aspect 执行 3次 - <code>service()</code> 和 <code>anotherService()</code> 在 <code>SpringStart.main()</code> 中调用，<code>service()</code> 在 <code>AopService.anotherService()</code> 中调用。然而，如果我们运行这个例子我们发现 aspect 只执行了两次（从 <code>SpringStart.main()</code> 开始执行）i.e. <code>AopService.anotherService()</code> 中调用的 <code>service()</code> 没有被注入。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</div><div class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()</div><div class=\"line\"><span class=\"selector-tag\">TestAspect</span><span class=\"selector-class\">.advice</span>()</div><div class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.anotherService</span>(). <span class=\"selector-tag\">Calling</span> <span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()...</div><div class=\"line\"><span class=\"selector-tag\">AopService</span><span class=\"selector-class\">.service</span>()</div></pre></td></tr></table></figure>\n<p>通常，problem root is tightly connected to <a href=\"https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/\" target=\"_blank\" rel=\"external\">The Law of Leaky Abstractions</a>。I.e. 我们对 aspect 的表现有特别的期待但是没有发现 spring aop 的规则不允许这些期待实现。</p>\n<p>通常的解释是 spring AOP 是基于代理(proxy-based)的，i.e. 他假定当 bean 作为依赖被使用，他的方法应该用 aspect 代理包裹(be advised by particular aspect(s) the container injects aspect-aware bean proxy)而不是 bean 本身。例如，返回的代理使用和和下面代码近似的方法:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AopServiceProxy</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Assuming that corresponding setters are introduced and the fields are defined.</span></div><div class=\"line\">    <span class=\"keyword\">private</span> TestAspect aspect;</div><div class=\"line\">    <span class=\"keyword\">private</span> AopService rawService;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        aspect.advice();</div><div class=\"line\">        rawService.service();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anotherService</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        aspect.advice();</div><div class=\"line\">        anotherService();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>I.e. 这个代理被 aspect 包裹而且在调用 <code>raw</code> bean 前他调用了必要的 aspect 方法。然而，上一个 <code>AopService</code> 实现在 <code>anotherService()</code> 内调用了 <code>service()</code> - 这样代理无法注入因为这样调用违反了 ‘this’ 原则, i.e. 这个方法是 ‘rawBean’ 自己调用的。这就是为什么 aspect 在这种情况下不起作用的答案。</p>\n<p>现在，当我们明白了问题原因我们来聊聊怎么解决它。至少有三种方法：</p>\n<ul>\n<li><p><strong>aspect 建议重写代码来避免 self-calls</strong> - 非常不方便，特别是如果你在维护遗留代码;</p>\n</li>\n<li><p><strong>用 aspect-aware proxy 替换 self-calls, i.e. 在 anotherService() 里用 ((AopService) AopContext.currentProxy()).service() 代替 service()</strong> - 也不方便，需要额外设置代理而且和 spring 的代码重复;</p>\n</li>\n<li><p><strong>用 aspectj weaving</strong> - 这是我喜欢的方案。他会直接注入 aspect 到对应的 class 里， i.e. 不需要所有的方法都必须被代理;</p>\n</li>\n</ul>\n<p>我会写一篇文章来说明在 spring 中怎么使用各种类型的 aspectj weaving，这样会更加清楚的说明这个问题。</p>\n"},{"title":"搭建一个基于 github-pages 和 jekyll 的免费博客","date":"2016-12-16T14:43:37.000Z","_content":"搭建一个基于 github-pages 和 jekyll 的免费博客\n\n<!-- more -->\n\n> 环境 macOS 10.12.2\n\n# 申请 github-pages\n\n---\n\n> 源地址 https://pages.github.com\n\n1. 创建一个仓库\n在 github 建立一个新仓库，命名为 `username.github.io`，用自己的用户名替换 `username`。**note: 如果用户名不匹配，将会不起作用。**\n\n2. clone 项目 `git clone https://github.com/username/username.github.io`\n\n3. 创建 hello world。`cd username.github.io && echo \"Hello World\" > index.html`\n\n4. push 项目。`git add --all && git commit -m \"Initial commit\" && git push -u origin master`\n\n5. 访问 `http://username.github.io`，就能看到刚刚创建的网站了。\n\n# 搭建 jekyll 环境\n\n---\n\n输入 `ruby --version` 验证是否安装了 `ruby`（Mac 已经预装了）\n\n![ruby_version.png](http://upload-images.jianshu.io/upload_images/1768578-d51c03c25e21438d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n安装 jekyll，输入 `gem install jekyll`\n\n删除之前的 `index.html`，运行 `jekyll new .`，jekyll 就会自动生成一些博客的基础文件和目录。输入 `jekyll serve`，就可以访问了。默认地址 `http://127.0.0.1:4000/`。\n\n还可以在 `_config.yml` 中进行一些个性化配置。\n\n文档地址 `http://jekyllcn.com/`\n\n# 安装模板\n\n---\n\n如果用 jekyll 从头开始搭建一个网站就太费时间了，可以先找一个模板，然后再在上面做修改。\n\n一些模板网站：\n\n - [http://jekyllthemes.org/](http://jekyllthemes.org/)\n - [https://mademistakes.com/work/jekyll-themes/](https://mademistakes.com/work/jekyll-themes/)\n\n我现在用的是第二个网站里的 `Minimal Mistakes Theme` 模板。\n\n效果图：\n\n![minimal_mistakes.png](http://upload-images.jianshu.io/upload_images/1768578-adf87c2843b91b17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 安装过程\n\n将项目 clone 下来，解压放入 github-pages 项目路径。\n\n用以下代码替换 Gemfile 里的内容：\n\n```\nsource \"https://rubygems.org\"\n\ngem \"github-pages\", group: :jekyll_plugins\n\ngroup :jekyll_plugins do\n  gem \"jekyll-paginate\"\n  gem \"jekyll-sitemap\"\n  gem \"jekyll-gist\"\n  gem \"jekyll-feed\"\n  gem \"jemoji\"\nend\n```\n\n然后运行 `bundle update` 安装依赖。\n\n移除以下不需要的文件或文件夹：\n\n- `.editorconfig`\n- `.gitattributes`\n- `.github`\n- `/docs`\n- `/test`\n- `CHANGELOG.md`\n- `minimal-mistakes-jekyll.gemspec`\n- `README.md`\n- `screenshot-layouts.png`\n- `screenshot.png`\n\n最后运行 `bundle exec jekyll serve` 就能在本地启动服务了。访问 `localhost:4000` 就能看到效果。\n\n## 碰到的坑，安装的时候会碰到以下错误\n\n```bash\nGem::Ext::BuildError: ERROR: Failed to build gem native extension.\n\ncurrent directory: /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri\n/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby -r ./siteconf20161208-38005-ye53g2.rb extconf.rb\nchecking if the C compiler accepts ... yes\nchecking if the C compiler accepts -Wno-error=unused-command-line-argument-hard-error-in-future... no\nBuilding nokogiri using packaged libraries.\nUsing mini_portile version 2.1.0\nchecking for iconv.h... yes\nchecking for gzdopen() in -lz... yes\nchecking for iconv... yes\n************************************************************************\nIMPORTANT NOTICE:\n\nBuilding Nokogiri with a packaged version of libxml2-2.9.4.\n\nTeam Nokogiri will keep on doing their best to provide security\nupdates in a timely manner, but if this is a concern for you and want\nto use the system library instead; abort this installation process and\nreinstall nokogiri as follows:\n\n    gem install nokogiri -- --use-system-libraries\n        [--with-xml2-config=/path/to/xml2-config]\n        [--with-xslt-config=/path/to/xslt-config]\n\nIf you are using Bundler, tell it to use the option:\n\n    bundle config build.nokogiri --use-system-libraries\n    bundle install\n\nNote, however, that nokogiri is not fully compatible with arbitrary\nversions of libxml2 provided by OS/package vendors.\n************************************************************************\nExtracting libxml2-2.9.4.tar.gz into tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4... OK\nRunning 'configure' for libxml2 2.9.4... OK\nRunning 'compile' for libxml2 2.9.4... ERROR, review\n'/Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri/tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4/compile.log' to see what happened. Last lines are:\n========================================================================\n  CCLD     libxml2.la\n  CC       testdso.lo\n  CCLD     testdso.la\n  CC       xmllint.o\n  CCLD     xmllint\nld: warning: ignoring file /usr/local/Cellar/xz/5.2.2/lib/liblzma.dylib, file was built for x86_64 which is not the architecture being linked (i386):\n/usr/local/Cellar/xz/5.2.2/lib/liblzma.dylib\nUndefined symbols for architecture i386:\n  \"_lzma_auto_decoder\", referenced from:\n      _xz_head in libxml2.a(xzlib.o)\n  \"_lzma_code\", referenced from:\n      _xz_decomp in libxml2.a(xzlib.o)\n  \"_lzma_end\", referenced from:\n      ___libxml2_xzclose in libxml2.a(xzlib.o)\n  \"_lzma_properties_decode\", referenced from:\n      _is_format_lzma in libxml2.a(xzlib.o)\nld: symbol(s) not found for architecture i386\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\nmake[2]: *** [xmllint] Error 1\nmake[1]: *** [all-recursive] Error 1\nmake: *** [all] Error 2\n========================================================================\n*** extconf.rb failed ***\nCould not create Makefile due to some reason, probably lack of necessary\nlibraries and/or headers.  Check the mkmf.log file for more details.  You may\nneed configuration options.\n\nProvided configuration options:\n\t--with-opt-dir\n\t--without-opt-dir\n\t--with-opt-include\n\t--without-opt-include=${opt-dir}/include\n\t--with-opt-lib\n\t--without-opt-lib=${opt-dir}/lib\n\t--with-make-prog\n\t--without-make-prog\n\t--srcdir=.\n\t--curdir\n\t--ruby=/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby\n\t--help\n\t--clean\n\t--use-system-libraries\n\t--enable-static\n\t--disable-static\n\t--with-zlib-dir\n\t--without-zlib-dir\n\t--with-zlib-include\n\t--without-zlib-include=${zlib-dir}/include\n\t--with-zlib-lib\n\t--without-zlib-lib=${zlib-dir}/lib\n\t--enable-cross-build\n\t--disable-cross-build\n/Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:366:in `block in execute': Failed to complete compile task (RuntimeError)\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:in `chdir'\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:in `execute'\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:111:in `compile'\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:150:in `cook'\n\tfrom extconf.rb:365:in `block (2 levels) in process_recipe'\n\tfrom extconf.rb:258:in `block in chdir_for_build'\n\tfrom extconf.rb:257:in `chdir'\n\tfrom extconf.rb:257:in `chdir_for_build'\n\tfrom extconf.rb:364:in `block in process_recipe'\n\tfrom extconf.rb:263:in `tap'\n\tfrom extconf.rb:263:in `process_recipe'\n\tfrom extconf.rb:556:in `<main>'\n\nTo see why this extension failed to compile, please check the mkmf.log which can be found here:\n\n  /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/mkmf.log\n\nextconf failed, exit code 1\n\nGem files will remain installed in /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1 for inspection.\nResults logged to /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/gem_make.out\n\nAn error occurred while installing nokogiri (1.6.8.1), and Bundler cannot continue.\nMake sure that `gem install nokogiri -v '1.6.8.1'` succeeds before bundling.\n```\n\n运行以下命令解决：\n\n```bash\nbrew uninstall --ignore-dependencies xz\n\nbundle update\n```\n","source":"_posts/github-pages-jekyll.md","raw":"---\ntitle: 搭建一个基于 github-pages 和 jekyll 的免费博客\ndate: 2016-12-16 22:43:37\ntags: github-pages\n---\n搭建一个基于 github-pages 和 jekyll 的免费博客\n\n<!-- more -->\n\n> 环境 macOS 10.12.2\n\n# 申请 github-pages\n\n---\n\n> 源地址 https://pages.github.com\n\n1. 创建一个仓库\n在 github 建立一个新仓库，命名为 `username.github.io`，用自己的用户名替换 `username`。**note: 如果用户名不匹配，将会不起作用。**\n\n2. clone 项目 `git clone https://github.com/username/username.github.io`\n\n3. 创建 hello world。`cd username.github.io && echo \"Hello World\" > index.html`\n\n4. push 项目。`git add --all && git commit -m \"Initial commit\" && git push -u origin master`\n\n5. 访问 `http://username.github.io`，就能看到刚刚创建的网站了。\n\n# 搭建 jekyll 环境\n\n---\n\n输入 `ruby --version` 验证是否安装了 `ruby`（Mac 已经预装了）\n\n![ruby_version.png](http://upload-images.jianshu.io/upload_images/1768578-d51c03c25e21438d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n安装 jekyll，输入 `gem install jekyll`\n\n删除之前的 `index.html`，运行 `jekyll new .`，jekyll 就会自动生成一些博客的基础文件和目录。输入 `jekyll serve`，就可以访问了。默认地址 `http://127.0.0.1:4000/`。\n\n还可以在 `_config.yml` 中进行一些个性化配置。\n\n文档地址 `http://jekyllcn.com/`\n\n# 安装模板\n\n---\n\n如果用 jekyll 从头开始搭建一个网站就太费时间了，可以先找一个模板，然后再在上面做修改。\n\n一些模板网站：\n\n - [http://jekyllthemes.org/](http://jekyllthemes.org/)\n - [https://mademistakes.com/work/jekyll-themes/](https://mademistakes.com/work/jekyll-themes/)\n\n我现在用的是第二个网站里的 `Minimal Mistakes Theme` 模板。\n\n效果图：\n\n![minimal_mistakes.png](http://upload-images.jianshu.io/upload_images/1768578-adf87c2843b91b17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 安装过程\n\n将项目 clone 下来，解压放入 github-pages 项目路径。\n\n用以下代码替换 Gemfile 里的内容：\n\n```\nsource \"https://rubygems.org\"\n\ngem \"github-pages\", group: :jekyll_plugins\n\ngroup :jekyll_plugins do\n  gem \"jekyll-paginate\"\n  gem \"jekyll-sitemap\"\n  gem \"jekyll-gist\"\n  gem \"jekyll-feed\"\n  gem \"jemoji\"\nend\n```\n\n然后运行 `bundle update` 安装依赖。\n\n移除以下不需要的文件或文件夹：\n\n- `.editorconfig`\n- `.gitattributes`\n- `.github`\n- `/docs`\n- `/test`\n- `CHANGELOG.md`\n- `minimal-mistakes-jekyll.gemspec`\n- `README.md`\n- `screenshot-layouts.png`\n- `screenshot.png`\n\n最后运行 `bundle exec jekyll serve` 就能在本地启动服务了。访问 `localhost:4000` 就能看到效果。\n\n## 碰到的坑，安装的时候会碰到以下错误\n\n```bash\nGem::Ext::BuildError: ERROR: Failed to build gem native extension.\n\ncurrent directory: /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri\n/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby -r ./siteconf20161208-38005-ye53g2.rb extconf.rb\nchecking if the C compiler accepts ... yes\nchecking if the C compiler accepts -Wno-error=unused-command-line-argument-hard-error-in-future... no\nBuilding nokogiri using packaged libraries.\nUsing mini_portile version 2.1.0\nchecking for iconv.h... yes\nchecking for gzdopen() in -lz... yes\nchecking for iconv... yes\n************************************************************************\nIMPORTANT NOTICE:\n\nBuilding Nokogiri with a packaged version of libxml2-2.9.4.\n\nTeam Nokogiri will keep on doing their best to provide security\nupdates in a timely manner, but if this is a concern for you and want\nto use the system library instead; abort this installation process and\nreinstall nokogiri as follows:\n\n    gem install nokogiri -- --use-system-libraries\n        [--with-xml2-config=/path/to/xml2-config]\n        [--with-xslt-config=/path/to/xslt-config]\n\nIf you are using Bundler, tell it to use the option:\n\n    bundle config build.nokogiri --use-system-libraries\n    bundle install\n\nNote, however, that nokogiri is not fully compatible with arbitrary\nversions of libxml2 provided by OS/package vendors.\n************************************************************************\nExtracting libxml2-2.9.4.tar.gz into tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4... OK\nRunning 'configure' for libxml2 2.9.4... OK\nRunning 'compile' for libxml2 2.9.4... ERROR, review\n'/Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri/tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4/compile.log' to see what happened. Last lines are:\n========================================================================\n  CCLD     libxml2.la\n  CC       testdso.lo\n  CCLD     testdso.la\n  CC       xmllint.o\n  CCLD     xmllint\nld: warning: ignoring file /usr/local/Cellar/xz/5.2.2/lib/liblzma.dylib, file was built for x86_64 which is not the architecture being linked (i386):\n/usr/local/Cellar/xz/5.2.2/lib/liblzma.dylib\nUndefined symbols for architecture i386:\n  \"_lzma_auto_decoder\", referenced from:\n      _xz_head in libxml2.a(xzlib.o)\n  \"_lzma_code\", referenced from:\n      _xz_decomp in libxml2.a(xzlib.o)\n  \"_lzma_end\", referenced from:\n      ___libxml2_xzclose in libxml2.a(xzlib.o)\n  \"_lzma_properties_decode\", referenced from:\n      _is_format_lzma in libxml2.a(xzlib.o)\nld: symbol(s) not found for architecture i386\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\nmake[2]: *** [xmllint] Error 1\nmake[1]: *** [all-recursive] Error 1\nmake: *** [all] Error 2\n========================================================================\n*** extconf.rb failed ***\nCould not create Makefile due to some reason, probably lack of necessary\nlibraries and/or headers.  Check the mkmf.log file for more details.  You may\nneed configuration options.\n\nProvided configuration options:\n\t--with-opt-dir\n\t--without-opt-dir\n\t--with-opt-include\n\t--without-opt-include=${opt-dir}/include\n\t--with-opt-lib\n\t--without-opt-lib=${opt-dir}/lib\n\t--with-make-prog\n\t--without-make-prog\n\t--srcdir=.\n\t--curdir\n\t--ruby=/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby\n\t--help\n\t--clean\n\t--use-system-libraries\n\t--enable-static\n\t--disable-static\n\t--with-zlib-dir\n\t--without-zlib-dir\n\t--with-zlib-include\n\t--without-zlib-include=${zlib-dir}/include\n\t--with-zlib-lib\n\t--without-zlib-lib=${zlib-dir}/lib\n\t--enable-cross-build\n\t--disable-cross-build\n/Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:366:in `block in execute': Failed to complete compile task (RuntimeError)\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:in `chdir'\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:in `execute'\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:111:in `compile'\n\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:150:in `cook'\n\tfrom extconf.rb:365:in `block (2 levels) in process_recipe'\n\tfrom extconf.rb:258:in `block in chdir_for_build'\n\tfrom extconf.rb:257:in `chdir'\n\tfrom extconf.rb:257:in `chdir_for_build'\n\tfrom extconf.rb:364:in `block in process_recipe'\n\tfrom extconf.rb:263:in `tap'\n\tfrom extconf.rb:263:in `process_recipe'\n\tfrom extconf.rb:556:in `<main>'\n\nTo see why this extension failed to compile, please check the mkmf.log which can be found here:\n\n  /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/mkmf.log\n\nextconf failed, exit code 1\n\nGem files will remain installed in /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1 for inspection.\nResults logged to /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/gem_make.out\n\nAn error occurred while installing nokogiri (1.6.8.1), and Bundler cannot continue.\nMake sure that `gem install nokogiri -v '1.6.8.1'` succeeds before bundling.\n```\n\n运行以下命令解决：\n\n```bash\nbrew uninstall --ignore-dependencies xz\n\nbundle update\n```\n","slug":"github-pages-jekyll","published":1,"updated":"2017-05-22T08:04:35.751Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43vzq1c0003np6ugen6i2jp","content":"<p>搭建一个基于 github-pages 和 jekyll 的免费博客</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>环境 macOS 10.12.2</p>\n</blockquote>\n<h1 id=\"申请-github-pages\"><a href=\"#申请-github-pages\" class=\"headerlink\" title=\"申请 github-pages\"></a>申请 github-pages</h1><hr>\n<blockquote>\n<p>源地址 <a href=\"https://pages.github.com\" target=\"_blank\" rel=\"external\">https://pages.github.com</a></p>\n</blockquote>\n<ol>\n<li><p>创建一个仓库<br>在 github 建立一个新仓库，命名为 <code>username.github.io</code>，用自己的用户名替换 <code>username</code>。<strong>note: 如果用户名不匹配，将会不起作用。</strong></p>\n</li>\n<li><p>clone 项目 <code>git clone https://github.com/username/username.github.io</code></p>\n</li>\n<li><p>创建 hello world。<code>cd username.github.io &amp;&amp; echo &quot;Hello World&quot; &gt; index.html</code></p>\n</li>\n<li><p>push 项目。<code>git add --all &amp;&amp; git commit -m &quot;Initial commit&quot; &amp;&amp; git push -u origin master</code></p>\n</li>\n<li><p>访问 <code>http://username.github.io</code>，就能看到刚刚创建的网站了。</p>\n</li>\n</ol>\n<h1 id=\"搭建-jekyll-环境\"><a href=\"#搭建-jekyll-环境\" class=\"headerlink\" title=\"搭建 jekyll 环境\"></a>搭建 jekyll 环境</h1><hr>\n<p>输入 <code>ruby --version</code> 验证是否安装了 <code>ruby</code>（Mac 已经预装了）</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-d51c03c25e21438d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ruby_version.png\"></p>\n<p>安装 jekyll，输入 <code>gem install jekyll</code></p>\n<p>删除之前的 <code>index.html</code>，运行 <code>jekyll new .</code>，jekyll 就会自动生成一些博客的基础文件和目录。输入 <code>jekyll serve</code>，就可以访问了。默认地址 <code>http://127.0.0.1:4000/</code>。</p>\n<p>还可以在 <code>_config.yml</code> 中进行一些个性化配置。</p>\n<p>文档地址 <code>http://jekyllcn.com/</code></p>\n<h1 id=\"安装模板\"><a href=\"#安装模板\" class=\"headerlink\" title=\"安装模板\"></a>安装模板</h1><hr>\n<p>如果用 jekyll 从头开始搭建一个网站就太费时间了，可以先找一个模板，然后再在上面做修改。</p>\n<p>一些模板网站：</p>\n<ul>\n<li><a href=\"http://jekyllthemes.org/\" target=\"_blank\" rel=\"external\">http://jekyllthemes.org/</a></li>\n<li><a href=\"https://mademistakes.com/work/jekyll-themes/\" target=\"_blank\" rel=\"external\">https://mademistakes.com/work/jekyll-themes/</a></li>\n</ul>\n<p>我现在用的是第二个网站里的 <code>Minimal Mistakes Theme</code> 模板。</p>\n<p>效果图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-adf87c2843b91b17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"minimal_mistakes.png\"></p>\n<h2 id=\"安装过程\"><a href=\"#安装过程\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h2><p>将项目 clone 下来，解压放入 github-pages 项目路径。</p>\n<p>用以下代码替换 Gemfile 里的内容：</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">source <span class=\"string\">\"https://rubygems.org\"</span></div><div class=\"line\"></div><div class=\"line\">gem <span class=\"string\">\"github-pages\"</span>, <span class=\"symbol\">group:</span> <span class=\"symbol\">:jekyll_plugins</span></div><div class=\"line\"></div><div class=\"line\">group <span class=\"symbol\">:jekyll_plugins</span> <span class=\"keyword\">do</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-paginate\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-sitemap\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-gist\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-feed\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jemoji\"</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n<p>然后运行 <code>bundle update</code> 安装依赖。</p>\n<p>移除以下不需要的文件或文件夹：</p>\n<ul>\n<li><code>.editorconfig</code></li>\n<li><code>.gitattributes</code></li>\n<li><code>.github</code></li>\n<li><code>/docs</code></li>\n<li><code>/test</code></li>\n<li><code>CHANGELOG.md</code></li>\n<li><code>minimal-mistakes-jekyll.gemspec</code></li>\n<li><code>README.md</code></li>\n<li><code>screenshot-layouts.png</code></li>\n<li><code>screenshot.png</code></li>\n</ul>\n<p>最后运行 <code>bundle exec jekyll serve</code> 就能在本地启动服务了。访问 <code>localhost:4000</code> 就能看到效果。</p>\n<h2 id=\"碰到的坑，安装的时候会碰到以下错误\"><a href=\"#碰到的坑，安装的时候会碰到以下错误\" class=\"headerlink\" title=\"碰到的坑，安装的时候会碰到以下错误\"></a>碰到的坑，安装的时候会碰到以下错误</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div></pre></td><td class=\"code\"><pre><div class=\"line\">Gem::Ext::BuildError: ERROR: Failed to build gem native extension.</div><div class=\"line\"></div><div class=\"line\">current directory: /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri</div><div class=\"line\">/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby -r ./siteconf20161208-38005-ye53g2.rb extconf.rb</div><div class=\"line\">checking <span class=\"keyword\">if</span> the C compiler accepts ... yes</div><div class=\"line\">checking <span class=\"keyword\">if</span> the C compiler accepts -Wno-error=unused-command-line-argument-hard-error-in-future... no</div><div class=\"line\">Building nokogiri using packaged libraries.</div><div class=\"line\">Using mini_portile version 2.1.0</div><div class=\"line\">checking <span class=\"keyword\">for</span> iconv.h... yes</div><div class=\"line\">checking <span class=\"keyword\">for</span> gzdopen() <span class=\"keyword\">in</span> -lz... yes</div><div class=\"line\">checking <span class=\"keyword\">for</span> iconv... yes</div><div class=\"line\">************************************************************************</div><div class=\"line\">IMPORTANT NOTICE:</div><div class=\"line\"></div><div class=\"line\">Building Nokogiri with a packaged version of libxml2-2.9.4.</div><div class=\"line\"></div><div class=\"line\">Team Nokogiri will keep on doing their best to provide security</div><div class=\"line\">updates <span class=\"keyword\">in</span> a timely manner, but <span class=\"keyword\">if</span> this is a concern <span class=\"keyword\">for</span> you and want</div><div class=\"line\">to use the system library instead; abort this installation process and</div><div class=\"line\">reinstall nokogiri as follows:</div><div class=\"line\"></div><div class=\"line\">    gem install nokogiri -- --use-system-libraries</div><div class=\"line\">        [--with-xml2-config=/path/to/xml2-config]</div><div class=\"line\">        [--with-xslt-config=/path/to/xslt-config]</div><div class=\"line\"></div><div class=\"line\">If you are using Bundler, tell it to use the option:</div><div class=\"line\"></div><div class=\"line\">    bundle config build.nokogiri --use-system-libraries</div><div class=\"line\">    bundle install</div><div class=\"line\"></div><div class=\"line\">Note, however, that nokogiri is not fully compatible with arbitrary</div><div class=\"line\">versions of libxml2 provided by OS/package vendors.</div><div class=\"line\">************************************************************************</div><div class=\"line\">Extracting libxml2-2.9.4.tar.gz into tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4... OK</div><div class=\"line\">Running <span class=\"string\">'configure'</span> <span class=\"keyword\">for</span> libxml2 2.9.4... OK</div><div class=\"line\">Running <span class=\"string\">'compile'</span> <span class=\"keyword\">for</span> libxml2 2.9.4... ERROR, review</div><div class=\"line\"><span class=\"string\">'/Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri/tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4/compile.log'</span> to see what happened. Last lines are:</div><div class=\"line\">========================================================================</div><div class=\"line\">  CCLD     libxml2.la</div><div class=\"line\">  CC       testdso.lo</div><div class=\"line\">  CCLD     testdso.la</div><div class=\"line\">  CC       xmllint.o</div><div class=\"line\">  CCLD     xmllint</div><div class=\"line\">ld: warning: ignoring file /usr/<span class=\"built_in\">local</span>/Cellar/xz/5.2.2/lib/liblzma.dylib, file was built <span class=\"keyword\">for</span> x86_64 <span class=\"built_in\">which</span> is not the architecture being linked (i386):</div><div class=\"line\">/usr/<span class=\"built_in\">local</span>/Cellar/xz/5.2.2/lib/liblzma.dylib</div><div class=\"line\">Undefined symbols <span class=\"keyword\">for</span> architecture i386:</div><div class=\"line\">  <span class=\"string\">\"_lzma_auto_decoder\"</span>, referenced from:</div><div class=\"line\">      _xz_head <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">  <span class=\"string\">\"_lzma_code\"</span>, referenced from:</div><div class=\"line\">      _xz_decomp <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">  <span class=\"string\">\"_lzma_end\"</span>, referenced from:</div><div class=\"line\">      ___libxml2_xzclose <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">  <span class=\"string\">\"_lzma_properties_decode\"</span>, referenced from:</div><div class=\"line\">      _is_format_lzma <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">ld: symbol(s) not found <span class=\"keyword\">for</span> architecture i386</div><div class=\"line\">clang: error: linker <span class=\"built_in\">command</span> failed with <span class=\"built_in\">exit</span> code 1 (use -v to see invocation)</div><div class=\"line\">make[2]: *** [xmllint] Error 1</div><div class=\"line\">make[1]: *** [all-recursive] Error 1</div><div class=\"line\">make: *** [all] Error 2</div><div class=\"line\">========================================================================</div><div class=\"line\">*** extconf.rb failed ***</div><div class=\"line\">Could not create Makefile due to some reason, probably lack of necessary</div><div class=\"line\">libraries and/or headers.  Check the mkmf.log file <span class=\"keyword\">for</span> more details.  You may</div><div class=\"line\">need configuration options.</div><div class=\"line\"></div><div class=\"line\">Provided configuration options:</div><div class=\"line\">\t--with-opt-dir</div><div class=\"line\">\t--without-opt-dir</div><div class=\"line\">\t--with-opt-include</div><div class=\"line\">\t--without-opt-include=<span class=\"variable\">$&#123;opt-dir&#125;</span>/include</div><div class=\"line\">\t--with-opt-lib</div><div class=\"line\">\t--without-opt-lib=<span class=\"variable\">$&#123;opt-dir&#125;</span>/lib</div><div class=\"line\">\t--with-make-prog</div><div class=\"line\">\t--without-make-prog</div><div class=\"line\">\t--srcdir=.</div><div class=\"line\">\t--curdir</div><div class=\"line\">\t--ruby=/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby</div><div class=\"line\">\t--help</div><div class=\"line\">\t--clean</div><div class=\"line\">\t--use-system-libraries</div><div class=\"line\">\t--enable-static</div><div class=\"line\">\t--disable-static</div><div class=\"line\">\t--with-zlib-dir</div><div class=\"line\">\t--without-zlib-dir</div><div class=\"line\">\t--with-zlib-include</div><div class=\"line\">\t--without-zlib-include=<span class=\"variable\">$&#123;zlib-dir&#125;</span>/include</div><div class=\"line\">\t--with-zlib-lib</div><div class=\"line\">\t--without-zlib-lib=<span class=\"variable\">$&#123;zlib-dir&#125;</span>/lib</div><div class=\"line\">\t--enable-cross-build</div><div class=\"line\">\t--disable-cross-build</div><div class=\"line\">/Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:366:<span class=\"keyword\">in</span> `block <span class=\"keyword\">in</span> execute<span class=\"string\">': Failed to complete compile task (RuntimeError)</span></div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:in `chdir'</div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:<span class=\"keyword\">in</span> `execute<span class=\"string\">'</span></div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:111:in `compile'</div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:150:<span class=\"keyword\">in</span> `cook<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:365:in `block (2 levels) in process_recipe'</div><div class=\"line\">\tfrom extconf.rb:258:<span class=\"keyword\">in</span> `block <span class=\"keyword\">in</span> chdir_for_build<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:257:in `chdir'</div><div class=\"line\">\tfrom extconf.rb:257:<span class=\"keyword\">in</span> `chdir_for_build<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:364:in `block in process_recipe'</div><div class=\"line\">\tfrom extconf.rb:263:<span class=\"keyword\">in</span> `tap<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:263:in `process_recipe'</div><div class=\"line\">\tfrom extconf.rb:556:<span class=\"keyword\">in</span> `&lt;main&gt;<span class=\"string\">'</span></div><div class=\"line\"></div><div class=\"line\">To see why this extension failed to compile, please check the mkmf.log which can be found here:</div><div class=\"line\"></div><div class=\"line\">  /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/mkmf.log</div><div class=\"line\"></div><div class=\"line\">extconf failed, exit code 1</div><div class=\"line\"></div><div class=\"line\">Gem files will remain installed in /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1 for inspection.</div><div class=\"line\">Results logged to /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/gem_make.out</div><div class=\"line\"></div><div class=\"line\">An error occurred while installing nokogiri (1.6.8.1), and Bundler cannot continue.</div><div class=\"line\">Make sure that `gem install nokogiri -v '1.6.8.1<span class=\"string\">'` succeeds before bundling.</span></div></pre></td></tr></table></figure>\n<p>运行以下命令解决：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew uninstall --ignore-dependencies xz</div><div class=\"line\"></div><div class=\"line\">bundle update</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>搭建一个基于 github-pages 和 jekyll 的免费博客</p>","more":"<blockquote>\n<p>环境 macOS 10.12.2</p>\n</blockquote>\n<h1 id=\"申请-github-pages\"><a href=\"#申请-github-pages\" class=\"headerlink\" title=\"申请 github-pages\"></a>申请 github-pages</h1><hr>\n<blockquote>\n<p>源地址 <a href=\"https://pages.github.com\" target=\"_blank\" rel=\"external\">https://pages.github.com</a></p>\n</blockquote>\n<ol>\n<li><p>创建一个仓库<br>在 github 建立一个新仓库，命名为 <code>username.github.io</code>，用自己的用户名替换 <code>username</code>。<strong>note: 如果用户名不匹配，将会不起作用。</strong></p>\n</li>\n<li><p>clone 项目 <code>git clone https://github.com/username/username.github.io</code></p>\n</li>\n<li><p>创建 hello world。<code>cd username.github.io &amp;&amp; echo &quot;Hello World&quot; &gt; index.html</code></p>\n</li>\n<li><p>push 项目。<code>git add --all &amp;&amp; git commit -m &quot;Initial commit&quot; &amp;&amp; git push -u origin master</code></p>\n</li>\n<li><p>访问 <code>http://username.github.io</code>，就能看到刚刚创建的网站了。</p>\n</li>\n</ol>\n<h1 id=\"搭建-jekyll-环境\"><a href=\"#搭建-jekyll-环境\" class=\"headerlink\" title=\"搭建 jekyll 环境\"></a>搭建 jekyll 环境</h1><hr>\n<p>输入 <code>ruby --version</code> 验证是否安装了 <code>ruby</code>（Mac 已经预装了）</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-d51c03c25e21438d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ruby_version.png\"></p>\n<p>安装 jekyll，输入 <code>gem install jekyll</code></p>\n<p>删除之前的 <code>index.html</code>，运行 <code>jekyll new .</code>，jekyll 就会自动生成一些博客的基础文件和目录。输入 <code>jekyll serve</code>，就可以访问了。默认地址 <code>http://127.0.0.1:4000/</code>。</p>\n<p>还可以在 <code>_config.yml</code> 中进行一些个性化配置。</p>\n<p>文档地址 <code>http://jekyllcn.com/</code></p>\n<h1 id=\"安装模板\"><a href=\"#安装模板\" class=\"headerlink\" title=\"安装模板\"></a>安装模板</h1><hr>\n<p>如果用 jekyll 从头开始搭建一个网站就太费时间了，可以先找一个模板，然后再在上面做修改。</p>\n<p>一些模板网站：</p>\n<ul>\n<li><a href=\"http://jekyllthemes.org/\" target=\"_blank\" rel=\"external\">http://jekyllthemes.org/</a></li>\n<li><a href=\"https://mademistakes.com/work/jekyll-themes/\" target=\"_blank\" rel=\"external\">https://mademistakes.com/work/jekyll-themes/</a></li>\n</ul>\n<p>我现在用的是第二个网站里的 <code>Minimal Mistakes Theme</code> 模板。</p>\n<p>效果图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1768578-adf87c2843b91b17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"minimal_mistakes.png\"></p>\n<h2 id=\"安装过程\"><a href=\"#安装过程\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h2><p>将项目 clone 下来，解压放入 github-pages 项目路径。</p>\n<p>用以下代码替换 Gemfile 里的内容：</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">source <span class=\"string\">\"https://rubygems.org\"</span></div><div class=\"line\"></div><div class=\"line\">gem <span class=\"string\">\"github-pages\"</span>, <span class=\"symbol\">group:</span> <span class=\"symbol\">:jekyll_plugins</span></div><div class=\"line\"></div><div class=\"line\">group <span class=\"symbol\">:jekyll_plugins</span> <span class=\"keyword\">do</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-paginate\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-sitemap\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-gist\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jekyll-feed\"</span></div><div class=\"line\">  gem <span class=\"string\">\"jemoji\"</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n<p>然后运行 <code>bundle update</code> 安装依赖。</p>\n<p>移除以下不需要的文件或文件夹：</p>\n<ul>\n<li><code>.editorconfig</code></li>\n<li><code>.gitattributes</code></li>\n<li><code>.github</code></li>\n<li><code>/docs</code></li>\n<li><code>/test</code></li>\n<li><code>CHANGELOG.md</code></li>\n<li><code>minimal-mistakes-jekyll.gemspec</code></li>\n<li><code>README.md</code></li>\n<li><code>screenshot-layouts.png</code></li>\n<li><code>screenshot.png</code></li>\n</ul>\n<p>最后运行 <code>bundle exec jekyll serve</code> 就能在本地启动服务了。访问 <code>localhost:4000</code> 就能看到效果。</p>\n<h2 id=\"碰到的坑，安装的时候会碰到以下错误\"><a href=\"#碰到的坑，安装的时候会碰到以下错误\" class=\"headerlink\" title=\"碰到的坑，安装的时候会碰到以下错误\"></a>碰到的坑，安装的时候会碰到以下错误</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div></pre></td><td class=\"code\"><pre><div class=\"line\">Gem::Ext::BuildError: ERROR: Failed to build gem native extension.</div><div class=\"line\"></div><div class=\"line\">current directory: /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri</div><div class=\"line\">/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby -r ./siteconf20161208-38005-ye53g2.rb extconf.rb</div><div class=\"line\">checking <span class=\"keyword\">if</span> the C compiler accepts ... yes</div><div class=\"line\">checking <span class=\"keyword\">if</span> the C compiler accepts -Wno-error=unused-command-line-argument-hard-error-in-future... no</div><div class=\"line\">Building nokogiri using packaged libraries.</div><div class=\"line\">Using mini_portile version 2.1.0</div><div class=\"line\">checking <span class=\"keyword\">for</span> iconv.h... yes</div><div class=\"line\">checking <span class=\"keyword\">for</span> gzdopen() <span class=\"keyword\">in</span> -lz... yes</div><div class=\"line\">checking <span class=\"keyword\">for</span> iconv... yes</div><div class=\"line\">************************************************************************</div><div class=\"line\">IMPORTANT NOTICE:</div><div class=\"line\"></div><div class=\"line\">Building Nokogiri with a packaged version of libxml2-2.9.4.</div><div class=\"line\"></div><div class=\"line\">Team Nokogiri will keep on doing their best to provide security</div><div class=\"line\">updates <span class=\"keyword\">in</span> a timely manner, but <span class=\"keyword\">if</span> this is a concern <span class=\"keyword\">for</span> you and want</div><div class=\"line\">to use the system library instead; abort this installation process and</div><div class=\"line\">reinstall nokogiri as follows:</div><div class=\"line\"></div><div class=\"line\">    gem install nokogiri -- --use-system-libraries</div><div class=\"line\">        [--with-xml2-config=/path/to/xml2-config]</div><div class=\"line\">        [--with-xslt-config=/path/to/xslt-config]</div><div class=\"line\"></div><div class=\"line\">If you are using Bundler, tell it to use the option:</div><div class=\"line\"></div><div class=\"line\">    bundle config build.nokogiri --use-system-libraries</div><div class=\"line\">    bundle install</div><div class=\"line\"></div><div class=\"line\">Note, however, that nokogiri is not fully compatible with arbitrary</div><div class=\"line\">versions of libxml2 provided by OS/package vendors.</div><div class=\"line\">************************************************************************</div><div class=\"line\">Extracting libxml2-2.9.4.tar.gz into tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4... OK</div><div class=\"line\">Running <span class=\"string\">'configure'</span> <span class=\"keyword\">for</span> libxml2 2.9.4... OK</div><div class=\"line\">Running <span class=\"string\">'compile'</span> <span class=\"keyword\">for</span> libxml2 2.9.4... ERROR, review</div><div class=\"line\"><span class=\"string\">'/Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1/ext/nokogiri/tmp/x86_64-apple-darwin16/ports/libxml2/2.9.4/compile.log'</span> to see what happened. Last lines are:</div><div class=\"line\">========================================================================</div><div class=\"line\">  CCLD     libxml2.la</div><div class=\"line\">  CC       testdso.lo</div><div class=\"line\">  CCLD     testdso.la</div><div class=\"line\">  CC       xmllint.o</div><div class=\"line\">  CCLD     xmllint</div><div class=\"line\">ld: warning: ignoring file /usr/<span class=\"built_in\">local</span>/Cellar/xz/5.2.2/lib/liblzma.dylib, file was built <span class=\"keyword\">for</span> x86_64 <span class=\"built_in\">which</span> is not the architecture being linked (i386):</div><div class=\"line\">/usr/<span class=\"built_in\">local</span>/Cellar/xz/5.2.2/lib/liblzma.dylib</div><div class=\"line\">Undefined symbols <span class=\"keyword\">for</span> architecture i386:</div><div class=\"line\">  <span class=\"string\">\"_lzma_auto_decoder\"</span>, referenced from:</div><div class=\"line\">      _xz_head <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">  <span class=\"string\">\"_lzma_code\"</span>, referenced from:</div><div class=\"line\">      _xz_decomp <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">  <span class=\"string\">\"_lzma_end\"</span>, referenced from:</div><div class=\"line\">      ___libxml2_xzclose <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">  <span class=\"string\">\"_lzma_properties_decode\"</span>, referenced from:</div><div class=\"line\">      _is_format_lzma <span class=\"keyword\">in</span> libxml2.a(xzlib.o)</div><div class=\"line\">ld: symbol(s) not found <span class=\"keyword\">for</span> architecture i386</div><div class=\"line\">clang: error: linker <span class=\"built_in\">command</span> failed with <span class=\"built_in\">exit</span> code 1 (use -v to see invocation)</div><div class=\"line\">make[2]: *** [xmllint] Error 1</div><div class=\"line\">make[1]: *** [all-recursive] Error 1</div><div class=\"line\">make: *** [all] Error 2</div><div class=\"line\">========================================================================</div><div class=\"line\">*** extconf.rb failed ***</div><div class=\"line\">Could not create Makefile due to some reason, probably lack of necessary</div><div class=\"line\">libraries and/or headers.  Check the mkmf.log file <span class=\"keyword\">for</span> more details.  You may</div><div class=\"line\">need configuration options.</div><div class=\"line\"></div><div class=\"line\">Provided configuration options:</div><div class=\"line\">\t--with-opt-dir</div><div class=\"line\">\t--without-opt-dir</div><div class=\"line\">\t--with-opt-include</div><div class=\"line\">\t--without-opt-include=<span class=\"variable\">$&#123;opt-dir&#125;</span>/include</div><div class=\"line\">\t--with-opt-lib</div><div class=\"line\">\t--without-opt-lib=<span class=\"variable\">$&#123;opt-dir&#125;</span>/lib</div><div class=\"line\">\t--with-make-prog</div><div class=\"line\">\t--without-make-prog</div><div class=\"line\">\t--srcdir=.</div><div class=\"line\">\t--curdir</div><div class=\"line\">\t--ruby=/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby</div><div class=\"line\">\t--help</div><div class=\"line\">\t--clean</div><div class=\"line\">\t--use-system-libraries</div><div class=\"line\">\t--enable-static</div><div class=\"line\">\t--disable-static</div><div class=\"line\">\t--with-zlib-dir</div><div class=\"line\">\t--without-zlib-dir</div><div class=\"line\">\t--with-zlib-include</div><div class=\"line\">\t--without-zlib-include=<span class=\"variable\">$&#123;zlib-dir&#125;</span>/include</div><div class=\"line\">\t--with-zlib-lib</div><div class=\"line\">\t--without-zlib-lib=<span class=\"variable\">$&#123;zlib-dir&#125;</span>/lib</div><div class=\"line\">\t--enable-cross-build</div><div class=\"line\">\t--disable-cross-build</div><div class=\"line\">/Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:366:<span class=\"keyword\">in</span> `block <span class=\"keyword\">in</span> execute<span class=\"string\">': Failed to complete compile task (RuntimeError)</span></div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:in `chdir'</div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:337:<span class=\"keyword\">in</span> `execute<span class=\"string\">'</span></div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:111:in `compile'</div><div class=\"line\">\tfrom /Library/Ruby/Gems/2.0.0/gems/mini_portile2-2.1.0/lib/mini_portile2/mini_portile.rb:150:<span class=\"keyword\">in</span> `cook<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:365:in `block (2 levels) in process_recipe'</div><div class=\"line\">\tfrom extconf.rb:258:<span class=\"keyword\">in</span> `block <span class=\"keyword\">in</span> chdir_for_build<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:257:in `chdir'</div><div class=\"line\">\tfrom extconf.rb:257:<span class=\"keyword\">in</span> `chdir_for_build<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:364:in `block in process_recipe'</div><div class=\"line\">\tfrom extconf.rb:263:<span class=\"keyword\">in</span> `tap<span class=\"string\">'</span></div><div class=\"line\">\tfrom extconf.rb:263:in `process_recipe'</div><div class=\"line\">\tfrom extconf.rb:556:<span class=\"keyword\">in</span> `&lt;main&gt;<span class=\"string\">'</span></div><div class=\"line\"></div><div class=\"line\">To see why this extension failed to compile, please check the mkmf.log which can be found here:</div><div class=\"line\"></div><div class=\"line\">  /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/mkmf.log</div><div class=\"line\"></div><div class=\"line\">extconf failed, exit code 1</div><div class=\"line\"></div><div class=\"line\">Gem files will remain installed in /Library/Ruby/Gems/2.0.0/gems/nokogiri-1.6.8.1 for inspection.</div><div class=\"line\">Results logged to /Library/Ruby/Gems/2.0.0/extensions/universal-darwin-16/2.0.0/nokogiri-1.6.8.1/gem_make.out</div><div class=\"line\"></div><div class=\"line\">An error occurred while installing nokogiri (1.6.8.1), and Bundler cannot continue.</div><div class=\"line\">Make sure that `gem install nokogiri -v '1.6.8.1<span class=\"string\">'` succeeds before bundling.</span></div></pre></td></tr></table></figure>\n<p>运行以下命令解决：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew uninstall --ignore-dependencies xz</div><div class=\"line\"></div><div class=\"line\">bundle update</div></pre></td></tr></table></figure>"},{"title":"RandomAccess 接口使用","date":"2016-03-19T07:41:42.000Z","_content":"\nList 实现所使用的标记接口，用来表明其支持快速（通常是固定时间）随机访问。此接口的主要目的是允许一般的算法更改其行为，从而在将其应用到随机或连续访问列表时能提供良好的性能。\n\n<!--more-->\n\n##用法\n\nRandom Access List(随机访问列表)如 `ArrayList` 要实现此接口，Sequence Access List(顺序访问列表)如 `LinkedList` 不要实现。\n因为两者的高效遍历算法不同\n\n通常做法，遍历前先判断：\n\n```java\nif (list instance of RandomAccess) {       \n  for(int m = 0; m < list.size(); m++){}   \n}else{       \n  Iterator iter = list.iterator();       \n  while(iter.hasNext()){}   \n}\n```\n\n随机访问列表使用循环遍历，顺序访问列表使用迭代器遍历。\n\n##JDK 定义\n\n`List` 实现使用的标记接口，用来表明支持快速(通常是固定时间)随机访问。这个接口的主要目的是允许一般的算法更改它们的行为，从而在随机或连续访问列表时提供更好的性能。\n\n将操作随机访问列表(比如 `ArrayList`)的最好的算法应用到顺序访问列表(比如 `LinkedList`)时，会产生二次项行为。鼓励一般的列表算法检查给定的列表是否 `instanceof` 这个接口，防止在顺序访问列表时使用较差的算法，如果需要保证可接受的性能时可以更改算法。\n\n公认的是随机和顺序访问的区别通常是模糊的。例如，当一些 `List` 实现很大时会提供渐进的线性访问时间，但实际是固定的访问时间。这样的 `List` 实现通常应该实现此接口。通常来说，一个 `List` 的实现类应该实现这个接口如果\n\n```java\nfor (int i=0, n=list.size(); i < n; i++)\n        list.get(i);\n```\n\n比\n\n```java\n for (Iterator i=list.iterator(); i.hasNext(); )\n          i.next();\n```\n\n快\n\n##验证事例\n\n```java\npackage com.ld.practice.arraylist;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.RandomAccess;\n\n/**\n * 测试Random Access List(随机访问列表)如 ArrayList 和 Sequence Access List(顺序访问列表)如 LinkedList </br>\n * 不同遍历算法的效率</br>\n * 结论：前者用循环，后者用迭代器\n */\n@SuppressWarnings({\"rawtypes\", \"unchecked\"})\npublic class ListLoopTest {\n\n\t/**\n\t * 初始化 list，添加n个元素\n\t *\n\t * @param list\n\t * @return\n\t */\n\tpublic static <T> List initList(List list, int n) {\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tlist.add(i);\n\t\treturn list;\n\t}\n\n\t/**\n\t * 遍历 list，判断是否实现 RandomAccess 接口来使用不同的遍历方法\n\t *\n\t * @param list\n\t */\n\tpublic static void accessList(List list) {\n\t\tlong startTime = System.currentTimeMillis();\n\n\t\tif (list instanceof RandomAccess) {\n\t\t\tSystem.out.println(\"实现了 RandomAccess 接口...\");\n\t\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\t\tlist.get(i);\n\t\t\t}\n\t\t} else {\n\t\t\tSystem.out.println(\"没实现 RandomAccess 接口...\");\n\t\t\tfor (Iterator iterator = list.iterator(); iterator.hasNext();) {\n\t\t\t\titerator.next();\n\t\t\t}\n\t\t}\n\n\t\tlong endTime = System.currentTimeMillis();\n\t\tSystem.out.println(\"遍历时间：\" + (endTime - startTime));\n\t}\n\n\t/**\n\t * loop 遍历 list\n\t */\n\tpublic static void accessListByLoop(List list) {\n\t\tlong startTime = System.currentTimeMillis();\n\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tlist.get(i);\n\t\t}\n\n\t\tlong endTime = System.currentTimeMillis();\n\t\tSystem.out.println(\"loop遍历时间：\" + (endTime - startTime));\n\t}\n\n\t/**\n\t * 迭代器遍历\n\t */\n\tpublic static void accessListByIterator(List list) {\n\t\tlong startTime = System.currentTimeMillis();\n\n\t\tfor (Iterator iterator = list.iterator(); iterator.hasNext();) {\n\t\t\titerator.next();\n\t\t}\n\n\t\tlong endTime = System.currentTimeMillis();\n\t\tSystem.out.println(\"Iterator遍历时间：\" + (endTime - startTime));\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tArrayList<Integer> aList = (ArrayList<Integer>) initList(new ArrayList<>(), 2000000);\n\t\tLinkedList<Integer> lList = (LinkedList<Integer>) initList(new LinkedList<>(), 50000);\n\n\t\taccessList(aList);\n\t\taccessList(lList);\n\n\t\tSystem.out.println(\"ArrayList\");\n\t\taccessListByLoop(aList);\n\t\taccessListByIterator(aList);\n\n\t\tSystem.out.println(\"LinkedList\");\n\t\taccessListByLoop(lList);\n\t\taccessListByIterator(lList);\n\t}\n\n  /*\n  实现了 RandomAccess 接口...\n  遍历时间：8\n  没实现 RandomAccess 接口...\n  遍历时间：2\n  ArrayList\n  loop遍历时间：5\n  Iterator遍历时间：8\n  LinkedList\n  loop遍历时间：1532\n  Iterator遍历时间：1\n  */\n}\n```\n","source":"_posts/random-access.md","raw":"---\ntitle: RandomAccess 接口使用\ndate: 2016-03-19 15:41:42\ntags: java\n---\n\nList 实现所使用的标记接口，用来表明其支持快速（通常是固定时间）随机访问。此接口的主要目的是允许一般的算法更改其行为，从而在将其应用到随机或连续访问列表时能提供良好的性能。\n\n<!--more-->\n\n##用法\n\nRandom Access List(随机访问列表)如 `ArrayList` 要实现此接口，Sequence Access List(顺序访问列表)如 `LinkedList` 不要实现。\n因为两者的高效遍历算法不同\n\n通常做法，遍历前先判断：\n\n```java\nif (list instance of RandomAccess) {       \n  for(int m = 0; m < list.size(); m++){}   \n}else{       \n  Iterator iter = list.iterator();       \n  while(iter.hasNext()){}   \n}\n```\n\n随机访问列表使用循环遍历，顺序访问列表使用迭代器遍历。\n\n##JDK 定义\n\n`List` 实现使用的标记接口，用来表明支持快速(通常是固定时间)随机访问。这个接口的主要目的是允许一般的算法更改它们的行为，从而在随机或连续访问列表时提供更好的性能。\n\n将操作随机访问列表(比如 `ArrayList`)的最好的算法应用到顺序访问列表(比如 `LinkedList`)时，会产生二次项行为。鼓励一般的列表算法检查给定的列表是否 `instanceof` 这个接口，防止在顺序访问列表时使用较差的算法，如果需要保证可接受的性能时可以更改算法。\n\n公认的是随机和顺序访问的区别通常是模糊的。例如，当一些 `List` 实现很大时会提供渐进的线性访问时间，但实际是固定的访问时间。这样的 `List` 实现通常应该实现此接口。通常来说，一个 `List` 的实现类应该实现这个接口如果\n\n```java\nfor (int i=0, n=list.size(); i < n; i++)\n        list.get(i);\n```\n\n比\n\n```java\n for (Iterator i=list.iterator(); i.hasNext(); )\n          i.next();\n```\n\n快\n\n##验证事例\n\n```java\npackage com.ld.practice.arraylist;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.RandomAccess;\n\n/**\n * 测试Random Access List(随机访问列表)如 ArrayList 和 Sequence Access List(顺序访问列表)如 LinkedList </br>\n * 不同遍历算法的效率</br>\n * 结论：前者用循环，后者用迭代器\n */\n@SuppressWarnings({\"rawtypes\", \"unchecked\"})\npublic class ListLoopTest {\n\n\t/**\n\t * 初始化 list，添加n个元素\n\t *\n\t * @param list\n\t * @return\n\t */\n\tpublic static <T> List initList(List list, int n) {\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tlist.add(i);\n\t\treturn list;\n\t}\n\n\t/**\n\t * 遍历 list，判断是否实现 RandomAccess 接口来使用不同的遍历方法\n\t *\n\t * @param list\n\t */\n\tpublic static void accessList(List list) {\n\t\tlong startTime = System.currentTimeMillis();\n\n\t\tif (list instanceof RandomAccess) {\n\t\t\tSystem.out.println(\"实现了 RandomAccess 接口...\");\n\t\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\t\tlist.get(i);\n\t\t\t}\n\t\t} else {\n\t\t\tSystem.out.println(\"没实现 RandomAccess 接口...\");\n\t\t\tfor (Iterator iterator = list.iterator(); iterator.hasNext();) {\n\t\t\t\titerator.next();\n\t\t\t}\n\t\t}\n\n\t\tlong endTime = System.currentTimeMillis();\n\t\tSystem.out.println(\"遍历时间：\" + (endTime - startTime));\n\t}\n\n\t/**\n\t * loop 遍历 list\n\t */\n\tpublic static void accessListByLoop(List list) {\n\t\tlong startTime = System.currentTimeMillis();\n\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tlist.get(i);\n\t\t}\n\n\t\tlong endTime = System.currentTimeMillis();\n\t\tSystem.out.println(\"loop遍历时间：\" + (endTime - startTime));\n\t}\n\n\t/**\n\t * 迭代器遍历\n\t */\n\tpublic static void accessListByIterator(List list) {\n\t\tlong startTime = System.currentTimeMillis();\n\n\t\tfor (Iterator iterator = list.iterator(); iterator.hasNext();) {\n\t\t\titerator.next();\n\t\t}\n\n\t\tlong endTime = System.currentTimeMillis();\n\t\tSystem.out.println(\"Iterator遍历时间：\" + (endTime - startTime));\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tArrayList<Integer> aList = (ArrayList<Integer>) initList(new ArrayList<>(), 2000000);\n\t\tLinkedList<Integer> lList = (LinkedList<Integer>) initList(new LinkedList<>(), 50000);\n\n\t\taccessList(aList);\n\t\taccessList(lList);\n\n\t\tSystem.out.println(\"ArrayList\");\n\t\taccessListByLoop(aList);\n\t\taccessListByIterator(aList);\n\n\t\tSystem.out.println(\"LinkedList\");\n\t\taccessListByLoop(lList);\n\t\taccessListByIterator(lList);\n\t}\n\n  /*\n  实现了 RandomAccess 接口...\n  遍历时间：8\n  没实现 RandomAccess 接口...\n  遍历时间：2\n  ArrayList\n  loop遍历时间：5\n  Iterator遍历时间：8\n  LinkedList\n  loop遍历时间：1532\n  Iterator遍历时间：1\n  */\n}\n```\n","slug":"random-access","published":1,"updated":"2017-05-22T08:04:24.331Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43vzq1g0005np6urax7mvi7","content":"<p>List 实现所使用的标记接口，用来表明其支持快速（通常是固定时间）随机访问。此接口的主要目的是允许一般的算法更改其行为，从而在将其应用到随机或连续访问列表时能提供良好的性能。</p>\n<a id=\"more\"></a>\n<p>##用法</p>\n<p>Random Access List(随机访问列表)如 <code>ArrayList</code> 要实现此接口，Sequence Access List(顺序访问列表)如 <code>LinkedList</code> 不要实现。<br>因为两者的高效遍历算法不同</p>\n<p>通常做法，遍历前先判断：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (list instance of RandomAccess) &#123;       </div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> m = <span class=\"number\">0</span>; m &lt; list.size(); m++)&#123;&#125;   </div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;       </div><div class=\"line\">  Iterator iter = list.iterator();       </div><div class=\"line\">  <span class=\"keyword\">while</span>(iter.hasNext())&#123;&#125;   </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>随机访问列表使用循环遍历，顺序访问列表使用迭代器遍历。</p>\n<p>##JDK 定义</p>\n<p><code>List</code> 实现使用的标记接口，用来表明支持快速(通常是固定时间)随机访问。这个接口的主要目的是允许一般的算法更改它们的行为，从而在随机或连续访问列表时提供更好的性能。</p>\n<p>将操作随机访问列表(比如 <code>ArrayList</code>)的最好的算法应用到顺序访问列表(比如 <code>LinkedList</code>)时，会产生二次项行为。鼓励一般的列表算法检查给定的列表是否 <code>instanceof</code> 这个接口，防止在顺序访问列表时使用较差的算法，如果需要保证可接受的性能时可以更改算法。</p>\n<p>公认的是随机和顺序访问的区别通常是模糊的。例如，当一些 <code>List</code> 实现很大时会提供渐进的线性访问时间，但实际是固定的访问时间。这样的 <code>List</code> 实现通常应该实现此接口。通常来说，一个 <code>List</code> 的实现类应该实现这个接口如果</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>, n=list.size(); i &lt; n; i++)</div><div class=\"line\">        list.get(i);</div></pre></td></tr></table></figure>\n<p>比</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (Iterator i=list.iterator(); i.hasNext(); )</div><div class=\"line\">         i.next();</div></pre></td></tr></table></figure>\n<p>快</p>\n<p>##验证事例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.ld.practice.arraylist;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.RandomAccess;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 测试Random Access List(随机访问列表)如 ArrayList 和 Sequence Access List(顺序访问列表)如 LinkedList &lt;/br&gt;</div><div class=\"line\"> * 不同遍历算法的效率&lt;/br&gt;</div><div class=\"line\"> * 结论：前者用循环，后者用迭代器</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@SuppressWarnings</span>(&#123;<span class=\"string\">\"rawtypes\"</span>, <span class=\"string\">\"unchecked\"</span>&#125;)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ListLoopTest</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 初始化 list，添加n个元素</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> list</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">List <span class=\"title\">initList</span><span class=\"params\">(List list, <span class=\"keyword\">int</span> n)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</div><div class=\"line\">\t\t\tlist.add(i);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> list;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 遍历 list，判断是否实现 RandomAccess 接口来使用不同的遍历方法</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> list</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">accessList</span><span class=\"params\">(List list)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> startTime = System.currentTimeMillis();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (list <span class=\"keyword\">instanceof</span> RandomAccess) &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"实现了 RandomAccess 接口...\"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</div><div class=\"line\">\t\t\t\tlist.get(i);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"没实现 RandomAccess 接口...\"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Iterator iterator = list.iterator(); iterator.hasNext();) &#123;</div><div class=\"line\">\t\t\t\titerator.next();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">long</span> endTime = System.currentTimeMillis();</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"遍历时间：\"</span> + (endTime - startTime));</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * loop 遍历 list</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">accessListByLoop</span><span class=\"params\">(List list)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> startTime = System.currentTimeMillis();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</div><div class=\"line\">\t\t\tlist.get(i);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">long</span> endTime = System.currentTimeMillis();</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"loop遍历时间：\"</span> + (endTime - startTime));</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 迭代器遍历</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">accessListByIterator</span><span class=\"params\">(List list)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> startTime = System.currentTimeMillis();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (Iterator iterator = list.iterator(); iterator.hasNext();) &#123;</div><div class=\"line\">\t\t\titerator.next();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">long</span> endTime = System.currentTimeMillis();</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Iterator遍历时间：\"</span> + (endTime - startTime));</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tArrayList&lt;Integer&gt; aList = (ArrayList&lt;Integer&gt;) initList(<span class=\"keyword\">new</span> ArrayList&lt;&gt;(), <span class=\"number\">2000000</span>);</div><div class=\"line\">\t\tLinkedList&lt;Integer&gt; lList = (LinkedList&lt;Integer&gt;) initList(<span class=\"keyword\">new</span> LinkedList&lt;&gt;(), <span class=\"number\">50000</span>);</div><div class=\"line\"></div><div class=\"line\">\t\taccessList(aList);</div><div class=\"line\">\t\taccessList(lList);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"ArrayList\"</span>);</div><div class=\"line\">\t\taccessListByLoop(aList);</div><div class=\"line\">\t\taccessListByIterator(aList);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"LinkedList\"</span>);</div><div class=\"line\">\t\taccessListByLoop(lList);</div><div class=\"line\">\t\taccessListByIterator(lList);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">/*</span></div><div class=\"line\">  实现了 RandomAccess 接口...</div><div class=\"line\">  遍历时间：8</div><div class=\"line\">  没实现 RandomAccess 接口...</div><div class=\"line\">  遍历时间：2</div><div class=\"line\">  ArrayList</div><div class=\"line\">  loop遍历时间：5</div><div class=\"line\">  Iterator遍历时间：8</div><div class=\"line\">  LinkedList</div><div class=\"line\">  loop遍历时间：1532</div><div class=\"line\">  Iterator遍历时间：1</div><div class=\"line\">  */</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>List 实现所使用的标记接口，用来表明其支持快速（通常是固定时间）随机访问。此接口的主要目的是允许一般的算法更改其行为，从而在将其应用到随机或连续访问列表时能提供良好的性能。</p>","more":"<p>##用法</p>\n<p>Random Access List(随机访问列表)如 <code>ArrayList</code> 要实现此接口，Sequence Access List(顺序访问列表)如 <code>LinkedList</code> 不要实现。<br>因为两者的高效遍历算法不同</p>\n<p>通常做法，遍历前先判断：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (list instance of RandomAccess) &#123;       </div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> m = <span class=\"number\">0</span>; m &lt; list.size(); m++)&#123;&#125;   </div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;       </div><div class=\"line\">  Iterator iter = list.iterator();       </div><div class=\"line\">  <span class=\"keyword\">while</span>(iter.hasNext())&#123;&#125;   </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>随机访问列表使用循环遍历，顺序访问列表使用迭代器遍历。</p>\n<p>##JDK 定义</p>\n<p><code>List</code> 实现使用的标记接口，用来表明支持快速(通常是固定时间)随机访问。这个接口的主要目的是允许一般的算法更改它们的行为，从而在随机或连续访问列表时提供更好的性能。</p>\n<p>将操作随机访问列表(比如 <code>ArrayList</code>)的最好的算法应用到顺序访问列表(比如 <code>LinkedList</code>)时，会产生二次项行为。鼓励一般的列表算法检查给定的列表是否 <code>instanceof</code> 这个接口，防止在顺序访问列表时使用较差的算法，如果需要保证可接受的性能时可以更改算法。</p>\n<p>公认的是随机和顺序访问的区别通常是模糊的。例如，当一些 <code>List</code> 实现很大时会提供渐进的线性访问时间，但实际是固定的访问时间。这样的 <code>List</code> 实现通常应该实现此接口。通常来说，一个 <code>List</code> 的实现类应该实现这个接口如果</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>, n=list.size(); i &lt; n; i++)</div><div class=\"line\">        list.get(i);</div></pre></td></tr></table></figure>\n<p>比</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (Iterator i=list.iterator(); i.hasNext(); )</div><div class=\"line\">         i.next();</div></pre></td></tr></table></figure>\n<p>快</p>\n<p>##验证事例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.ld.practice.arraylist;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.RandomAccess;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 测试Random Access List(随机访问列表)如 ArrayList 和 Sequence Access List(顺序访问列表)如 LinkedList &lt;/br&gt;</div><div class=\"line\"> * 不同遍历算法的效率&lt;/br&gt;</div><div class=\"line\"> * 结论：前者用循环，后者用迭代器</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@SuppressWarnings</span>(&#123;<span class=\"string\">\"rawtypes\"</span>, <span class=\"string\">\"unchecked\"</span>&#125;)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ListLoopTest</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 初始化 list，添加n个元素</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> list</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">List <span class=\"title\">initList</span><span class=\"params\">(List list, <span class=\"keyword\">int</span> n)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</div><div class=\"line\">\t\t\tlist.add(i);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> list;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 遍历 list，判断是否实现 RandomAccess 接口来使用不同的遍历方法</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> list</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">accessList</span><span class=\"params\">(List list)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> startTime = System.currentTimeMillis();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (list <span class=\"keyword\">instanceof</span> RandomAccess) &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"实现了 RandomAccess 接口...\"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</div><div class=\"line\">\t\t\t\tlist.get(i);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"没实现 RandomAccess 接口...\"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Iterator iterator = list.iterator(); iterator.hasNext();) &#123;</div><div class=\"line\">\t\t\t\titerator.next();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">long</span> endTime = System.currentTimeMillis();</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"遍历时间：\"</span> + (endTime - startTime));</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * loop 遍历 list</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">accessListByLoop</span><span class=\"params\">(List list)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> startTime = System.currentTimeMillis();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</div><div class=\"line\">\t\t\tlist.get(i);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">long</span> endTime = System.currentTimeMillis();</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"loop遍历时间：\"</span> + (endTime - startTime));</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 迭代器遍历</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">accessListByIterator</span><span class=\"params\">(List list)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> startTime = System.currentTimeMillis();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (Iterator iterator = list.iterator(); iterator.hasNext();) &#123;</div><div class=\"line\">\t\t\titerator.next();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">long</span> endTime = System.currentTimeMillis();</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Iterator遍历时间：\"</span> + (endTime - startTime));</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tArrayList&lt;Integer&gt; aList = (ArrayList&lt;Integer&gt;) initList(<span class=\"keyword\">new</span> ArrayList&lt;&gt;(), <span class=\"number\">2000000</span>);</div><div class=\"line\">\t\tLinkedList&lt;Integer&gt; lList = (LinkedList&lt;Integer&gt;) initList(<span class=\"keyword\">new</span> LinkedList&lt;&gt;(), <span class=\"number\">50000</span>);</div><div class=\"line\"></div><div class=\"line\">\t\taccessList(aList);</div><div class=\"line\">\t\taccessList(lList);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"ArrayList\"</span>);</div><div class=\"line\">\t\taccessListByLoop(aList);</div><div class=\"line\">\t\taccessListByIterator(aList);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"LinkedList\"</span>);</div><div class=\"line\">\t\taccessListByLoop(lList);</div><div class=\"line\">\t\taccessListByIterator(lList);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">/*</span></div><div class=\"line\">  实现了 RandomAccess 接口...</div><div class=\"line\">  遍历时间：8</div><div class=\"line\">  没实现 RandomAccess 接口...</div><div class=\"line\">  遍历时间：2</div><div class=\"line\">  ArrayList</div><div class=\"line\">  loop遍历时间：5</div><div class=\"line\">  Iterator遍历时间：8</div><div class=\"line\">  LinkedList</div><div class=\"line\">  loop遍历时间：1532</div><div class=\"line\">  Iterator遍历时间：1</div><div class=\"line\">  */</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"响应模式","date":"2016-12-20T08:01:55.000Z","description":"html 4 种常见响应模式","_content":"# 常见响应模式\n- 大体流动模型(mostly fluid)\n- 掉落列模型(column drop)\n- 活动布局模型(layout shifter)\n- 画布溢出模型(off canvas)\n\n## 掉落列模型\n\n```css\n<div class=\"container\">\n  <div class=\"box dark_blue\"></div>\n  <div class=\"box light_blue\"></div>\n  <div class=\"box green\"></div>\n</div>\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.box {\n  width: 100%;\n}\n\n@media screen and (min-width: 450px) {\n  .dark-blue {\n    width: 25%;\n  }\n\n  .light-blue {\n    width: 75%;\n  }\n}\n\n@media screen and (min-width: 550px) {\n  .dark-blue,\n  .green {\n    width: 25%;\n  }\n\n  .light-blue {\n    width: 50%;\n  }\n}\n```\n\n## 大体流动模型\n\n```css\n<div class=\"container\">\n  <div class=\"box dark_blue\"></div>\n  <div class=\"box light_blue\"></div>\n  <div class=\"box green\"></div>\n  <div class=\"box red\"></div>\n  <div class=\"box orange\"></div>\n</div>\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.box {\n  width: 100%;\n}\n\n@media screen and (min-width: 450px) {\n  .light-blue,\n  .green {\n    width: 50%;\n  }\n}\n\n@media screen and (min-width: 550px) {\n  .dark-blue,\n  .light-blue {\n    width: 50%;\n  }\n\n  .red,\n  .green,\n  .orange {\n    width: 33.333333%;\n  }\n}\n\n@media screen and (min-width: 700px) {\n  .container {\n    width: 700px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n}\n```\n\n## 活动布局模型\n```css\n<div class=\"container\">\n  <div class=\"box dark_blue\"></div>\n  <div class=\"container\" id=\"container2\">\n    <div class=\"box light_blue\"></div>\n    <div class=\"box green\"></div>\n  </div>\n  <div class=\"box red\"></div>\n</div>\n\n.container {\n  width: 100%;  /* .ddd */\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.box {\n  width: 100%;\n}\n\n@media screen and (min-width: 500px) {\n  .dark-blue {\n    width: 50%;\n  }\n  #container2 {\n    width: 50%;\n  }\n}\n\n@media screen and (min-width: 600px) {\n  .dark-blue {\n    width: 25%;\n    order: 1;\n  }\n  #container2 {\n    width: 50%;\n  }\n  .red {\n    width: 25%;\n    order: -1;\n  }\n}\n```\n\n## 画布溢出模型\n\n```html\n<!DOCTYPE html>\n<!-- saved from url=(0070)http://udacity.github.io/RWDF-samples/Lesson4/patterns/off-canvas.html -->\n<html lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title></title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./off-canvas_files/default-styles.css\">\n    <style type=\"text/css\">\n\n      html, body {\n        height: 100%;\n        width: 100%;\n      }\n      a#menu svg {\n        width: 40px;\n        fill: #000;\n      }\n      nav, main {\n        padding: 1em;\n        box-sizing: border-box;\n      }\n      main {\n        width: 100%;\n        height: 100%;\n      }\n\n\n      /*\n       * Off-canvas layout styles.\n       */\n\n      /* Since we're mobile-first, by default, the drawer is hidden. */\n      nav {\n        width: 300px;\n        height: 100%;\n        position: absolute;\n        /* This trasform moves the drawer off canvas. */\n        -webkit-transform: translate(-300px, 0);\n        transform: translate(-300px, 0);\n        /* Optionally, we animate the drawer. */\n        transition: transform 0.3s ease;\n      }\n      nav.open {\n        -webkit-transform: translate(0, 0);\n        transform: translate(0, 0);\n      }\n\n      /* If there is enough space (> 600px), we keep the drawer open all the time. */\n      @media (min-width: 600px) {\n\n        /* We open the drawer. */\n        nav {\n          position:relative;\n          -webkit-transform: translate(0, 0);\n          transform: translate(0, 0);\n        }\n\n        /* We use Flexbox on the parent. */\n        body {\n          display: -webkit-flex;\n          display: flex;\n          -webkit-flex-flow: row nowrap;\n          flex-flow: row nowrap;\n        }\n\n        main {\n          width: auto;\n          /* Flex-grow streches the main content to fill all available space. */\n          flex-grow: 1;\n        }\n      }\n\n      /* If there is space (> 800px), we keep the drawer open by default. */\n      @media (min-width: 600px) {\n        main > #menu:after {\n          content: 'The drawer stays open if width > 600px';\n        }\n        main p, nav p {\n          text-decoration: line-through;\n        }\n      }\n\n    </style>\n  <link rel=\"import\" href=\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/templates/feedback.html\" id=\"udacity-test-widget\"><script id=\"ud-grader-options\">UdacityFEGradingEngine.turnOn();</script></head>\n  <body>\n    <nav id=\"drawer\" class=\"dark_blue\">\n      <h2>Off Canvas</h2>\n      <p>Click outside the drawer to close</p>\n    </nav>\n\n    <main class=\"light_blue\">\n      <a id=\"menu\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path d=\"M2 6h20v3H2zm0 5h20v3H2zm0 5h20v3H2z\"></path>\n        </svg>\n      </a>\n      <p>Click on the menu icon to open the drawer</p>\n    </main>\n\n    <script>\n      /*\n       * Open the drawer when the menu ison is clicked.\n       */\n      var menu = document.querySelector('#menu');\n      var main = document.querySelector('main');\n      var drawer = document.querySelector('#drawer');\n\n      menu.addEventListener('click', function(e) {\n        drawer.classList.toggle('open');\n        e.stopPropagation();\n      });\n      main.addEventListener('click', function() {\n        drawer.classList.remove('open');\n      });\n\n    </script><script src=\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/js/libs/GE.js\" id=\"udacity-front-end-feedback\"></script><test-widget></test-widget></body></html>\n```\n\n```css\n@import url(https://fonts.googleapis.com/css?family=Roboto);\n\nhtml, body {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-family: 'Roboto', sans-serif;\n}\n\n.title {\n  font-size: 2.5em;\n  text-align: center;\n}\n\n.box {\n  min-height: 150px;\n}\n\n.dark_blue {\n  background-color: #2A457A;\n  color: #efefef;\n}\n\n.light_blue {\n  background-color: #099DD9;\n}\n\n.green {\n  background-color: #0C8542;\n}\n\n.lime {\n  background-color: rgb(179, 210, 52);\n}\n\n.seafoam {\n  background-color: rgb(77, 190, 161);\n}\n\n.red {\n  background-color: #EC1D3B;\n}\n\n.orange {\n  background-color: #F79420;\n}\n```\n","source":"_posts/xyms.md","raw":"---\ntitle: 响应模式\ndate: 2016-12-20 16:01:55\ntags: html\ndescription: html 4 种常见响应模式\n---\n# 常见响应模式\n- 大体流动模型(mostly fluid)\n- 掉落列模型(column drop)\n- 活动布局模型(layout shifter)\n- 画布溢出模型(off canvas)\n\n## 掉落列模型\n\n```css\n<div class=\"container\">\n  <div class=\"box dark_blue\"></div>\n  <div class=\"box light_blue\"></div>\n  <div class=\"box green\"></div>\n</div>\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.box {\n  width: 100%;\n}\n\n@media screen and (min-width: 450px) {\n  .dark-blue {\n    width: 25%;\n  }\n\n  .light-blue {\n    width: 75%;\n  }\n}\n\n@media screen and (min-width: 550px) {\n  .dark-blue,\n  .green {\n    width: 25%;\n  }\n\n  .light-blue {\n    width: 50%;\n  }\n}\n```\n\n## 大体流动模型\n\n```css\n<div class=\"container\">\n  <div class=\"box dark_blue\"></div>\n  <div class=\"box light_blue\"></div>\n  <div class=\"box green\"></div>\n  <div class=\"box red\"></div>\n  <div class=\"box orange\"></div>\n</div>\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.box {\n  width: 100%;\n}\n\n@media screen and (min-width: 450px) {\n  .light-blue,\n  .green {\n    width: 50%;\n  }\n}\n\n@media screen and (min-width: 550px) {\n  .dark-blue,\n  .light-blue {\n    width: 50%;\n  }\n\n  .red,\n  .green,\n  .orange {\n    width: 33.333333%;\n  }\n}\n\n@media screen and (min-width: 700px) {\n  .container {\n    width: 700px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n}\n```\n\n## 活动布局模型\n```css\n<div class=\"container\">\n  <div class=\"box dark_blue\"></div>\n  <div class=\"container\" id=\"container2\">\n    <div class=\"box light_blue\"></div>\n    <div class=\"box green\"></div>\n  </div>\n  <div class=\"box red\"></div>\n</div>\n\n.container {\n  width: 100%;  /* .ddd */\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.box {\n  width: 100%;\n}\n\n@media screen and (min-width: 500px) {\n  .dark-blue {\n    width: 50%;\n  }\n  #container2 {\n    width: 50%;\n  }\n}\n\n@media screen and (min-width: 600px) {\n  .dark-blue {\n    width: 25%;\n    order: 1;\n  }\n  #container2 {\n    width: 50%;\n  }\n  .red {\n    width: 25%;\n    order: -1;\n  }\n}\n```\n\n## 画布溢出模型\n\n```html\n<!DOCTYPE html>\n<!-- saved from url=(0070)http://udacity.github.io/RWDF-samples/Lesson4/patterns/off-canvas.html -->\n<html lang=\"en\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title></title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./off-canvas_files/default-styles.css\">\n    <style type=\"text/css\">\n\n      html, body {\n        height: 100%;\n        width: 100%;\n      }\n      a#menu svg {\n        width: 40px;\n        fill: #000;\n      }\n      nav, main {\n        padding: 1em;\n        box-sizing: border-box;\n      }\n      main {\n        width: 100%;\n        height: 100%;\n      }\n\n\n      /*\n       * Off-canvas layout styles.\n       */\n\n      /* Since we're mobile-first, by default, the drawer is hidden. */\n      nav {\n        width: 300px;\n        height: 100%;\n        position: absolute;\n        /* This trasform moves the drawer off canvas. */\n        -webkit-transform: translate(-300px, 0);\n        transform: translate(-300px, 0);\n        /* Optionally, we animate the drawer. */\n        transition: transform 0.3s ease;\n      }\n      nav.open {\n        -webkit-transform: translate(0, 0);\n        transform: translate(0, 0);\n      }\n\n      /* If there is enough space (> 600px), we keep the drawer open all the time. */\n      @media (min-width: 600px) {\n\n        /* We open the drawer. */\n        nav {\n          position:relative;\n          -webkit-transform: translate(0, 0);\n          transform: translate(0, 0);\n        }\n\n        /* We use Flexbox on the parent. */\n        body {\n          display: -webkit-flex;\n          display: flex;\n          -webkit-flex-flow: row nowrap;\n          flex-flow: row nowrap;\n        }\n\n        main {\n          width: auto;\n          /* Flex-grow streches the main content to fill all available space. */\n          flex-grow: 1;\n        }\n      }\n\n      /* If there is space (> 800px), we keep the drawer open by default. */\n      @media (min-width: 600px) {\n        main > #menu:after {\n          content: 'The drawer stays open if width > 600px';\n        }\n        main p, nav p {\n          text-decoration: line-through;\n        }\n      }\n\n    </style>\n  <link rel=\"import\" href=\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/templates/feedback.html\" id=\"udacity-test-widget\"><script id=\"ud-grader-options\">UdacityFEGradingEngine.turnOn();</script></head>\n  <body>\n    <nav id=\"drawer\" class=\"dark_blue\">\n      <h2>Off Canvas</h2>\n      <p>Click outside the drawer to close</p>\n    </nav>\n\n    <main class=\"light_blue\">\n      <a id=\"menu\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path d=\"M2 6h20v3H2zm0 5h20v3H2zm0 5h20v3H2z\"></path>\n        </svg>\n      </a>\n      <p>Click on the menu icon to open the drawer</p>\n    </main>\n\n    <script>\n      /*\n       * Open the drawer when the menu ison is clicked.\n       */\n      var menu = document.querySelector('#menu');\n      var main = document.querySelector('main');\n      var drawer = document.querySelector('#drawer');\n\n      menu.addEventListener('click', function(e) {\n        drawer.classList.toggle('open');\n        e.stopPropagation();\n      });\n      main.addEventListener('click', function() {\n        drawer.classList.remove('open');\n      });\n\n    </script><script src=\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/js/libs/GE.js\" id=\"udacity-front-end-feedback\"></script><test-widget></test-widget></body></html>\n```\n\n```css\n@import url(https://fonts.googleapis.com/css?family=Roboto);\n\nhtml, body {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-family: 'Roboto', sans-serif;\n}\n\n.title {\n  font-size: 2.5em;\n  text-align: center;\n}\n\n.box {\n  min-height: 150px;\n}\n\n.dark_blue {\n  background-color: #2A457A;\n  color: #efefef;\n}\n\n.light_blue {\n  background-color: #099DD9;\n}\n\n.green {\n  background-color: #0C8542;\n}\n\n.lime {\n  background-color: rgb(179, 210, 52);\n}\n\n.seafoam {\n  background-color: rgb(77, 190, 161);\n}\n\n.red {\n  background-color: #EC1D3B;\n}\n\n.orange {\n  background-color: #F79420;\n}\n```\n","slug":"xyms","published":1,"updated":"2017-05-22T08:05:24.439Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43vzq1i0006np6um3nueksa","content":"<h1 id=\"常见响应模式\"><a href=\"#常见响应模式\" class=\"headerlink\" title=\"常见响应模式\"></a>常见响应模式</h1><ul>\n<li>大体流动模型(mostly fluid)</li>\n<li>掉落列模型(column drop)</li>\n<li>活动布局模型(layout shifter)</li>\n<li>画布溢出模型(off canvas)</li>\n</ul>\n<h2 id=\"掉落列模型\"><a href=\"#掉落列模型\" class=\"headerlink\" title=\"掉落列模型\"></a>掉落列模型</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"container\"&gt;</div><div class=\"line\">  &lt;div class=\"box dark_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box light_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box green\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.container &#123;</div><div class=\"line\">  display: flex;</div><div class=\"line\">  flex-wrap: wrap;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.box &#123;</div><div class=\"line\">  width: 100%;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 450px) &#123;</div><div class=\"line\">  .dark-blue &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  .light-blue &#123;</div><div class=\"line\">    width: 75%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 550px) &#123;</div><div class=\"line\">  .dark-blue,</div><div class=\"line\">  .green &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  .light-blue &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"大体流动模型\"><a href=\"#大体流动模型\" class=\"headerlink\" title=\"大体流动模型\"></a>大体流动模型</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"container\"&gt;</div><div class=\"line\">  &lt;div class=\"box dark_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box light_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box green\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box red\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box orange\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.container &#123;</div><div class=\"line\">  display: flex;</div><div class=\"line\">  flex-wrap: wrap;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.box &#123;</div><div class=\"line\">  width: 100%;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 450px) &#123;</div><div class=\"line\">  .light-blue,</div><div class=\"line\">  .green &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 550px) &#123;</div><div class=\"line\">  .dark-blue,</div><div class=\"line\">  .light-blue &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  .red,</div><div class=\"line\">  .green,</div><div class=\"line\">  .orange &#123;</div><div class=\"line\">    width: 33.333333%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 700px) &#123;</div><div class=\"line\">  .container &#123;</div><div class=\"line\">    width: 700px;</div><div class=\"line\">    margin-left: auto;</div><div class=\"line\">    margin-right: auto;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"活动布局模型\"><a href=\"#活动布局模型\" class=\"headerlink\" title=\"活动布局模型\"></a>活动布局模型</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"container\"&gt;</div><div class=\"line\">  &lt;div class=\"box dark_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"container\" id=\"container2\"&gt;</div><div class=\"line\">    &lt;div class=\"box light_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"box green\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box red\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.container &#123;</div><div class=\"line\">  width: 100%;  /* .ddd */</div><div class=\"line\">  display: flex;</div><div class=\"line\">  flex-wrap: wrap;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.box &#123;</div><div class=\"line\">  width: 100%;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 500px) &#123;</div><div class=\"line\">  .dark-blue &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">  #container2 &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 600px) &#123;</div><div class=\"line\">  .dark-blue &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">    order: 1;</div><div class=\"line\">  &#125;</div><div class=\"line\">  #container2 &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">  .red &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">    order: -1;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"画布溢出模型\"><a href=\"#画布溢出模型\" class=\"headerlink\" title=\"画布溢出模型\"></a>画布溢出模型</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- saved from url=(0070)http://udacity.github.io/RWDF-samples/Lesson4/patterns/off-canvas.html --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=UTF-8\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"./off-canvas_files/default-styles.css\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></span></div><div class=\"line\"></div><div class=\"line\">      <span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">a</span><span class=\"selector-id\">#menu</span> <span class=\"selector-tag\">svg</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</div><div class=\"line\">        <span class=\"attribute\">fill</span>: <span class=\"number\">#000</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">nav</span>, <span class=\"selector-tag\">main</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">padding</span>: <span class=\"number\">1em</span>;</div><div class=\"line\">        <span class=\"attribute\">box-sizing</span>: border-box;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">main</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/*</span></div><div class=\"line\">       * Off-canvas layout styles.</div><div class=\"line\">       */</div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/* Since we're mobile-first, by default, the drawer is hidden. */</span></div><div class=\"line\">      <span class=\"selector-tag\">nav</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">        <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">        <span class=\"comment\">/* This trasform moves the drawer off canvas. */</span></div><div class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(-300px, 0);</div><div class=\"line\">        <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-300px, 0);</div><div class=\"line\">        <span class=\"comment\">/* Optionally, we animate the drawer. */</span></div><div class=\"line\">        <span class=\"attribute\">transition</span>: transform <span class=\"number\">0.3s</span> ease;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">nav</span><span class=\"selector-class\">.open</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">        <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/* If there is enough space (&gt; 600px), we keep the drawer open all the time. */</span></div><div class=\"line\">      @<span class=\"keyword\">media</span> (min-width: <span class=\"number\">600px</span>) &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/* We open the drawer. */</span></div><div class=\"line\">        <span class=\"selector-tag\">nav</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">position</span>:relative;</div><div class=\"line\">          <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">          <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/* We use Flexbox on the parent. */</span></div><div class=\"line\">        <span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">display</span>: -webkit-flex;</div><div class=\"line\">          <span class=\"attribute\">display</span>: flex;</div><div class=\"line\">          <span class=\"attribute\">-webkit-flex-flow</span>: row nowrap;</div><div class=\"line\">          <span class=\"attribute\">flex-flow</span>: row nowrap;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"selector-tag\">main</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">width</span>: auto;</div><div class=\"line\">          <span class=\"comment\">/* Flex-grow streches the main content to fill all available space. */</span></div><div class=\"line\">          <span class=\"attribute\">flex-grow</span>: <span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/* If there is space (&gt; 800px), we keep the drawer open by default. */</span></div><div class=\"line\">      @<span class=\"keyword\">media</span> (min-width: <span class=\"number\">600px</span>) &#123;</div><div class=\"line\">        <span class=\"selector-tag\">main</span> &gt; <span class=\"selector-id\">#menu</span><span class=\"selector-pseudo\">:after</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">content</span>: <span class=\"string\">'The drawer stays open if width &gt; 600px'</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"selector-tag\">main</span> <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">p</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">text-decoration</span>: line-through;</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"import\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/templates/feedback.html\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"udacity-test-widget\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ud-grader-options\"</span>&gt;</span><span class=\"undefined\">UdacityFEGradingEngine.turnOn();</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">id</span>=<span class=\"string\">\"drawer\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dark_blue\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Off Canvas<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Click outside the drawer to close<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">main</span> <span class=\"attr\">class</span>=<span class=\"string\">\"light_blue\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">\"menu\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/2000/svg\"</span> <span class=\"attr\">viewBox</span>=<span class=\"string\">\"0 0 24 24\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">d</span>=<span class=\"string\">\"M2 6h20v3H2zm0 5h20v3H2zm0 5h20v3H2z\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">path</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Click on the menu icon to open the drawer<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">      <span class=\"comment\">/*</span></div><div class=\"line\">       * Open the drawer when the menu ison is clicked.</div><div class=\"line\">       */</div><div class=\"line\">      <span class=\"keyword\">var</span> menu = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#menu'</span>);</div><div class=\"line\">      <span class=\"keyword\">var</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'main'</span>);</div><div class=\"line\">      <span class=\"keyword\">var</span> drawer = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#drawer'</span>);</div><div class=\"line\"></div><div class=\"line\">      menu.addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">        drawer.classList.toggle(<span class=\"string\">'open'</span>);</div><div class=\"line\">        e.stopPropagation();</div><div class=\"line\">      &#125;);</div><div class=\"line\">      main.addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        drawer.classList.remove(<span class=\"string\">'open'</span>);</div><div class=\"line\">      &#125;);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/js/libs/GE.js\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"udacity-front-end-feedback\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">test-widget</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">test-widget</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">import</span> url(https://fonts.googleapis.com/css?family=Roboto);</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Roboto'</span>, sans-serif;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.title</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2.5em</span>;</div><div class=\"line\">  <span class=\"attribute\">text-align</span>: center;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">150px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.dark_blue</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#2A457A</span>;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#efefef</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.light_blue</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#099DD9</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.green</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#0C8542</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.lime</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(179, 210, 52);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.seafoam</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(77, 190, 161);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.red</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#EC1D3B</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.orange</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#F79420</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"常见响应模式\"><a href=\"#常见响应模式\" class=\"headerlink\" title=\"常见响应模式\"></a>常见响应模式</h1><ul>\n<li>大体流动模型(mostly fluid)</li>\n<li>掉落列模型(column drop)</li>\n<li>活动布局模型(layout shifter)</li>\n<li>画布溢出模型(off canvas)</li>\n</ul>\n<h2 id=\"掉落列模型\"><a href=\"#掉落列模型\" class=\"headerlink\" title=\"掉落列模型\"></a>掉落列模型</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"container\"&gt;</div><div class=\"line\">  &lt;div class=\"box dark_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box light_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box green\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.container &#123;</div><div class=\"line\">  display: flex;</div><div class=\"line\">  flex-wrap: wrap;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.box &#123;</div><div class=\"line\">  width: 100%;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 450px) &#123;</div><div class=\"line\">  .dark-blue &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  .light-blue &#123;</div><div class=\"line\">    width: 75%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 550px) &#123;</div><div class=\"line\">  .dark-blue,</div><div class=\"line\">  .green &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  .light-blue &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"大体流动模型\"><a href=\"#大体流动模型\" class=\"headerlink\" title=\"大体流动模型\"></a>大体流动模型</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"container\"&gt;</div><div class=\"line\">  &lt;div class=\"box dark_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box light_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box green\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box red\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box orange\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.container &#123;</div><div class=\"line\">  display: flex;</div><div class=\"line\">  flex-wrap: wrap;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.box &#123;</div><div class=\"line\">  width: 100%;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 450px) &#123;</div><div class=\"line\">  .light-blue,</div><div class=\"line\">  .green &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 550px) &#123;</div><div class=\"line\">  .dark-blue,</div><div class=\"line\">  .light-blue &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  .red,</div><div class=\"line\">  .green,</div><div class=\"line\">  .orange &#123;</div><div class=\"line\">    width: 33.333333%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 700px) &#123;</div><div class=\"line\">  .container &#123;</div><div class=\"line\">    width: 700px;</div><div class=\"line\">    margin-left: auto;</div><div class=\"line\">    margin-right: auto;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"活动布局模型\"><a href=\"#活动布局模型\" class=\"headerlink\" title=\"活动布局模型\"></a>活动布局模型</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"container\"&gt;</div><div class=\"line\">  &lt;div class=\"box dark_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"container\" id=\"container2\"&gt;</div><div class=\"line\">    &lt;div class=\"box light_blue\"&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;div class=\"box green\"&gt;&lt;/div&gt;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">  &lt;div class=\"box red\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.container &#123;</div><div class=\"line\">  width: 100%;  /* .ddd */</div><div class=\"line\">  display: flex;</div><div class=\"line\">  flex-wrap: wrap;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.box &#123;</div><div class=\"line\">  width: 100%;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 500px) &#123;</div><div class=\"line\">  .dark-blue &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">  #container2 &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (min-width: 600px) &#123;</div><div class=\"line\">  .dark-blue &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">    order: 1;</div><div class=\"line\">  &#125;</div><div class=\"line\">  #container2 &#123;</div><div class=\"line\">    width: 50%;</div><div class=\"line\">  &#125;</div><div class=\"line\">  .red &#123;</div><div class=\"line\">    width: 25%;</div><div class=\"line\">    order: -1;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"画布溢出模型\"><a href=\"#画布溢出模型\" class=\"headerlink\" title=\"画布溢出模型\"></a>画布溢出模型</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- saved from url=(0070)http://udacity.github.io/RWDF-samples/Lesson4/patterns/off-canvas.html --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=UTF-8\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"./off-canvas_files/default-styles.css\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></span></div><div class=\"line\"></div><div class=\"line\">      <span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">a</span><span class=\"selector-id\">#menu</span> <span class=\"selector-tag\">svg</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</div><div class=\"line\">        <span class=\"attribute\">fill</span>: <span class=\"number\">#000</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">nav</span>, <span class=\"selector-tag\">main</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">padding</span>: <span class=\"number\">1em</span>;</div><div class=\"line\">        <span class=\"attribute\">box-sizing</span>: border-box;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">main</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/*</span></div><div class=\"line\">       * Off-canvas layout styles.</div><div class=\"line\">       */</div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/* Since we're mobile-first, by default, the drawer is hidden. */</span></div><div class=\"line\">      <span class=\"selector-tag\">nav</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</div><div class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">        <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">        <span class=\"comment\">/* This trasform moves the drawer off canvas. */</span></div><div class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(-300px, 0);</div><div class=\"line\">        <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-300px, 0);</div><div class=\"line\">        <span class=\"comment\">/* Optionally, we animate the drawer. */</span></div><div class=\"line\">        <span class=\"attribute\">transition</span>: transform <span class=\"number\">0.3s</span> ease;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-tag\">nav</span><span class=\"selector-class\">.open</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">        <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/* If there is enough space (&gt; 600px), we keep the drawer open all the time. */</span></div><div class=\"line\">      @<span class=\"keyword\">media</span> (min-width: <span class=\"number\">600px</span>) &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/* We open the drawer. */</span></div><div class=\"line\">        <span class=\"selector-tag\">nav</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">position</span>:relative;</div><div class=\"line\">          <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">          <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(0, 0);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/* We use Flexbox on the parent. */</span></div><div class=\"line\">        <span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">display</span>: -webkit-flex;</div><div class=\"line\">          <span class=\"attribute\">display</span>: flex;</div><div class=\"line\">          <span class=\"attribute\">-webkit-flex-flow</span>: row nowrap;</div><div class=\"line\">          <span class=\"attribute\">flex-flow</span>: row nowrap;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"selector-tag\">main</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">width</span>: auto;</div><div class=\"line\">          <span class=\"comment\">/* Flex-grow streches the main content to fill all available space. */</span></div><div class=\"line\">          <span class=\"attribute\">flex-grow</span>: <span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">/* If there is space (&gt; 800px), we keep the drawer open by default. */</span></div><div class=\"line\">      @<span class=\"keyword\">media</span> (min-width: <span class=\"number\">600px</span>) &#123;</div><div class=\"line\">        <span class=\"selector-tag\">main</span> &gt; <span class=\"selector-id\">#menu</span><span class=\"selector-pseudo\">:after</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">content</span>: <span class=\"string\">'The drawer stays open if width &gt; 600px'</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"selector-tag\">main</span> <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">p</span> &#123;</div><div class=\"line\">          <span class=\"attribute\">text-decoration</span>: line-through;</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"import\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/templates/feedback.html\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"udacity-test-widget\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ud-grader-options\"</span>&gt;</span><span class=\"undefined\">UdacityFEGradingEngine.turnOn();</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">id</span>=<span class=\"string\">\"drawer\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dark_blue\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Off Canvas<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Click outside the drawer to close<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">main</span> <span class=\"attr\">class</span>=<span class=\"string\">\"light_blue\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">\"menu\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/2000/svg\"</span> <span class=\"attr\">viewBox</span>=<span class=\"string\">\"0 0 24 24\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">d</span>=<span class=\"string\">\"M2 6h20v3H2zm0 5h20v3H2zm0 5h20v3H2z\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">path</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Click on the menu icon to open the drawer<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">      <span class=\"comment\">/*</span></div><div class=\"line\">       * Open the drawer when the menu ison is clicked.</div><div class=\"line\">       */</div><div class=\"line\">      <span class=\"keyword\">var</span> menu = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#menu'</span>);</div><div class=\"line\">      <span class=\"keyword\">var</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'main'</span>);</div><div class=\"line\">      <span class=\"keyword\">var</span> drawer = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#drawer'</span>);</div><div class=\"line\"></div><div class=\"line\">      menu.addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">        drawer.classList.toggle(<span class=\"string\">'open'</span>);</div><div class=\"line\">        e.stopPropagation();</div><div class=\"line\">      &#125;);</div><div class=\"line\">      main.addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        drawer.classList.remove(<span class=\"string\">'open'</span>);</div><div class=\"line\">      &#125;);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"chrome-extension://melpgahbngpgnbhhccnopmlmpbmdaeoi/app/js/libs/GE.js\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"udacity-front-end-feedback\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">test-widget</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">test-widget</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">import</span> url(https://fonts.googleapis.com/css?family=Roboto);</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Roboto'</span>, sans-serif;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.title</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2.5em</span>;</div><div class=\"line\">  <span class=\"attribute\">text-align</span>: center;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">150px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.dark_blue</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#2A457A</span>;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#efefef</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.light_blue</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#099DD9</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.green</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#0C8542</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.lime</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(179, 210, 52);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.seafoam</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(77, 190, 161);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.red</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#EC1D3B</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.orange</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#F79420</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj43vzq190002np6u6rgl0wim","tag_id":"cj43vzq1e0004np6ubaea9ai6","_id":"cj43vzq1k0008np6urqz1ffiu"},{"post_id":"cj43vzq1c0003np6ugen6i2jp","tag_id":"cj43vzq1k0007np6uzcc2xofl","_id":"cj43vzq1l000anp6u6kln5zop"},{"post_id":"cj43vzq1g0005np6urax7mvi7","tag_id":"cj43vzq1l0009np6uugqslovl","_id":"cj43vzq1m000cnp6u4rakxfmi"},{"post_id":"cj43vzq1i0006np6um3nueksa","tag_id":"cj43vzq1m000bnp6u51vluvt1","_id":"cj43vzq1m000dnp6uzhlfams6"}],"Tag":[{"name":"aspect","_id":"cj43vzq1e0004np6ubaea9ai6"},{"name":"github-pages","_id":"cj43vzq1k0007np6uzcc2xofl"},{"name":"java","_id":"cj43vzq1l0009np6uugqslovl"},{"name":"html","_id":"cj43vzq1m000bnp6u51vluvt1"}]}}